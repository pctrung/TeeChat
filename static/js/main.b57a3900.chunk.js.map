{"version":3,"sources":["app/chatSlice.js","app/appSlice.js","app/userSlice.js","app/store.js","components/Loader/index.jsx","components/Button/index.jsx","components/Popup/index.jsx","assets/img/default-avatar.jpg","components/ImageCircle/index.jsx","utils/Constant.js","components/ChatList/index.jsx","assets/icons/info-icon.svg","assets/icons/left-arrow-icon.svg","assets/icons/emoji.svg","assets/icons/image-icon.svg","assets/icons/send-icon.svg","components/ClickableIcon/index.jsx","hooks/useApi.js","hooks/useChatApi.js","components/ChatInput/index.jsx","components/ConfirmModal/index.jsx","hooks/useUserApi.js","components/EditChat/index.jsx","components/ChatWindow/index.jsx","hooks/useMessagePagination.js","components/CreateChat/index.jsx","components/UserInfo/index.jsx","hooks/useDarkMode.js","components/Header/index.jsx","logo.png","pages/Chat/index.jsx","assets/img/forbid.jpg","pages/Forbid/index.jsx","assets/img/login-page.jpg","pages/Login/index.jsx","assets/img/not-found.jpg","pages/NotFound/index.jsx","pages/Register/index.jsx","assets/img/error.jpg","pages/ServerError/index.jsx","App.js","index.js"],"names":["chats","createSlice","name","initialState","reducers","addChat","state","action","some","chat","id","payload","push","editChat","updatedChat","index","findIndex","participants","editGroupAvatar","updatedChatId","chatId","groupAvatarUrl","addReadByUserName","readByUserName","readByUserNames","includes","appendMessageToChat","chatToAppend","messagesToAppend","messages","totalRecords","limit","page","pageCount","keyword","concat","refreshChats","addMessage","newMessage","message","SenderUserName","addNotification","numOfUnreadMessages","readChat","selectedId","setSelectedId","reducer","combineReducers","actions","isLoading","setIsLoading","popup","isOpen","content","title","setPopup","currentUser","getCurrentUser","user","token","window","localStorage","getItem","jwt","decodeCurrentUser","updateUser","userName","onlineUserNameList","updateOnlineUserNameList","rootReducer","chatReducer","app","appReducer","users","store","configureStore","Loader","className","circleCommonClasses","useState","isEnding","setIsEnding","useEffect","Button","outline","onClick","onBlur","disabled","Popup","ImageCircle","onlineSize","avatarSize","src","DefaultAvatar","alt","size","useSelector","isCurrentUser","isOnline","filter","x","map","DefaultName","ChatType","ChatList","dispatch","useDispatch","setKeyword","type","placeholder","onChange","e","target","value","getCurrentChats","currentUserName","friend","length","shift","lastMessage","reduce","a","b","dateCreated","handleClick","avatarUrl","fullName","moment","Date","fromNow","replace","trim","now","result","sort","chatA","chatB","lastMessageA","lastMessageB","sortChat","toLowerCase","searchChat","ClickableIcon","icon","iconClass","useApi","history","useHistory","Api","axios","create","baseURL","process","timeout","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","newConfig","Authorization","response","data","error","status","removeItem","errors","obj","str","Object","values","val","toString","substring","objToString","Promise","reject","baseApiUrl","useChatApi","getAll","url","get","getById","sendMessage","post","patch","sendImage","updateGroupAvatar","createGroupChat","groupName","updateGroupChat","newGroupName","createPrivateChat","ChatInput","setContent","isOpenEmoji","setIsOpenEmoji","ref","useRef","chatApi","preventDefault","file","files","formData","FormData","append","checkIfClickedOutside","current","contains","document","addEventListener","removeEventListener","onSubmit","onSendMessage","hidden","accept","htmlFor","ImageIcon","position","EmojiIcon","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","SendIconNormal","ConfirmModal","closeAction","confirmButtonTitle","confirmButtonAction","useUserApi","login","register","firstName","lastName","checkUserNameExists","getFriendList","put","EditChat","setIsOpen","isOpenModal","setIsOpenModal","modalContent","setModalContent","setGroupName","isValidButton","setIsValidButton","friendList","setFriendList","isOpenFriendList","setIsOpenFriendList","selectedFriendList","setSelectedFriendList","userApi","friendListRef","currentParticipantUserNames","selectedParticipantUserNames","participantFullNamesToAdd","participantFullNamesToRemove","participantUserNamesToRemove","forEach","openModal","submitEditChat","participantUserNamesToAdd","closeModal","then","openPopup","onFocus","autoComplete","selected","localeCompare","Math","random","i","splice","creatorFullName","format","handleEditChat","ChatWindow","showTimeIndexes","setShowTimeIndexes","isOpenInfoPopup","setIsOpenInfoPopup","setFriend","seenBy","setSeenBy","handleMessageClick","setPage","currentChat","loading","setLoading","setError","appendChat","setAppendChat","hasMore","setHasMore","catch","useMessagePagination","endMessageRef","res","newFriend","newSeenBy","fullNameList","join","scrollIntoView","LeftArrowIcon","InfoIcon","prevPage","messageA","messageB","senderUserName","calendar","imageUrl","senderFullName","CreateChat","selectedMode","setSelectedMode","participantUserNames","participantUserName","handleCreateGroup","UserInfo","setFirstName","setLastName","avatar","setAvatar","submit","useDarkMode","darkMode","setDarkMode","documentElement","classList","add","setItem","remove","Header","logout","isOpenCreateChat","setIsOpenCreateChat","isOpenUserInfo","setIsOpenUserInfo","confirmModal","setConfirmModal","userAvatar","isOpenMenu","setIsOpenMenu","openConfirmModal","Chat","connection","setConnection","stop","console","fetchData","newConnection","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","build","connectionStarted","start","on","creatorUserName","find","Logo","Forbid","ForbidImg","to","Login","username","setUsername","password","setPassword","isDirty","setIsDirty","LoginPageImage","NotFound","NotFoundImg","Register","isChanged","setIsChanged","isExistsUserName","setIsExistsUserName","schema","yup","shape","required","min","max","test","checkRegex","email","confirmPassword","watch","useForm","resolver","yupResolver","defaultValues","handleSubmit","control","clearErrors","reset","formState","useWatch","isExists","shouldFocus","regex","RegExp","ServerError","ErrorImg","App","basename","path","component","PrivateRoute","exact","Component","rest","isLogin","render","props","pathname","from","location","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b57a3900.chunk.js","sourcesContent":["import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst chats = createSlice({\r\n  name: \"chats\",\r\n  initialState: [],\r\n  reducers: {\r\n    addChat: (state, action) => {\r\n      var isExists = state.some((chat) => chat.id === action.payload.id);\r\n      if (!isExists) {\r\n        state.push(action.payload);\r\n      }\r\n    },\r\n    editChat: (state, action) => {\r\n      const updatedChat = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChat.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].name = updatedChat.name;\r\n        state[index].participants = updatedChat.participants;\r\n      } else {\r\n        state.push(updatedChat);\r\n      }\r\n    },\r\n    editGroupAvatar: (state, action) => {\r\n      const updatedChatId = action.payload.chatId;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].groupAvatarUrl = action.payload?.groupAvatarUrl;\r\n      }\r\n    },\r\n    addReadByUserName: (state, action) => {\r\n      const { chatId, readByUserName } = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatId;\r\n      });\r\n      if (index >= 0) {\r\n        if (!state[index].readByUserNames.includes(readByUserName)) {\r\n          state[index].readByUserNames.push(readByUserName);\r\n        }\r\n      }\r\n    },\r\n    appendMessageToChat: (state, action) => {\r\n      const chatToAppend = action.payload;\r\n      const messagesToAppend = chatToAppend?.messages;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatToAppend.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].totalRecords = chatToAppend.totalRecords;\r\n        state[index].limit = chatToAppend.limit;\r\n        state[index].page = chatToAppend.page;\r\n        state[index].pageCount = chatToAppend.pageCount;\r\n        if (chatToAppend.keyword) {\r\n          state[index].messages = messagesToAppend;\r\n        } else {\r\n          state[index].messages =\r\n            state[index].messages.concat(messagesToAppend);\r\n        }\r\n      }\r\n    },\r\n    refreshChats: (state, action) => {\r\n      state = action.payload ?? [];\r\n      return state;\r\n    },\r\n    addMessage: (state, action) => {\r\n      const newMessage = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === newMessage.chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].messages.push(newMessage?.message);\r\n        state[index].readByUserNames = [newMessage?.SenderUserName];\r\n      }\r\n    },\r\n    addNotification: (state, action) => {\r\n      const chatId = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].numOfUnreadMessages += 1;\r\n      }\r\n    },\r\n    readChat: (state, action) => {\r\n      const chatId = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].numOfUnreadMessages = 0;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst selectedId = createSlice({\r\n  name: \"selectedId\",\r\n  initialState: 0,\r\n  reducers: {\r\n    setSelectedId: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  chats: chats.reducer,\r\n  selectedId: selectedId.reducer,\r\n});\r\n\r\nexport const {\r\n  addChat,\r\n  editChat,\r\n  refreshChats,\r\n  addMessage,\r\n  appendMessageToChat,\r\n  editGroupAvatar,\r\n  readChat,\r\n  addNotification,\r\n  addReadByUserName,\r\n} = chats.actions;\r\nexport const { setSelectedId } = selectedId.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst isLoading = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst popup = createSlice({\r\n  name: \"popup\",\r\n  initialState: {\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  },\r\n  reducers: {\r\n    setPopup: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  isLoading: isLoading.reducer,\r\n  popup: popup.reducer,\r\n});\r\n\r\nexport const { setIsLoading } = isLoading.actions;\r\nexport const { setPopup } = popup.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nconst currentUser = createSlice({\r\n  name: \"currentUser\",\r\n  initialState: {},\r\n  reducers: {\r\n    getCurrentUser: (state, action) => {\r\n      var user = decodeCurrentUser();\r\n      if (user) {\r\n        state = user;\r\n        return state;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      if (action.payload.userName) {\r\n        state = action.payload;\r\n        return state;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst onlineUserNameList = createSlice({\r\n  name: \"onlineUserNameList\",\r\n  initialState: [],\r\n  reducers: {\r\n    updateOnlineUserNameList: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  currentUser: currentUser.reducer,\r\n  onlineUserNameList: onlineUserNameList.reducer,\r\n});\r\n\r\nexport const { getCurrentUser, updateUser } = currentUser.actions;\r\nexport const { updateOnlineUserNameList } = onlineUserNameList.actions;\r\nexport default reducer;\r\n\r\nfunction decodeCurrentUser() {\r\n  var token = window.localStorage.getItem(\"token\");\r\n  if (token) {\r\n    const user = jwt(token);\r\n    return user;\r\n  }\r\n  return false;\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport chatReducer from \"app/chatSlice\";\r\nimport appReducer from \"app/appSlice\";\r\nimport userReducer from \"app/userSlice\";\r\n\r\nconst rootReducer = {\r\n  chats: chatReducer,\r\n  app: appReducer,\r\n  users: userReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\n// import Logo from \"logo.png\";\r\n\r\nconst Loader = ({ className, isOpen = true }) => {\r\n  let circleCommonClasses =\r\n    \"h-3 w-3 bg-gradient-to-br from-green-300 to-green-600 shadow-md rounded-full\";\r\n  const [isEnding, setIsEnding] = useState(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsEnding(true);\r\n    };\r\n  }, []);\r\n  return (\r\n    isOpen && (\r\n      <>\r\n        <div\r\n          className={\r\n            \"z-50  animate-fade flex flex-col h-screen w-screen justify-center items-center fixed transition-all duration-200 bg-white dark:bg-dark-secondary dark:bg-opacity-50 bg-opacity-50\" +\r\n            (isEnding ? \" hidden\" : \"\") +\r\n            (\" \" + className ?? \"\")\r\n          }\r\n        >\r\n          {/* <img\r\n            src={Logo}\r\n            className=\"animate-bounce w-20 h-20 mb-10\"\r\n            alt=\"logo\"\r\n          /> */}\r\n          <div className=\"flex justify-center items-center transition-all duration-200\">\r\n            <div className={`${circleCommonClasses} mr-3 animate-bounce`}></div>\r\n            <div\r\n              className={`${circleCommonClasses} mr-3 animate-bounce200`}\r\n            ></div>\r\n            <div className={`${circleCommonClasses} animate-bounce400`}></div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nButton.propTypes = {\r\n  content: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nfunction Button({\r\n  outline = false,\r\n  content,\r\n  className,\r\n  onClick,\r\n  onBlur,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n        className={\r\n          \"px-4 py-2 rounded-lg transition-all text-sm md:text-base duration-200 disabled:opacity-50 outline-none z-0 select-none \" +\r\n          \" \" +\r\n          (outline\r\n            ? \"ring-inset ring-1 ring-green-500 bg-white dark:bg-transparent dark:hover:bg-green-500 text-green-500 hover:text-white hover:bg-green-400 active:bg-green-500\"\r\n            : \"bg-gradient-to-br from-green-400 to-green-600 text-white active:from-green-500 active:to-green-600  \") +\r\n          \" \" +\r\n          (className ?? \"\") +\r\n          \" \" +\r\n          (!disabled ? \"active:scale-95 active:transform\" : \"cursor-default\")\r\n        }\r\n      >\r\n        {content}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nPopup.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nfunction Popup({\r\n  title = \"Notification\",\r\n  isOpen,\r\n  content = \"Oops! Something went wrong!\",\r\n  onClick,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50 z-50\">\r\n        <div className=\"bg-white dark:bg-dark-secondary py-8 px-8 w-full md:w-2/3 lg:w-1/2 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-dark-txt\">\r\n            {title}\r\n          </h3>\r\n          <span className=\"break-words dark:text-dark-txt\">{content}</span>\r\n          <div className=\"w-full flex justify-end\">\r\n            <Button content=\"Close\" onClick={onClick} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.ae67bd1e.jpg\";","import DefaultAvatar from \"assets/img/default-avatar.jpg\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nImageCircle.propTypes = {\r\n  src: PropTypes.string,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nfunction ImageCircle({\r\n  src = DefaultAvatar,\r\n  className = \"\",\r\n  alt = \"Avatar\",\r\n  size = \"md\",\r\n  userName = \"\",\r\n  participants,\r\n}) {\r\n  const onlineUserNameList = useSelector(\r\n    (state) => state.users.onlineUserNameList,\r\n  );\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const isCurrentUser = userName === currentUser.userName;\r\n\r\n  var isOnline = false;\r\n  if (!isCurrentUser) {\r\n    if (userName) {\r\n      isOnline = onlineUserNameList.includes(userName);\r\n    } else if (participants) {\r\n      isOnline = participants\r\n        .filter((x) => x.userName !== currentUser.userName)\r\n        .map((x) => x)\r\n        .some((x) => onlineUserNameList.includes(x.userName));\r\n    }\r\n  }\r\n\r\n  var onlineSize;\r\n  switch (size) {\r\n    case \"xs\":\r\n      onlineSize = \"w-2 h-2\";\r\n      break;\r\n    case \"sm\":\r\n      onlineSize = \"w-2 h-2\";\r\n      break;\r\n    case \"lg\":\r\n      onlineSize = \"border-2 w-4 h-4\";\r\n      break;\r\n    case \"xl\":\r\n      onlineSize = \"border-2 w-4 h-4\";\r\n      break;\r\n    case \"full\":\r\n      onlineSize = \"border-2 w-4 h-4\";\r\n      break;\r\n    default:\r\n      onlineSize = \"border-2 w-4 h-4\";\r\n  }\r\n\r\n  var avatarSize;\r\n  switch (size) {\r\n    case \"xs\":\r\n      avatarSize = \"h-5 w-5 md:h-6 md:w-6\";\r\n      break;\r\n    case \"sm\":\r\n      avatarSize = \"h-6 w-6 md:h-8 md:w-8\";\r\n      break;\r\n    case \"lg\":\r\n      avatarSize = \"h-14 w-14 md:h-16 md:w-16\";\r\n      break;\r\n    case \"xl\":\r\n      avatarSize = \"h-22 w-22 md:h-24 md:w-24\";\r\n      break;\r\n    case \"full\":\r\n      avatarSize = \"h-full w-full\";\r\n      break;\r\n    default:\r\n      avatarSize = \"h-10 w-10 md:h-12 md:w-12\";\r\n  }\r\n  return (\r\n    <div className=\"relative flex-shrink-0\">\r\n      <img\r\n        className={\r\n          avatarSize +\r\n            \" \" +\r\n            \"select-none bg-white rounded-full object-cover flex-shrink-0\" +\r\n            \" \" +\r\n            className ?? \"\"\r\n        }\r\n        src={!src || src === \"\" ? DefaultAvatar : src}\r\n        alt={alt}\r\n      />\r\n      {(isCurrentUser || isOnline) && (\r\n        <span\r\n          className={\r\n            \"absolute bg-green-500 dark:bg-green-400 bottom-0 right-0 rounded-full border-white dark:border-black\" +\r\n            \" \" +\r\n            onlineSize\r\n          }\r\n        ></span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCircle;\r\n","const DefaultName = {\r\n  NO_NAME_GROUP: \"No name\",\r\n  NO_NAME_USER: \"Unknown\",\r\n};\r\n\r\nconst ChatType = {\r\n  PRIVATE: 1,\r\n  GROUP: 2,\r\n};\r\n\r\nexport { ChatType, DefaultName };\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChatType, DefaultName } from \"utils/Constant\";\r\n\r\nfunction ChatList() {\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  function handleClick(id) {\r\n    if (id !== selectedId) {\r\n      const action = setSelectedId(id);\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"search\"\r\n        className=\"my-3 rounded-3xl bg-gray-100 px-4 py-2 focus:ring-2 focus:ring-green-400 focus:ring-opacity-50 outline-none transition-all duration-200 w-full dark:bg-dark-secondary dark:text-white\"\r\n        placeholder=\"Search chat\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n      />\r\n      <div className=\"h-full overflow-x-hidden space-y-2 overflow-y-auto pr-2 pb-48 md:pb-0\">\r\n        {chats &&\r\n          getCurrentChats(chats, keyword).map((chat, index) => {\r\n            const currentUserName = currentUser.userName;\r\n\r\n            // check current user still exist in chat (remove participant case)\r\n            var isValid = chat?.participants.some(\r\n              (x) => x.userName === currentUserName,\r\n            );\r\n            if (!isValid) {\r\n              return;\r\n            }\r\n\r\n            const friend =\r\n              chat?.participants.length > 1\r\n                ? chat?.participants\r\n                    ?.filter((x) => x.userName !== currentUserName)\r\n                    .shift()\r\n                : currentUser;\r\n            let lastMessage = {};\r\n            if (chat.messages?.length !== 0) {\r\n              lastMessage = chat.messages?.reduce((a, b) =>\r\n                a?.dateCreated > b?.dateCreated ? a : b,\r\n              );\r\n            }\r\n            return (\r\n              <div\r\n                key={Date.now() + index}\r\n                className={\r\n                  \"relative select-none w-full h-20 flex flex-start cursor-pointer hover:bg-gray-100 p-2 rounded-lg transition-all duration-150 ease-in dark:hover:bg-dark-secondary dark:text-dark-txt\" +\r\n                  \" \" +\r\n                  (selectedId === chat.id\r\n                    ? \"bg-gray-100 dark:bg-dark-secondary\"\r\n                    : \"\")\r\n                }\r\n                onClick={() => handleClick(chat.id)}\r\n              >\r\n                {chat.numOfUnreadMessages > 0 && selectedId !== chat.id && (\r\n                  <span className=\"w-6 h-6 absolute right-7 top-1/2 text-xs font-bold p-1 bg-green-500 dark:bg-green-600 text-white rounded-full text-center align-middle\">\r\n                    {chat.numOfUnreadMessages > 9\r\n                      ? \"9+\"\r\n                      : chat.numOfUnreadMessages}\r\n                  </span>\r\n                )}\r\n                <ImageCircle\r\n                  src={\r\n                    chat?.type === ChatType.PRIVATE\r\n                      ? friend?.avatarUrl\r\n                      : chat?.groupAvatarUrl\r\n                  }\r\n                  size=\"lg\"\r\n                  participants={chat?.participants}\r\n                />\r\n\r\n                <div className=\"font-primary flex flex-col px-3 py-2 justify-between truncate w-full\">\r\n                  <div className=\"flex justify-between items-center w-full min-w-0 space-x-3\">\r\n                    <span\r\n                      className={\r\n                        \"text-gray-800 truncate dark:text-dark-txt\" +\r\n                        \" \" +\r\n                        (chat.numOfUnreadMessages > 0 && selectedId !== chat.id\r\n                          ? \"font-bold\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      {chat?.type === ChatType.PRIVATE\r\n                        ? friend?.fullName\r\n                        : chat?.name ?? DefaultName.NO_NAME_GROUP}\r\n                    </span>\r\n                    <span className=\"text-sm text-gray-500 truncate flex-shrink-0\">\r\n                      {moment(\r\n                        new Date(lastMessage?.dateCreated ?? chat?.dateCreated),\r\n                        \"YYYYMMDD\",\r\n                      )\r\n                        .fromNow()\r\n                        ?.replace(\"ago\", \"\")\r\n                        ?.trim()}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex\">\r\n                    <span\r\n                      className={\r\n                        \"mr-2 text-sm text-gray-500 truncate overflow-hidden flex-grow\" +\r\n                        \" \" +\r\n                        (chat.numOfUnreadMessages > 0 && selectedId !== chat.id\r\n                          ? \"font-bold mr-10\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      {lastMessage.content ?? \"\"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n\r\nfunction getCurrentChats(chats, keyword) {\r\n  var result = sortChat(chats);\r\n  result = searchChat(result, keyword);\r\n  return result;\r\n}\r\n\r\nfunction sortChat(chats) {\r\n  if (chats) {\r\n    return [...chats].sort((chatA, chatB) => {\r\n      let lastMessageA = {};\r\n      let lastMessageB = {};\r\n      // check if chat no message => return date created of chat\r\n      if (chatA.messages?.length !== 0) {\r\n        lastMessageA = chatA.messages?.reduce((a, b) => {\r\n          return a?.dateCreated > b?.dateCreated ? a : b;\r\n        });\r\n      } else {\r\n        lastMessageA.dateCreated = chatA?.dateCreated;\r\n      }\r\n      if (chatB.messages?.length !== 0) {\r\n        lastMessageB = chatB.messages?.reduce((a, b) =>\r\n          a?.dateCreated > b?.dateCreated ? a : b,\r\n        );\r\n      } else {\r\n        lastMessageB.dateCreated = chatB?.dateCreated;\r\n      }\r\n\r\n      return lastMessageA?.dateCreated < lastMessageB?.dateCreated ? 1 : -1;\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchChat(chats, keyword) {\r\n  if (chats) {\r\n    return chats.filter((chat) => {\r\n      let isValid = chat?.participants.some((x) => {\r\n        if (\r\n          x.fullName.toLowerCase().includes(keyword.toLowerCase()) ||\r\n          x?.userName.toLowerCase().includes(keyword.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return (\r\n        isValid || chat?.name?.toLowerCase().includes(keyword.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info-icon.b4879a5e.svg\";","export default __webpack_public_path__ + \"static/media/left-arrow-icon.07714e5b.svg\";","export default __webpack_public_path__ + \"static/media/emoji.21d0cbf4.svg\";","export default __webpack_public_path__ + \"static/media/image-icon.c8ad9f46.svg\";","export default __webpack_public_path__ + \"static/media/send-icon.666dadc9.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nClickableIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nfunction ClickableIcon({ className, icon, iconClass, alt, onClick, onBlur }) {\r\n  return (\r\n    <>\r\n      <div\r\n        onBlur={onBlur}\r\n        onClick={onClick}\r\n        className={\r\n          \"p-1 rounded-full hover:bg-gray-200 active:bg-gray-300 dark:hover:bg-dark-hover dark:border-dark-third transition-all duration-200 cursor-pointer ease-in dark:active:bg-dark-third active:scale-90 active:transform select-none flex-shrink-0 \" +\r\n          (className ?? \"\")\r\n        }\r\n      >\r\n        {icon ? (\r\n          <img\r\n            alt={alt ?? \"Clickable Icon\"}\r\n            src={icon}\r\n            onClick={onClick}\r\n            className=\"w-full\"\r\n          />\r\n        ) : (\r\n          <i\r\n            className={\r\n              \"text-center align-middle text-xl text-black dark:text-dark-txt w-7 h-7 \" +\r\n              \" \" +\r\n              iconClass\r\n            }\r\n          ></i>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ClickableIcon;\r\n","import { setIsLoading, setPopup } from \"app/appSlice\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useApi() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const Api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    timeout: 300000,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n  });\r\n\r\n  Api.interceptors.request.use(async (config) => {\r\n    var token = window.localStorage.getItem(\"token\");\r\n\r\n    var newConfig = config;\r\n    if (token) {\r\n      newConfig = {\r\n        ...config,\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n    }\r\n    return newConfig;\r\n  });\r\n  Api.interceptors.response.use(\r\n    (response) => {\r\n      dispatch(setIsLoading(false));\r\n\r\n      if (response && response.data) {\r\n        return response.data;\r\n      }\r\n      return response;\r\n    },\r\n    (error) => {\r\n      if (error.response) {\r\n        dispatch(setIsLoading(false));\r\n\r\n        switch (error.response.status) {\r\n          case 401:\r\n            window.localStorage.removeItem(\"token\");\r\n            history.push(\"/login\");\r\n            break;\r\n          case 403:\r\n            history.push(\"/ForBid\");\r\n            break;\r\n          case 404:\r\n            history.push(\"/NotFound\");\r\n            break;\r\n          case 500:\r\n            history.push(\"/ServerError\");\r\n            break;\r\n          default:\r\n            var message =\r\n              typeof error.response?.data === \"string\"\r\n                ? error.response?.data\r\n                : \"Oops, something went wrong! Please contact administrator.\";\r\n\r\n            // for model binding error\r\n            message = error.response?.data?.errors\r\n              ? objToString(error.response?.data?.errors)\r\n              : message;\r\n\r\n            openPopup(\"Notification\", message);\r\n            return Promise.reject(error.response?.data);\r\n        }\r\n      }\r\n      return Promise.reject(error?.response?.data);\r\n    },\r\n  );\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return Api;\r\n}\r\n\r\n// utils function for model binding convert\r\nfunction objToString(obj) {\r\n  let str = \"\";\r\n  for (const val of Object.values(obj)) {\r\n    str += `${val.toString()}, `;\r\n  }\r\n  str = str.substring(0, str.length - 2);\r\n  return str;\r\n}\r\n","import { setIsLoading } from \"app/appSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useApi from \"./useApi.js\";\r\n\r\nconst baseApiUrl = \"/chats\";\r\n\r\nexport default function useChatApi() {\r\n  const Api = useApi();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatApi = {\r\n    getAll: () => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}`;\r\n      return Api.get(url);\r\n    },\r\n    getById: (chatId, params) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}`;\r\n      return Api.get(url, { params });\r\n    },\r\n    sendMessage: (chatId, content) => {\r\n      const url = `${baseApiUrl}/${chatId}/send`;\r\n      return Api.post(url, content);\r\n    },\r\n    readChat: (chatId) => {\r\n      const url = `${baseApiUrl}/${chatId}/read`;\r\n      return Api.patch(url);\r\n    },\r\n    sendImage: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}/sendImage`;\r\n\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.post(url, content);\r\n    },\r\n    updateGroupAvatar: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}/avatar`;\r\n\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.patch(url, content);\r\n    },\r\n    createGroupChat: (content) => {\r\n      content.groupName = content?.groupName?.substring(0, 99);\r\n\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/group`;\r\n      return Api.post(url, content);\r\n    },\r\n    updateGroupChat: (chatId, content) => {\r\n      content.newGroupName = content?.newGroupName?.substring(0, 99);\r\n\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}`;\r\n      return Api.patch(url, content);\r\n    },\r\n    createPrivateChat: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/private`;\r\n      return Api.post(url, content);\r\n    },\r\n  };\r\n  return chatApi;\r\n}\r\n","import EmojiIcon from \"assets/icons/emoji.svg\";\r\nimport ImageIcon from \"assets/icons/image-icon.svg\";\r\nimport SendIconNormal from \"assets/icons/send-icon.svg\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nChatInput.propTypes = {\r\n  chatId: PropTypes.number,\r\n};\r\n\r\nfunction ChatInput({ chatId }) {\r\n  const [content, setContent] = useState(\"\");\r\n  const [isOpenEmoji, setIsOpenEmoji] = useState(false);\r\n  const ref = useRef();\r\n\r\n  const chatApi = useChatApi();\r\n\r\n  async function onSendMessage(e) {\r\n    e.preventDefault();\r\n    if (!content) {\r\n      return;\r\n    }\r\n    setContent(\"\");\r\n\r\n    var request = { content };\r\n    await chatApi.sendMessage(chatId, request);\r\n  }\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    if (emojiObject?.emoji) {\r\n      setContent(content + emojiObject?.emoji);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenEmoji && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenEmoji(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenEmoji]);\r\n\r\n  async function sendImage(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Image\", file);\r\n\r\n    await chatApi.sendImage(chatId, formData);\r\n  }\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => onSendMessage(e)}\r\n        className=\"flex justify-between items-center space-x-1 pl-4 pr-2 md:pr-6 z-0\"\r\n      >\r\n        <div className=\"relative w-full flex\">\r\n          <input\r\n            id=\"imageFile\"\r\n            type=\"file\"\r\n            hidden\r\n            accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n            onChange={sendImage}\r\n          />\r\n          <label htmlFor=\"imageFile\">\r\n            <ClickableIcon className=\"h-10 w-10 p-2 mr-2\" icon={ImageIcon} />\r\n          </label>\r\n          <input\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Aa\"\r\n            className=\"bg-gray-200 dark:bg-dark-secondary rounded-3xl w-full py-2 px-4 pr-12 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 relative\"\r\n          />\r\n          <div ref={ref} position=\"relative\">\r\n            <ClickableIcon\r\n              className=\"absolute h-10 w-10 p-2 right-1 top-0\"\r\n              icon={EmojiIcon}\r\n              onClick={() => setIsOpenEmoji(!isOpenEmoji)}\r\n            />\r\n            <div\r\n              className={\r\n                \"animate-fade absolute right-0 bottom-full \" +\r\n                \" \" +\r\n                (isOpenEmoji ? \"visible\" : \"invisible\")\r\n              }\r\n            >\r\n              <Picker onEmojiClick={onEmojiClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button>\r\n          <ClickableIcon\r\n            disableAutoFocus\r\n            icon={SendIconNormal}\r\n            className=\"w-12 h-12 p-3\"\r\n          />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nConfirmModal.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  confirmButtonTitle: PropTypes.string,\r\n  confirmButtonAction: PropTypes.func,\r\n};\r\n\r\nfunction ConfirmModal({\r\n  title,\r\n  isOpen,\r\n  content = \"Are you sure?\",\r\n  closeAction,\r\n  confirmButtonTitle,\r\n  confirmButtonAction,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 dark:bg-dark-primary dark:bg-opacity-50 bg-opacity-30 z-50\">\r\n        <div className=\"bg-white dark:bg-dark-secondary dark:border-dark-third py-8 px-8 w-full md:w-2/3 lg:w-1/2 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-dark-txt\">\r\n            {title !== \"\" ? title : \"Notification\"}\r\n          </h3>\r\n          <span className=\"break-words dark:text-dark-txt\">{content}</span>\r\n          <div className=\"w-full flex justify-end space-x-2\">\r\n            <Button outline content=\"No\" onClick={closeAction} />\r\n            <Button\r\n              content={confirmButtonTitle ?? \"Ok\"}\r\n              onClick={confirmButtonAction}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import { setIsLoading } from \"app/appSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useApi from \"./useApi.js\";\r\n\r\nconst baseApiUrl = \"/users\";\r\n\r\nexport default function useUserApi() {\r\n  const Api = useApi();\r\n  const dispatch = useDispatch();\r\n\r\n  const userApi = {\r\n    login: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/login`;\r\n      return Api.post(url, content);\r\n    },\r\n    register: (content) => {\r\n      content.firstName = content?.firstName?.substring(0, 49);\r\n      content.lastName = content?.lastName?.substring(0, 49);\r\n\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/register`;\r\n      return Api.post(url, content);\r\n    },\r\n    checkUserNameExists: (userName) => {\r\n      if (userName) {\r\n        const url = `${baseApiUrl}/${userName}/isExists`;\r\n        return Api.get(url);\r\n      }\r\n      return Promise.reject();\r\n    },\r\n    getFriendList: () => {\r\n      const url = `${baseApiUrl}`;\r\n      return Api.get(url);\r\n    },\r\n    getCurrentUser: () => {\r\n      const url = `${baseApiUrl}/current`;\r\n      return Api.get(url);\r\n    },\r\n    updateUser: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}`;\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.put(url, content);\r\n    },\r\n  };\r\n  return userApi;\r\n}\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport Button from \"components/Button\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport Popup from \"components/Popup\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChatType, DefaultName } from \"utils/Constant\";\r\n\r\nfunction EditChat({ isOpen, setIsOpen, chat }) {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  const [groupName, setGroupName] = useState(chat?.name);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const [isValidButton, setIsValidButton] = useState(false);\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [selectedFriendList, setSelectedFriendList] = useState(\r\n    chat?.participants,\r\n  );\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setIsValidButton(groupName?.trim() ? true : false);\r\n  }, [groupName]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setSelectedFriendList(chat?.participants);\r\n    setGroupName(chat?.name);\r\n  }, [chat]);\r\n\r\n  async function handleEditChat() {\r\n    var currentParticipantUserNames = chat?.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantFullNamesToAdd = [];\r\n    var participantFullNamesToRemove = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedFriendList.forEach((user) => {\r\n      if (!currentParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToAdd.push(user.fullName);\r\n      }\r\n    });\r\n    chat?.participants.forEach((user) => {\r\n      if (!selectedParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToRemove.push(user.fullName);\r\n        participantUserNamesToRemove.push(user.userName);\r\n      }\r\n    });\r\n\r\n    if (participantFullNamesToRemove.length > 0) {\r\n      var content = \"\";\r\n\r\n      if (\r\n        participantUserNamesToRemove.some((x) => x === currentUser.userName)\r\n      ) {\r\n        if (participantFullNamesToRemove.length === 1) {\r\n          content = \"Do you want to leave this group?\";\r\n          openModal(content);\r\n          return <></>;\r\n        } else {\r\n          content = \"Do you want to leave this group and remove \";\r\n        }\r\n      } else {\r\n        content = \"Do you want to remove \";\r\n      }\r\n\r\n      participantFullNamesToRemove.forEach((fullName, index) => {\r\n        if (participantUserNamesToRemove[index] !== currentUser.userName) {\r\n          content += `'${fullName}'`;\r\n          if (index !== participantFullNamesToRemove.length - 1) {\r\n            content += \", \";\r\n          }\r\n        }\r\n      });\r\n\r\n      content += \" from this chat?\";\r\n      openModal(content);\r\n    } else {\r\n      await submitEditChat();\r\n    }\r\n  }\r\n  async function submitEditChat() {\r\n    var currentParticipantUserNames = chat?.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantUserNamesToAdd = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedParticipantUserNames.forEach((userName) => {\r\n      if (!currentParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToAdd.push(userName);\r\n      }\r\n    });\r\n    currentParticipantUserNames.forEach((userName) => {\r\n      if (!selectedParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToRemove.push(userName);\r\n      }\r\n    });\r\n\r\n    const request = {\r\n      newGroupName: groupName,\r\n      participantUserNamesToAdd,\r\n      participantUserNamesToRemove,\r\n    };\r\n\r\n    chatApi.updateGroupChat(chat?.id, request);\r\n\r\n    const isLeaveGroup = participantUserNamesToRemove.some(\r\n      (x) => x === currentUser.userName,\r\n    );\r\n    if (isLeaveGroup) {\r\n      dispatch(setSelectedId(0));\r\n    }\r\n\r\n    closeModal();\r\n    setIsOpen(false);\r\n  }\r\n\r\n  async function updateGroupAvatar(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Avatar\", file);\r\n\r\n    await chatApi.updateGroupAvatar(chat?.id, formData).then((response) => {\r\n      openPopup(\"Success\", \"Update group avatar successfully!\");\r\n    });\r\n  }\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n  function openModal(content) {\r\n    setIsOpenModal(true);\r\n    setModalContent(content);\r\n  }\r\n  function closeModal() {\r\n    setIsOpenModal(false);\r\n    setModalContent(\"\");\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 py-10 z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"px-6 md:px-14 md:py-6 flex flex-col bg-white dark:bg-dark-secondary dark:border-dark-third rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300 max-h-full overflow-y-auto\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={() => setPopup({ isOpen: false })}\r\n        />\r\n        <ConfirmModal\r\n          isOpen={isOpenModal}\r\n          closeAction={() => setIsOpenModal(false)}\r\n          title=\"Are you sure?\"\r\n          content={modalContent}\r\n          confirmButtonTitle=\"Yes\"\r\n          confirmButtonAction={submitEditChat}\r\n        />\r\n        <div className=\"flex pt-6 pb-5 h-full\">\r\n          <h3 className=\"font-semibold text-lg md:text-2xl text-green-600 dark:text-green-400\">\r\n            Chat info!\r\n          </h3>\r\n        </div>\r\n        <div className=\"space-y-2 md:space-y-4\">\r\n          {chat?.type === ChatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold dark:text-dark-txt text-base md:text-lg\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold dark:text-dark-txt text-base md:text-lg\"\r\n                >\r\n                  Add Members\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-third border border-gray-400 border-opacity-50 rounded-lg w-full md:py-4 py-2 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none z-10 shadow-2xl \">\r\n                        <h4 className=\"font-semibold dark:text-gray-200 mb-2\">\r\n                          Friend list\r\n                        </h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-hover bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle\r\n                                size=\"xs\"\r\n                                src={friend.avatarUrl}\r\n                                userName={friend?.userName}\r\n                              />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                                {friend.fullName ?? DefaultName.NO_NAME_USER}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-dark-txt\"\r\n                >\r\n                  Members <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white border dark:bg-dark-third dark:border-dark-third border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none\">\r\n                  {[...selectedFriendList]\r\n                    .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                    .map((friend, index) => (\r\n                      <div\r\n                        onClick={() => {\r\n                          var result = [...selectedFriendList];\r\n                          var i = result.findIndex(\r\n                            (x) => x.userName === friend.userName,\r\n                          );\r\n                          if (i >= 0) {\r\n                            result.splice(i, 1);\r\n                            setSelectedFriendList(result);\r\n                          }\r\n                        }}\r\n                        key={Math.random() + index}\r\n                        className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2 dark:hover:bg-red-500 dark:bg-dark-hover bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                      >\r\n                        <ImageCircle\r\n                          size=\"xs\"\r\n                          src={friend.avatarUrl}\r\n                          userName={friend?.userName}\r\n                        />\r\n                        <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                          {friend.fullName ?? DefaultName.NO_NAME_USER}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 mr-2 flex flex-col\">\r\n                <label\r\n                  htmlFor=\"avatar\"\r\n                  className=\"dark:text-dark-txt text-base md:text-lg font-semibold \"\r\n                >\r\n                  Group Avatar\r\n                </label>\r\n                <input\r\n                  id=\"avatar\"\r\n                  onChange={updateGroupAvatar}\r\n                  type=\"file\"\r\n                  className=\"w-full\"\r\n                  accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Creator:{\" \"}\r\n                <span className=\"font-normal\">{chat?.creatorFullName}</span>\r\n              </div>\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Created date:{\" \"}\r\n                <span className=\"font-normal\">\r\n                  {moment(new Date(chat?.dateCreated), \"YYYYMMDD\").format(\r\n                    \"MMMM Do YYYY, h:mm:ss a\",\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Total messages:{\" \"}\r\n                <span className=\"font-normal\">{chat?.totalRecords}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            {chat?.type === ChatType.GROUP ? (\r\n              <Button\r\n                disabled={!isValidButton}\r\n                content=\"Save\"\r\n                onClick={() => handleEditChat()}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default EditChat;\r\n","import { appendMessageToChat, readChat, setSelectedId } from \"app/chatSlice\";\r\nimport InfoIcon from \"assets/icons/info-icon.svg\";\r\nimport LeftArrowIcon from \"assets/icons/left-arrow-icon.svg\";\r\nimport ChatInput from \"components/ChatInput\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport EditChat from \"components/EditChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useMessagePagination from \"hooks/useMessagePagination\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChatType, DefaultName } from \"utils/Constant\";\r\n\r\nfunction ChatWindow({ chat }) {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const chatApi = useChatApi();\r\n\r\n  const [showTimeIndexes, setShowTimeIndexes] = useState([]);\r\n  const [isOpenInfoPopup, setIsOpenInfoPopup] = useState(false);\r\n  const [friend, setFriend] = useState({});\r\n  const [seenBy, setSeenBy] = useState(\"\");\r\n\r\n  function backToChats() {\r\n    const action = setSelectedId(0);\r\n    dispatch(action);\r\n  }\r\n\r\n  function handleMessageClick(index) {\r\n    var result = [...showTimeIndexes];\r\n    const i = result.findIndex((x) => x === index);\r\n    if (i >= 0) {\r\n      result = result.filter((x) => x !== index);\r\n    } else {\r\n      result.push(index);\r\n    }\r\n    setShowTimeIndexes(result);\r\n  }\r\n\r\n  // infinity scrolling\r\n  const [page, setPage] = useState(1);\r\n  const { appendChat, hasMore, loading, error } = useMessagePagination(\r\n    chat,\r\n    page,\r\n  );\r\n  const endMessageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (chat?.numOfUnreadMessages > 0) {\r\n      chatApi.readChat(chat?.id).then((res) => {\r\n        dispatch(readChat(chat?.id));\r\n      });\r\n    }\r\n    if (chat?.participants.length > 1) {\r\n      var newFriend = chat?.participants\r\n        ?.filter((x) => x.userName !== currentUser?.userName)\r\n        .shift();\r\n      setFriend(newFriend);\r\n\r\n      if (chat?.readByUserNames?.length > 1) {\r\n        var newSeenBy = \"\";\r\n        var fullNameList = chat?.readByUserNames\r\n          ?.filter((userName) => userName !== currentUser?.userName)\r\n          ?.map((userName) => {\r\n            var fullName = chat.participants\r\n              .filter((x) => x.userName === userName)\r\n              ?.shift()?.fullName;\r\n            return fullName;\r\n          });\r\n\r\n        if (fullNameList?.length > 1) {\r\n          newSeenBy = \"Seen by \" + fullNameList.filter((x) => x).join(\", \");\r\n          setSeenBy(newSeenBy);\r\n        } else {\r\n          setSeenBy(\"\");\r\n        }\r\n      }\r\n    }\r\n  }, [chat]);\r\n\r\n  useEffect(() => {\r\n    dispatch(appendMessageToChat(appendChat));\r\n  }, [appendChat]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (endMessageRef) {\r\n      endMessageRef.current.scrollIntoView();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chat?.page < 2) {\r\n      scrollToBottom();\r\n    }\r\n  }, [chat]);\r\n\r\n  function loadMore() {\r\n    if (page < chat?.pageCount) {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <EditChat\r\n        isOpen={isOpenInfoPopup}\r\n        setIsOpen={setIsOpenInfoPopup}\r\n        chat={chat}\r\n      />\r\n      <div className=\"flex flex-col w-full h-full pb-4 flex-shrink-0 min-w-0\">\r\n        {/* Header chat window */}\r\n        <div className=\"w-full border-b border-gray-300 dark:border-dark-third flex justify-between items-center md:p-3 md:px-4 p-2 px-3 flex-shrink-0 overflow-hidden\">\r\n          <div className=\"flex min-w-0 justify-start items-center space-x-3\">\r\n            <img\r\n              src={LeftArrowIcon}\r\n              alt=\"Arrow icon\"\r\n              className=\"h-5 w-5 md:hidden cursor-pointer\"\r\n              onClick={backToChats}\r\n            />\r\n            <ImageCircle\r\n              src={\r\n                chat?.groupAvatarUrl !== \"\"\r\n                  ? chat?.groupAvatarUrl\r\n                  : friend?.avatarUrl\r\n              }\r\n              participants={chat?.participants}\r\n            />\r\n            <span className=\"text-lg font-semibold dark:text-dark-txt truncate overflow-hidden\">\r\n              {chat?.type === ChatType.PRIVATE\r\n                ? friend?.fullName\r\n                : chat?.name ?? DefaultName.NO_NAME_GROUP}\r\n            </span>\r\n          </div>\r\n          <ClickableIcon\r\n            className=\"h-10 w-10 p-2 mr-2\"\r\n            icon={InfoIcon}\r\n            onClick={() => setIsOpenInfoPopup(!isOpenInfoPopup)}\r\n          />\r\n        </div>\r\n        {/* End header chat window */}\r\n\r\n        {/* Chat content */}\r\n        <div className=\"flex-grow overflow-y-auto overflow-x-hidden px-4 pb-4 pt-2 space-y-1 flex flex-col min-w-0\">\r\n          {loading && (\r\n            <div className=\"text-gray-500 text-center my-2\">Loading...</div>\r\n          )}\r\n          {hasMore && !loading && (\r\n            <div className=\"flex\">\r\n              <button\r\n                className=\"mx-auto px-4 bg-gray-200 py-2 rounded-lg transform active:scale-95 hover:bg-gray-300 dark:hover:bg-dark-hover dark:bg-dark-third dark:text-gray-300 text-xs md:text-sm transition-all duration-200\"\r\n                onClick={loadMore}\r\n              >\r\n                Load more messages...\r\n              </button>\r\n            </div>\r\n          )}\r\n          {!hasMore && (\r\n            <div className=\"text-gray-500 text-xs md:text-sm text-center mb-2\">\r\n              Date created:{\" \"}\r\n              {moment(new Date(chat?.dateCreated), \"YYYYMMDD\").format(\r\n                \"MMMM Do YYYY, h:mm:ss a\",\r\n              )}\r\n            </div>\r\n          )}\r\n          <div>{error && \"Error\"}</div>\r\n          {[...chat?.messages]\r\n            ?.sort((messageA, messageB) => {\r\n              return messageA?.dateCreated > messageB?.dateCreated ? 1 : -1;\r\n            })\r\n            .map((message, index) =>\r\n              message.senderUserName === currentUser.userName ? (\r\n                <>\r\n                  <div\r\n                    key={message.id ?? index}\r\n                    className=\"flex flex-col items-end w-full\"\r\n                  >\r\n                    {showTimeIndexes.includes(index) && (\r\n                      <span className=\"transition-all animate-fade text-xs md:text-sm text-gray-400 left-0 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-right\">\r\n                        {moment(\r\n                          new Date(message?.dateCreated),\r\n                          \"YYYYMMDD\",\r\n                        ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"md:max-w-300 max-w-200 rounded-lg shadow transition-all duration-200 cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className={\r\n                          \"text-white rounded-3xl md:px-5 md:py-3 px-3 py-2 break-word rounded-br-none cursor-pointer overflow-x-auto max-w-3/4 text-sm md:text-base\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-green-600 dark:bg-green-800\"\r\n                            : \"bg-gradient-to-br from-green-400 to-green-600 dark:from-green-500 dark:to-green-800 shadow-md\")\r\n                        }\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {chat?.type === ChatType.PRIVATE &&\r\n                    chat?.messages?.length === index + 1 && (\r\n                      <>\r\n                        <div className=\"text-xs font-semibold text-right text-gray-600 dark:text-dark-txt mr-2 select-none\">\r\n                          {chat?.readByUserNames?.includes(friend?.userName)\r\n                            ? \"Seen\"\r\n                            : \"\"}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                </>\r\n              ) : (\r\n                <div\r\n                  key={message.id ?? index}\r\n                  className=\"flex items-end space-x-2\"\r\n                >\r\n                  <ImageCircle\r\n                    src={\r\n                      chat?.participants\r\n                        .filter((x) => x.userName === message.senderUserName)\r\n                        .shift()?.avatarUrl\r\n                    }\r\n                    size=\"sm\"\r\n                    userName={message.senderUserName}\r\n                  />\r\n                  <div className=\"flex flex-col w-full items-start\">\r\n                    {(showTimeIndexes.includes(index) ||\r\n                      chat?.type === ChatType.GROUP) && (\r\n                      <span className=\"transition-all animate-fade text-xs md:text-sm text-gray-400 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-left\">\r\n                        {message.senderFullName +\r\n                          \" - \" +\r\n                          moment(\r\n                            new Date(message?.dateCreated),\r\n                            \"YYYYMMDD\",\r\n                          ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"md:max-w-300 max-w-200 rounded-lg shadow cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        className={\r\n                          \" rounded-3xl md:px-5 md:py-3 px-3 py-2 break-word rounded-bl-none shadow-sm cursor-pointer overflow-x-auto max-w-3/4 text-sm md:text-base\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-gray-300 dark:bg-dark-third\"\r\n                            : \"bg-gradient-to-br from-gray-100 to-gray-300 dark:from-gray-500 dark:to-gray-600 \")\r\n                        }\r\n                        onClick={() => handleMessageClick(index)}\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ),\r\n            )}\r\n          {chat?.type === ChatType.GROUP && (\r\n            <>\r\n              <div className=\"text-xs font-semibold text-right text-gray-600 dark:text-dark-txt mr-2 select-none\">\r\n                {seenBy}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div ref={endMessageRef}></div>\r\n        </div>\r\n        {/* End chat content */}\r\n\r\n        <ChatInput chatId={chat?.id} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import { useEffect, useState } from \"react\";\r\nimport useChatApi from \"./useChatApi\";\r\n\r\nexport default function useMessagePagination(currentChat, page) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [appendChat, setAppendChat] = useState({});\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  const chatApi = useChatApi();\r\n\r\n  useEffect(() => {\r\n    if (page > 1 && hasMore) {\r\n      setLoading(true);\r\n      setError(false);\r\n\r\n      const request = { page };\r\n      chatApi\r\n        .getById(currentChat.id, request)\r\n        .then((response) => {\r\n          setAppendChat(response);\r\n          setHasMore(page < response.pageCount);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n        });\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    setHasMore(page < currentChat.pageCount);\r\n  }, [currentChat]);\r\n\r\n  return { loading, error, appendChat, hasMore };\r\n}\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport Button from \"components/Button\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ChatType, DefaultName } from \"utils/Constant\";\r\n\r\nfunction CreateChat({ isOpen, setIsOpen }) {\r\n  const [selectedMode, setSelectedMode] = useState(ChatType.PRIVATE);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [isValidButton, setIsValidButton] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [selectedFriendList, setSelectedFriendList] = useState([]);\r\n\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n    return () => {\r\n      setSelectedFriendList([]);\r\n      setGroupName(\"\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedMode === ChatType.GROUP) {\r\n      var result = selectedFriendList?.length >= 2 && groupName?.trim();\r\n      setIsValidButton(result);\r\n    } else if (selectedMode === ChatType.PRIVATE) {\r\n      setIsValidButton(selectedFriendList?.length !== 0 ? true : false);\r\n    }\r\n  }, [selectedFriendList, groupName, selectedMode]);\r\n\r\n  async function handleCreateGroup() {\r\n    if (isValidButton) {\r\n      if (selectedMode === ChatType.GROUP) {\r\n        const request = {\r\n          participantUserNames: selectedFriendList.map((x) => x.userName),\r\n          name: groupName,\r\n        };\r\n        chatApi.createGroupChat(request).then((response) => {\r\n          if (response.id) {\r\n            dispatch(setSelectedId(response.id));\r\n          }\r\n          setSelectedFriendList([]);\r\n          setGroupName(\"\");\r\n          setIsOpen(false);\r\n        });\r\n      } else if (selectedMode === ChatType.PRIVATE) {\r\n        const request = {\r\n          participantUserName: selectedFriendList\r\n            .map((x) => x.userName)\r\n            .shift(),\r\n        };\r\n        chatApi.createPrivateChat(request).then((response) => {\r\n          if (response.id) {\r\n            dispatch(setSelectedId(response.id));\r\n          }\r\n          setSelectedFriendList([]);\r\n          setGroupName(\"\");\r\n          setIsOpen(false);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 py-10  z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"px-6 md:px-14 md:py-6 flex flex-col bg-white dark:bg-dark-secondary dark:border-dark-third rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300 max-h-full overflow-y-auto md:overflow-visible\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <div className=\"flex pt-6 pb-5 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-lg md:text-2xl text-green-600 dark:text-green-400\">\r\n            New chat!\r\n          </h3>\r\n\r\n          <div className=\"relative flex rounded-lg items-center border border-green-500 cursor-pointer overflow-hidden\">\r\n            <div\r\n              className={\r\n                \"absolute bg-gradient-to-br from-green-400 to-green-600 w-1/2 h-full rounded transition-all duration-200 z-0\" +\r\n                \" \" +\r\n                (selectedMode === ChatType.GROUP\r\n                  ? \"transform translate-x-full left-0\"\r\n                  : \"left-0 \")\r\n              }\r\n            ></div>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-xs md:text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === ChatType.PRIVATE\r\n                  ? \"text-white\"\r\n                  : \" text-green-600 dark:text-green-400\")\r\n              }\r\n              onClick={() => setSelectedMode(ChatType.PRIVATE)}\r\n            >\r\n              Private\r\n            </span>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-xs md:text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === ChatType.GROUP\r\n                  ? \"text-white\"\r\n                  : \" text-green-600 dark:text-green-400\")\r\n              }\r\n              onClick={() => setSelectedMode(ChatType.GROUP)}\r\n            >\r\n              Group\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"space-y-2 md:space-y-4\">\r\n          {selectedMode === ChatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Find Friends\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-secondary dark:border-dark-hover border border-gray-300 border-opacity-50 rounded-lg w-full py-2 md:py-4 md:px-8 px-6 space-y-1 max-h-36 md:max-h-72 overflow-y-auto select-none z-10 shadow-2xl\">\r\n                        <h4 className=\"font-semibold mb-2 dark:text-gray-200\">\r\n                          Friend list\r\n                        </h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle\r\n                                size=\"xs\"\r\n                                src={friend.avatarUrl}\r\n                                userName={friend?.userName}\r\n                              />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                                {friend.fullName ?? DefaultName.NO_NAME_USER}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(At least 2 people. Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-dark-secondary border dark:border-dark-hover border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none\">\r\n                  {selectedFriendList\r\n                    .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                    .map((friend, index) => (\r\n                      <div\r\n                        onClick={() => {\r\n                          var result = [...selectedFriendList];\r\n                          var i = result.findIndex(\r\n                            (x) => x.userName === friend.userName,\r\n                          );\r\n                          if (i >= 0) {\r\n                            result.splice(i, 1);\r\n                            setSelectedFriendList(result);\r\n                          }\r\n                        }}\r\n                        key={Math.random() + index}\r\n                        className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-red-200 dark:hover:bg-red-500 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                      >\r\n                        <ImageCircle\r\n                          size=\"xs\"\r\n                          src={friend.avatarUrl}\r\n                          userName={friend?.userName}\r\n                        />\r\n                        <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                          {friend.fullName ?? DefaultName.NO_NAME_USER}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <label\r\n                htmlFor=\"selectFriend\"\r\n                className=\"font-semibold md:text-lg dark:text-gray-200\"\r\n              >\r\n                Select Friends\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"selectFriend\"\r\n                  type=\"search\"\r\n                  onFocus={() => setIsOpenFriendList(true)}\r\n                  value={keyword}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setKeyword(e.target.value)}\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n                {isOpenFriendList && (\r\n                  <>\r\n                    <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-secondary border border-gray-400 border-opacity-50 rounded-lg w-full space-y-1 max-h-36 md:max-h-72 overflow-y-auto select-none z-10 shadow-2xl py-2 md:py-4 md:px-8 px-6\">\r\n                      <h4 className=\"font-semibold mb-2 text-start dark:text-gray-200\">\r\n                        Friend list\r\n                      </h4>\r\n                      {friendList\r\n                        .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                        .filter(\r\n                          (x) =>\r\n                            (x.fullName\r\n                              ?.toLowerCase()\r\n                              .includes(keyword?.toLowerCase()) ||\r\n                              x.userName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase())) &&\r\n                            !selectedFriendList.some(\r\n                              (selected) => selected.userName === x.userName,\r\n                            ),\r\n                        )\r\n                        .map((friend, index) => (\r\n                          <div\r\n                            onClick={() => {\r\n                              var result = [];\r\n                              result.push(friend);\r\n                              setIsOpenFriendList(false);\r\n                              setSelectedFriendList(result);\r\n                            }}\r\n                            key={Math.random() + index}\r\n                            className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                          >\r\n                            <ImageCircle\r\n                              size=\"xs\"\r\n                              src={friend.avatarUrl}\r\n                              userName={friend?.userName}\r\n                            />\r\n                            <span className=\"break-full w-full overflow-ellipsis truncate text-sm md:text-base\">\r\n                              {friend.fullName ?? DefaultName.NO_NAME_USER}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-dark-secondary border dark:border-dark-hover border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none \">\r\n                  {[...selectedFriendList].map((friend, index) => {\r\n                    if (index === 0) {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            var result = [...selectedFriendList];\r\n                            var i = result.findIndex(\r\n                              (x) => x.userName === friend.userName,\r\n                            );\r\n                            if (i >= 0) {\r\n                              result.splice(i, 1);\r\n                              setSelectedFriendList(result);\r\n                            }\r\n                          }}\r\n                          key={Math.random() + index}\r\n                          className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300 dark:hover:bg-red-500\"\r\n                        >\r\n                          <ImageCircle\r\n                            size=\"xs\"\r\n                            src={friend.avatarUrl}\r\n                            userName={friend?.userName}\r\n                          />\r\n                          <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                            {friend.fullName ?? DefaultName.NO_NAME_USER}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return <></>;\r\n                    }\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            <Button\r\n              disabled={!isValidButton}\r\n              content=\"Create\"\r\n              onClick={() => handleCreateGroup()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default CreateChat;\r\n","import { setPopup } from \"app/appSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport Button from \"components/Button\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction UserInfo({ isOpen, setIsOpen, currentUser }) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [avatar, setAvatar] = useState({});\r\n\r\n  const userApi = useUserApi();\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser.firstName && currentUser.lastName) {\r\n      setFirstName(currentUser.firstName);\r\n      setLastName(currentUser.lastName);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  async function submit() {\r\n    const request = new FormData();\r\n    request.append(\"Avatar\", avatar);\r\n    request.append(\"FirstName\", firstName.substring(0, 49));\r\n    request.append(\"LastName\", lastName.substring(0, 49));\r\n\r\n    userApi.updateUser(request).then((response) => {\r\n      dispatch(updateUser(response));\r\n      openPopup(\"Success\", \"Update info successfully!\");\r\n    });\r\n\r\n    setIsOpen(false);\r\n  }\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 py-10  z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"w-full md:w-5/6 lg:w-2/5 md:px-14 px-6 md:py-6 flex flex-col dark:bg-dark-secondary dark:border-dark-third bg-white rounded-xl shadow-xl border border-gray-300 transition-all duration-300\"\r\n        }\r\n      >\r\n        <h3 className=\"pt-6 pb-5 font-semibold text-lg md:text-2xl text-green-600 dark:text-green-400\">\r\n          User info!\r\n        </h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"mb-3 flex flex-col md:grid md:grid-cols-2 md:place-items-start space-y-4 md:space-y-0\">\r\n            <div className=\"md:col-span-1 md:mr-2 space-y-2\">\r\n              <label\r\n                htmlFor=\"fistName\"\r\n                className=\"md:text-lg font-semibold dark:text-dark-txt\"\r\n              >\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"firstName\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-dark-third rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n            </div>\r\n            <div className=\"md:col-span-1 md:ml-2 space-y-2\">\r\n              <label\r\n                htmlFor=\"lastName\"\r\n                className=\"md:text-lg font-semibold dark:text-dark-txt\"\r\n              >\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"lastName\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-dark-third rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-2 flex flex-col\">\r\n              <label\r\n                htmlFor=\"avatar\"\r\n                className=\"md:text-lg font-semibold md:mt-4 dark:text-dark-txt\"\r\n              >\r\n                Avatar\r\n              </label>\r\n              <input\r\n                id=\"avatar\"\r\n                onChange={(e) => setAvatar(e.target.files[0])}\r\n                type=\"file\"\r\n                className=\"w-full\"\r\n                accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end space-x-2 items-center py-6\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            <Button content=\"Save\" onClick={() => submit()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\nexport default UserInfo;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDarkMode() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var mode = window.localStorage.getItem(\"theme\");\r\n\r\n    if (mode === \"dark\") {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      setDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      window.document.documentElement.classList.remove(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return { darkMode, setDarkMode };\r\n}\r\n\r\nexport default useDarkMode;\r\n","import ConfirmModal from \"components/ConfirmModal\";\r\nimport CreateChat from \"components/CreateChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport useDarkMode from \"hooks/useDarkMode\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClickableIcon from \"../ClickableIcon\";\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func,\r\n};\r\n\r\nfunction Header({ logout }) {\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const [isOpenCreateChat, setIsOpenCreateChat] = useState(false);\r\n  const [isOpenUserInfo, setIsOpenUserInfo] = useState(false);\r\n  const [confirmModal, setConfirmModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmButtonTitle: \"\",\r\n  });\r\n\r\n  const { darkMode, setDarkMode } = useDarkMode();\r\n\r\n  const userAvatar = currentUser.avatarUrl;\r\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenMenu && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenMenu(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenMenu]);\r\n\r\n  function openConfirmModal(\r\n    content,\r\n    confirmButtonAction,\r\n    confirmButtonTitle = \"Yes\",\r\n    title,\r\n  ) {\r\n    const confirmModal = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n      confirmButtonTitle: confirmButtonTitle,\r\n      confirmButtonAction: confirmButtonAction,\r\n    };\r\n    setConfirmModal(confirmModal);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {confirmModal.isOpen && (\r\n        <ConfirmModal\r\n          isOpen={confirmModal.isOpen}\r\n          closeAction={() => setConfirmModal({ isOpen: false })}\r\n          title=\"Are you sure?\"\r\n          content={confirmModal.content}\r\n          confirmButtonTitle={confirmModal.confirmButtonTitle}\r\n          confirmButtonAction={confirmModal.confirmButtonAction}\r\n        />\r\n      )}\r\n      <UserInfo\r\n        currentUser={currentUser}\r\n        isOpen={isOpenUserInfo}\r\n        setIsOpen={setIsOpenUserInfo}\r\n      />\r\n      <CreateChat isOpen={isOpenCreateChat} setIsOpen={setIsOpenCreateChat} />\r\n      <div className=\"pb-1 pt-4 flex justify-between items-center\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div\r\n            className=\"transition-all duration-200 ring ring-green-500 p-1 transform active:scale-95 rounded-full cursor-pointer\"\r\n            onClick={() => setIsOpenUserInfo((x) => !x)}\r\n          >\r\n            <ImageCircle\r\n              src={userAvatar}\r\n              size=\"md\"\r\n              userName={currentUser.userName}\r\n            />\r\n          </div>\r\n          <h1 className=\"font-bold text-3xl\">Chats</h1>\r\n        </div>\r\n        <div className=\"flex space-x-2 items-center\">\r\n          <ClickableIcon\r\n            iconClass=\"bx bxs-edit\"\r\n            onClick={() => setIsOpenCreateChat(true)}\r\n            className=\"dark:bg-dark-third bg-gray-100\"\r\n          />\r\n          <div className=\"relative\" ref={ref}>\r\n            <ClickableIcon\r\n              iconClass=\"bx bx-dots-horizontal-rounded\"\r\n              onClick={() => setIsOpenMenu(!isOpenMenu)}\r\n              className=\"dark:bg-dark-third bg-gray-100\"\r\n            />\r\n            {isOpenMenu && (\r\n              <div className=\"animate-fade transition-all duration-200 absolute right-0 md:left-0 border border-gray-200 bg-white w-52 rounded-lg shadow-md overflow-hidden p-2 dark:bg-dark-secondary dark:border-dark-third mt-2 select-none z-30\">\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-dark-third\"\r\n                  onClick={() => setDarkMode(!darkMode)}\r\n                >\r\n                  <span className=\"p-1 bg-gray-100 dark:bg-dark-hover rounded-full select-none\">\r\n                    <i className=\"bx bx-moon text-center text-xl align-middle text-black dark:text-dark-txt w-7 h-7\"></i>\r\n                  </span>\r\n                  <span>Dark Mode</span>\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-dark-third\"\r\n                  onClick={() => {\r\n                    openConfirmModal(\"Do you want to log out?\", logout);\r\n                  }}\r\n                >\r\n                  <span className=\"p-1 bg-gray-100 dark:bg-dark-hover rounded-full select-none\">\r\n                    <i className=\"bx bx-log-in-circle text-center text-xl align-middle text-black dark:text-dark-txt w-7 h-7\"></i>\r\n                  </span>\r\n                  <span>Log Out</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.2a8dee36.png\";","import { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport {\r\n  addChat,\r\n  addMessage,\r\n  addNotification,\r\n  addReadByUserName,\r\n  editChat,\r\n  editGroupAvatar,\r\n  refreshChats,\r\n  setSelectedId,\r\n} from \"app/chatSlice\";\r\nimport { updateOnlineUserNameList, updateUser } from \"app/userSlice\";\r\nimport ChatList from \"components/ChatList\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport Header from \"components/Header\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Chat() {\r\n  const [connection, setConnection] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"token\");\r\n    connection?.stop();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      chatApi\r\n        .getAll()\r\n        .then((response) => {\r\n          dispatch(refreshChats(response.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Connection failed: \", error);\r\n        });\r\n\r\n      userApi\r\n        .getCurrentUser()\r\n        .then((response) => {\r\n          dispatch(updateUser(response));\r\n        })\r\n        .catch((error) => {\r\n          logout();\r\n        });\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // for realtime\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_SERVER_URL + \"/hubs/chats\", {\r\n        accessTokenFactory: () => localStorage.getItem(\"token\"),\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection && !connection.connectionStarted) {\r\n      connection.start().then((result) => {\r\n        connection.on(\"ReceiveMessage\", (response) => {\r\n          const action = addMessage(response);\r\n          dispatch(action);\r\n          if (response.chatId && selectedId !== response.chatId) {\r\n            dispatch(addNotification(response.chatId));\r\n          }\r\n        });\r\n        connection.on(\"ReceiveChat\", (chat) => {\r\n          const action = addChat(chat);\r\n          dispatch(action);\r\n          if (chat.creatorUserName === currentUser.userName) {\r\n            dispatch(setSelectedId(chat.id));\r\n          }\r\n        });\r\n        connection.on(\"ReceiveUpdatedChat\", (chat) => {\r\n          const action = editChat(chat);\r\n          dispatch(action);\r\n        });\r\n        connection.on(\"ReceiveUpdatedGroupAvatar\", (response) => {\r\n          const action = editGroupAvatar(response);\r\n          dispatch(action);\r\n        });\r\n        connection.on(\"ReceiveAddReadByUserName\", (response) => {\r\n          const action = addReadByUserName(response);\r\n          dispatch(action);\r\n        });\r\n        connection.on(\"ReceiveUpdatedOnlineUserNameList\", (response) => {\r\n          const action = updateOnlineUserNameList(response);\r\n          dispatch(action);\r\n        });\r\n      });\r\n    }\r\n    return () => {\r\n      if (connection && connection.connectionStarted) {\r\n        connection.stop();\r\n      }\r\n    };\r\n  }, [connection]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark:bg-dark-primary dark:text-white  animate-fade grid grid-cols-12 h-screen w-screen overflow-hidden\">\r\n        <div\r\n          className={\r\n            \"animate-fade lg:col-span-3 md:col-span-4 col-span-12 md:flex flex-col h-screen border-r px-4 dark:border-dark-third border-gray-300 pt-1\" +\r\n            (selectedId !== 0 ? \" hidden\" : \"flex\")\r\n          }\r\n        >\r\n          <Header logout={logout} />\r\n          <ChatList />\r\n        </div>\r\n        {!selectedId ? (\r\n          chats?.length === 0 ? (\r\n            <div className=\"dark:bg-black animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex flex-col h-full w-full \">\r\n              <img src={Logo} className=\"w-32 h-32 mb-3\" alt=\"logo\" />\r\n              <span className=\"text-center\">\r\n                {\" \"}\r\n                Welcome to{\" \"}\r\n                <span className=\"text-green-600 dark:text-green-400 font-bold\">\r\n                  TeeChat!\r\n                </span>{\" \"}\r\n                <br />\r\n                You do not have any chats, please start a chat!{\" \"}\r\n              </span>\r\n              <span></span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"dark:bg-black animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex flex-col h-full w-full \">\r\n              <img src={Logo} className=\"w-32 h-32 mb-3\" alt=\"logo\" />\r\n              <span className=\"text-center\">\r\n                {\" \"}\r\n                Welcome to{\" \"}\r\n                <span className=\"text-green-600 dark:text-green-400 font-bold\">\r\n                  TeeChat!\r\n                </span>{\" \"}\r\n                <br />\r\n                Select a chat to start.{\" \"}\r\n              </span>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"dark:bg-dark-primary md:dark:bg-black animate-fade lg:col-span-9 md:col-span-8 col-span-12 flex h-screen w-full overflow-y-auto\">\r\n            <ChatWindow chat={chats.find((chat) => chat.id === selectedId)} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/forbid.7d678d5c.jpg\";","import React from \"react\";\r\nimport ForbidImg from \"assets/img/forbid.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Forbid({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ForbidImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"You don't have permission to access this resources\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forbid;\r\n","export default __webpack_public_path__ + \"static/media/login-page.dc5637a7.jpg\";","import { getCurrentUser } from \"app/userSlice\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userApi = useUserApi();\r\n\r\n  useEffect(() => {\r\n    if (username && password) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n  }, [username, password]);\r\n  function login(e) {\r\n    e.preventDefault();\r\n\r\n    const request = { username, password };\r\n    setError(\"\");\r\n\r\n    userApi\r\n      .login(request)\r\n      .then((response) => {\r\n        dispatch(getCurrentUser());\r\n        window.localStorage.setItem(\"token\", response);\r\n        history.push(\"/chats\");\r\n      })\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\"\r\n            ? error\r\n            : \"Username or password is incorrect\";\r\n        setError(message);\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n      <img\r\n        src={LoginPageImage}\r\n        alt=\"login\"\r\n        className=\"md:block hidden col-span-3 w-full ml-44\"\r\n      />\r\n      <form\r\n        onSubmit={(e) => login(e)}\r\n        className=\"container rounded-2xl flex flex-col py-10 md:w-auto md:col-span-4\"\r\n      >\r\n        <img src={Logo} alt=\"login\" className=\"h-20 w-20 mx-auto mb-3\" />\r\n        <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n          Login to TeeChat!\r\n        </h1>\r\n\r\n        {error && (\r\n          <span className=\"bg-red-500 rounded-md text-white text-lg mb-2 py-2 text-center\">\r\n            {error ?? \"Username or password is incorrect\"}\r\n          </span>\r\n        )}\r\n        <div className=\"space-y-2 mb-3\">\r\n          <label htmlFor=\"username\" className=\"text-lg font-semibold px-1\">\r\n            Username or email address\r\n          </label>\r\n          <input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2 mb-2\">\r\n          <label htmlFor=\"password\" className=\"text-lg font-semibold px-1\">\r\n            Password\r\n          </label>\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          disabled={!isDirty}\r\n          content=\"Login\"\r\n          className=\"mb-4 mt-2 font-bold\"\r\n        />\r\n        <div className=\"text-center\">\r\n          Not a member?{\" \"}\r\n          <Link to=\"/register\" className=\"text-green-500 font-bold\">\r\n            Sign up now\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/not-found.500f302c.jpg\";","import React from \"react\";\r\nimport NotFoundImg from \"assets/img/not-found.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={NotFoundImg} alt=\"Error\" />\r\n      <span className=\" font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Not found resources\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport Popup from \"components/Popup\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm, useWatch } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction Register() {\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [isExistsUserName, setIsExistsUserName] = useState(true);\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  const userApi = useUserApi();\r\n\r\n  // yup validation\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"First Name is required\"),\r\n    lastName: yup.string().required(\"Last Name is required\"),\r\n    userName: yup\r\n      .string()\r\n      .required(\"User Name is required\")\r\n      .min(6, \"Username must be 6-20 characters\")\r\n      .max(20, \"Username must be 6-20 characters\")\r\n      .test(\r\n        \"checkUsername\",\r\n        \"Username does not contain special characters\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=[a-zA-Z0-9._])(?!.*[_.]{2})[^_.].*[^_.]$\",\r\n          );\r\n        },\r\n      )\r\n      .test(\r\n        \"existsUsername\",\r\n        \"Username is already taken\",\r\n        (value) => !isExistsUserName,\r\n      ),\r\n    email: yup\r\n      .string()\r\n      .required(\"Email is required\")\r\n      .test(\"checkEmail\", \"Email is invalid\", (value) => {\r\n        return checkRegex(\r\n          value,\r\n          /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n        );\r\n      }),\r\n    password: yup\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .test(\r\n        \"checkPassword\",\r\n        \"Passwords must be at least 8 characters, one digit, one uppercase, one non alphanumeric character\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$^+=!*()@%&]).{8,}$\",\r\n          );\r\n        },\r\n      ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Confirm Password is required\")\r\n      .test(\r\n        \"ConfirmPasswordMatch\",\r\n        \"Password and Confirmation Password must match\",\r\n        (confirmPassword) => {\r\n          return confirmPassword === watch.password;\r\n        },\r\n      ),\r\n  });\r\n\r\n  // react hook form\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    setError,\r\n    clearErrors,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {},\r\n  });\r\n  const watch = useWatch({\r\n    control,\r\n  });\r\n\r\n  useEffect(() => {\r\n    userApi.checkUserNameExists(watch.userName).then((response) => {\r\n      if (response.isExists) {\r\n        setError(\r\n          \"userName\",\r\n          {\r\n            type: \"required\",\r\n            message: `Username '${watch.userName}' is already taken`,\r\n          },\r\n          { shouldFocus: true },\r\n        );\r\n        setIsExistsUserName(true);\r\n      } else {\r\n        clearErrors(\"userName\");\r\n        setIsExistsUserName(false);\r\n      }\r\n    });\r\n  }, [watch.userName]);\r\n\r\n  useEffect(() => {\r\n    const onChange = () => {\r\n      var isValid =\r\n        watch.firstName?.trim() &&\r\n        watch.lastName?.trim() &&\r\n        watch.userName?.trim() &&\r\n        watch.email &&\r\n        watch.password &&\r\n        watch.confirmPassword;\r\n\r\n      if (isValid) {\r\n        setIsChanged(true);\r\n        return;\r\n      }\r\n      setIsChanged(false);\r\n    };\r\n\r\n    onChange();\r\n  }, [watch]);\r\n\r\n  // handle submit\r\n  const onSubmit = (content) => {\r\n    userApi.register(content).then((response) => {\r\n      openPopup(\r\n        \"Success\",\r\n        <span>\r\n          \"Create account successfully! Please{\" \"}\r\n          <Link className=\"font-bold text-green-600\" to=\"/login\">\r\n            log in\r\n          </Link>\r\n          !\"\r\n        </span>,\r\n      );\r\n      reset({});\r\n    });\r\n  };\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        title={popup.title}\r\n        isOpen={popup.isOpen}\r\n        content={popup.content}\r\n        onClick={() => {\r\n          setPopup({ isOpen: false });\r\n          history.push(\"/login\");\r\n        }}\r\n      />\r\n      <div className=\"z-10 h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n        <img\r\n          src={LoginPageImage}\r\n          alt=\"login\"\r\n          className=\"md:block hidden col-span-3 w-full ml-44\"\r\n        />\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"container rounded-2xl flex flex-col py-10 md:w-full md:col-span-4 md:px-20 lg:px-48\"\r\n        >\r\n          <img src={Logo} alt=\"login\" className=\"h-20 w-20 mx-auto mb-3\" />\r\n          <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n            Sign up to TeeChat!\r\n          </h1>\r\n          <div className=\"mb-3 grid grid-cols-2 place-items-start \">\r\n            <div className=\"col-span-1 space-y-2 mr-2 w-full\">\r\n              <label htmlFor=\"fistName\" className=\"text-lg font-semibold \">\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"firstName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.firstName?.message}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 space-y-2 ml-2 w-full\">\r\n              <label htmlFor=\"lastName\" className=\"text-lg font-semibold \">\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"lastName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.lastName?.message}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"userName\" className=\"text-lg font-semibold \">\r\n              Username <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"userName\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.userName?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"email\" className=\"text-lg font-semibold \">\r\n              Email <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"email\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">{errors.email?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"password\" className=\"text-lg font-semibold \">\r\n              Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"password\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.password?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"confirmPassword\" className=\"text-lg font-semibold \">\r\n              Confirm Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"confirmPassword\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.confirmPassword?.message}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            disabled={!isChanged}\r\n            content=\"Sign Up\"\r\n            className=\"mb-4 mt-2 font-bold\"\r\n          />\r\n          <div className=\"text-center\">\r\n            Already a member?{\" \"}\r\n            <Link to=\"/login\" className=\"text-green-500 font-bold\">\r\n              Sign in\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\nfunction checkRegex(value, regex) {\r\n  if (value && regex) {\r\n    var pattern = new RegExp(regex);\r\n    var res = pattern.test(value);\r\n    return res;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.c72c9a3e.jpg\";","import React from \"react\";\r\nimport ErrorImg from \"assets/img/error.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ServerError({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ErrorImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Oops! Something went wrong!\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { setPopup } from \"app/appSlice\";\r\nimport Loader from \"components/Loader\";\r\nimport Popup from \"components/Popup\";\r\nimport Chat from \"./pages/Chat\";\r\nimport Forbid from \"./pages/Forbid\";\r\nimport Login from \"./pages/Login\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Register from \"./pages/Register\";\r\nimport ServerError from \"./pages/ServerError\";\r\n\r\nfunction App() {\r\n  const isLoading = useSelector((state) => state.app.isLoading);\r\n  const popup = useSelector((state) => state.app.popup);\r\n  const dispatch = useDispatch();\r\n\r\n  function closePopup() {\r\n    dispatch(setPopup({ isOpen: false }));\r\n  }\r\n  return (\r\n    <>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Loader isOpen={isLoading} className=\"z-50\" />\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={closePopup}\r\n        />\r\n\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/forbid\" component={Forbid} />\r\n          <Route path=\"/ServerError\" component={ServerError} />\r\n          <PrivateRoute path=\"/chats\" component={Chat} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  var isLogin = window.localStorage.getItem(\"token\") ? true : false;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"app/store\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"boxicons/css/boxicons.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}