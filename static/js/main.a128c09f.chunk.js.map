{"version":3,"sources":["app/chatSlice.js","app/appSlice.js","app/userSlice.js","app/store.js","components/Loader/index.jsx","components/Button/index.jsx","components/Popup/index.jsx","assets/img/default-avatar.jpg","components/ImageCircle/index.jsx","utils/constants.js","components/ChatList/index.jsx","assets/icons/info-icon.svg","assets/icons/left-arrow-icon.svg","assets/icons/emoji.svg","assets/icons/image-icon.svg","assets/icons/send-icon.svg","components/ClickableIcon/index.jsx","hooks/useApi.js","hooks/useChatApi.js","components/ChatInput/index.jsx","components/ConfirmModal/index.jsx","hooks/useUserApi.js","components/EditChat/index.jsx","components/ChatWindow/index.jsx","hooks/useMessagePagination.js","components/CreateChat/index.jsx","components/UserInfo/index.jsx","hooks/useDarkMode.js","components/Header/index.jsx","logo.png","pages/Chat/index.jsx","assets/img/forbid.jpg","pages/Forbid/index.jsx","assets/img/login-page.jpg","pages/Login/index.jsx","assets/img/not-found.jpg","pages/NotFound/index.jsx","pages/Register/index.jsx","assets/img/error.jpg","pages/ServerError/index.jsx","App.js","index.js"],"names":["chats","createSlice","name","initialState","reducers","addChat","state","action","push","payload","editChat","updatedChat","index","findIndex","chat","id","participants","editGroupAvatar","updatedChatId","chatId","groupAvatarUrl","appendMessageToChat","chatToAppend","messagesToAppend","messages","totalRecords","limit","page","pageCount","keyword","concat","refreshChats","addMessage","newMessage","message","selectedId","setSelectedId","reducer","combineReducers","actions","isLoading","setIsLoading","popup","isOpen","content","title","setPopup","currentUser","getCurrentUser","user","token","window","localStorage","getItem","jwt","decodeCurrentUser","updateUser","userName","rootReducer","chatReducer","app","appReducer","users","store","configureStore","Loader","className","circleCommonClasses","useState","isEnding","setIsEnding","useEffect","Button","outline","onClick","onBlur","disabled","Popup","ImageCircle","realSize","src","DefaultAvatar","alt","size","constants","chatType","PRIVATE","GROUP","NO_NAME_GROUP","ChatList","useSelector","dispatch","useDispatch","setKeyword","type","placeholder","onChange","e","target","value","getCurrentChats","map","currentUserName","some","x","friend","length","filter","shift","lastMessage","reduce","a","b","dateCreated","handleClick","avatarUrl","fullName","moment","Date","fromNow","now","result","sort","chatA","chatB","lastMessageA","lastMessageB","sortChat","toLowerCase","includes","searchChat","ClickableIcon","icon","iconClass","useApi","history","useHistory","Api","axios","create","baseURL","process","timeout","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","newConfig","Authorization","response","data","error","console","status","removeItem","Promise","reject","baseApiUrl","useChatApi","getAll","url","get","getById","sendMessage","post","sendImage","updateGroupAvatar","patch","createGroupChat","updateGroupChat","createPrivateChat","ChatInput","setContent","setChosenEmoji","isOpenEmoji","setIsOpenEmoji","ref","useRef","chatApi","preventDefault","file","files","formData","FormData","append","checkIfClickedOutside","current","contains","document","addEventListener","removeEventListener","onSubmit","onSendMessage","hidden","accept","htmlFor","ImageIcon","position","EmojiIcon","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","SendIconNormal","ConfirmModal","closeAction","confirmButtonTitle","confirmButtonAction","useUserApi","login","register","checkUserNameExists","getFriendList","put","EditChat","setIsOpen","isOpenModal","setIsOpenModal","modalContent","setModalContent","groupName","setGroupName","friendList","setFriendList","isOpenFriendList","setIsOpenFriendList","selectedFriendList","setSelectedFriendList","userApi","friendListRef","currentParticipantUserNames","selectedParticipantUserNames","participantFullNamesToAdd","participantFullNamesToRemove","participantUserNamesToRemove","forEach","openModal","submitEditChat","participantUserNamesToAdd","newGroupName","closeModal","then","openPopup","onFocus","autoComplete","selected","localeCompare","Math","random","i","splice","creatorUserName","format","handleEditChat","ChatWindow","showTimeIndexes","setShowTimeIndexes","isOpenInfoPopup","setIsOpenInfoPopup","handleMessageClick","setPage","currentChat","loading","setLoading","setError","appendChat","setAppendChat","hasMore","setHasMore","catch","useMessagePagination","endMessageRef","scrollIntoView","LeftArrowIcon","InfoIcon","prevPage","messageA","messageB","senderUserName","calendar","imageUrl","senderFullName","CreateChat","selectedMode","setSelectedMode","isValidButton","setIsValidButton","participantUserNames","participantUserName","handleCreateGroup","UserInfo","firstName","setFirstName","lastName","setLastName","avatar","setAvatar","submit","useDarkMode","darkMode","setDarkMode","documentElement","classList","add","setItem","remove","Header","logout","isOpenCreateChat","setIsOpenCreateChat","isOpenUserInfo","setIsOpenUserInfo","confirmModal","setConfirmModal","userAvatar","isOpenMenu","setIsOpenMenu","openConfirmModal","Chat","connection","setConnection","fetchData","newConnection","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","build","connectionStarted","start","on","stop","find","Logo","Forbid","ForbidImg","to","Login","username","setUsername","password","setPassword","isDirty","setIsDirty","LoginPageImage","NotFound","NotFoundImg","Register","isChanged","setIsChanged","isExistsUserName","setIsExistsUserName","schema","yup","shape","required","min","max","test","checkRegex","email","confirmPassword","watch","useForm","resolver","yupResolver","defaultValues","handleSubmit","control","clearErrors","reset","errors","formState","useWatch","isExists","shouldFocus","regex","RegExp","ServerError","ErrorImg","App","basename","path","component","PrivateRoute","exact","Component","rest","isLogin","render","props","pathname","from","location","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a128c09f.chunk.js","sourcesContent":["import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst chats = createSlice({\r\n  name: \"chats\",\r\n  initialState: [],\r\n  reducers: {\r\n    addChat: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    editChat: (state, action) => {\r\n      const updatedChat = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChat.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].name = updatedChat.name;\r\n        state[index].participants = updatedChat.participants;\r\n      }\r\n    },\r\n    editGroupAvatar: (state, action) => {\r\n      const updatedChatId = action.payload.chatId;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].groupAvatarUrl = action.payload.groupAvatarUrl;\r\n      }\r\n    },\r\n    appendMessageToChat: (state, action) => {\r\n      const chatToAppend = action.payload;\r\n      const messagesToAppend = chatToAppend?.messages;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatToAppend.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].totalRecords = chatToAppend.totalRecords;\r\n        state[index].limit = chatToAppend.limit;\r\n        state[index].page = chatToAppend.page;\r\n        state[index].pageCount = chatToAppend.pageCount;\r\n        if (chatToAppend.keyword) {\r\n          state[index].messages = messagesToAppend;\r\n        } else {\r\n          state[index].messages =\r\n            state[index].messages.concat(messagesToAppend);\r\n        }\r\n      }\r\n    },\r\n    refreshChats: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n    addMessage: (state, action) => {\r\n      const newMessage = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === newMessage.chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].messages.push(newMessage?.message);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst selectedId = createSlice({\r\n  name: \"selectedId\",\r\n  initialState: 0,\r\n  reducers: {\r\n    setSelectedId: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  chats: chats.reducer,\r\n  selectedId: selectedId.reducer,\r\n});\r\n\r\nexport const {\r\n  addChat,\r\n  editChat,\r\n  refreshChats,\r\n  addMessage,\r\n  appendMessageToChat,\r\n  editGroupAvatar,\r\n} = chats.actions;\r\nexport const { setSelectedId } = selectedId.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst isLoading = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst popup = createSlice({\r\n  name: \"popup\",\r\n  initialState: {\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  },\r\n  reducers: {\r\n    setPopup: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  isLoading: isLoading.reducer,\r\n  popup: popup.reducer,\r\n});\r\n\r\nexport const { setIsLoading } = isLoading.actions;\r\nexport const { setPopup } = popup.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nconst currentUser = createSlice({\r\n  name: \"currentUser\",\r\n  initialState: {},\r\n  reducers: {\r\n    getCurrentUser: (state, action) => {\r\n      var user = decodeCurrentUser();\r\n      if (user) {\r\n        state = user;\r\n        return state;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      if (action.payload.userName) {\r\n        state = action.payload;\r\n        return state;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  currentUser: currentUser.reducer,\r\n});\r\n\r\nexport const { getCurrentUser, updateUser } = currentUser.actions;\r\nexport default reducer;\r\n\r\nfunction decodeCurrentUser() {\r\n  var token = window.localStorage.getItem(\"token\");\r\n  if (token) {\r\n    const user = jwt(token);\r\n    return user;\r\n  }\r\n  return false;\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport chatReducer from \"app/chatSlice\";\r\nimport appReducer from \"app/appSlice\";\r\nimport userReducer from \"app/userSlice\";\r\n\r\nconst rootReducer = {\r\n  chats: chatReducer,\r\n  app: appReducer,\r\n  users: userReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\n// import Logo from \"logo.png\";\r\n\r\nconst Loader = ({ className, isOpen = true }) => {\r\n  let circleCommonClasses =\r\n    \"h-3 w-3 bg-gradient-to-br from-green-300 to-green-600 shadow-md rounded-full\";\r\n  const [isEnding, setIsEnding] = useState(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsEnding(true);\r\n    };\r\n  }, []);\r\n  return (\r\n    isOpen && (\r\n      <>\r\n        <div\r\n          className={\r\n            \"z-50  animate-fade flex flex-col h-screen w-screen justify-center items-center fixed transition-all duration-200 bg-white dark:bg-dark-secondary dark:bg-opacity-50 bg-opacity-50\" +\r\n            (isEnding ? \" hidden\" : \"\") +\r\n            (\" \" + className ?? \"\")\r\n          }\r\n        >\r\n          {/* <img\r\n            src={Logo}\r\n            className=\"animate-bounce w-20 h-20 mb-10\"\r\n            alt=\"logo\"\r\n          /> */}\r\n          <div className=\"flex justify-center items-center transition-all duration-200\">\r\n            <div className={`${circleCommonClasses} mr-3 animate-bounce`}></div>\r\n            <div\r\n              className={`${circleCommonClasses} mr-3 animate-bounce200`}\r\n            ></div>\r\n            <div className={`${circleCommonClasses} animate-bounce400`}></div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nButton.propTypes = {\r\n  content: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nfunction Button({\r\n  outline = false,\r\n  content,\r\n  className,\r\n  onClick,\r\n  onBlur,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n        className={\r\n          \"px-4 py-2 rounded-lg transition-all duration-200 disabled:opacity-50 outline-none z-0 select-none \" +\r\n          \" \" +\r\n          (outline\r\n            ? \"border border-green-500 bg-white dark:bg-transparent dark:hover:bg-green-500 text-green-500 hover:text-white hover:bg-green-400 active:bg-green-500\"\r\n            : \"bg-gradient-to-br from-green-400 to-green-600 text-white active:from-green-500 active:to-green-600  \") +\r\n          \" \" +\r\n          (className ?? \"\") +\r\n          \" \" +\r\n          (!disabled ? \"active:scale-95 active:transform\" : \"cursor-default\")\r\n        }\r\n      >\r\n        {content}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nPopup.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nfunction Popup({\r\n  title = \"Notification\",\r\n  isOpen,\r\n  content = \"Oops! Something went wrong!\",\r\n  onClick,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50 z-50\">\r\n        <div className=\"bg-white dark:bg-dark-secondary py-8 px-8 w-full md:w-2/3 lg:w-2/5 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-dark-txt\">\r\n            {title}\r\n          </h3>\r\n          <span className=\"break-words dark:text-dark-txt\">{content}</span>\r\n          <div className=\"w-full flex justify-end\">\r\n            <Button content=\"Close\" onClick={onClick} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.ae67bd1e.jpg\";","import DefaultAvatar from \"assets/img/default-avatar.jpg\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nImageCircle.propTypes = {\r\n  src: PropTypes.string,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nfunction ImageCircle({\r\n  src = DefaultAvatar,\r\n  className = \"\",\r\n  alt = \"Avatar\",\r\n  size = \"md\",\r\n}) {\r\n  const xsSize = \"h-6 w-6\";\r\n  const smSize = \"h-8 w-8\";\r\n  const mdSize = \"h-12 w-12\";\r\n  const lgSize = \"h-16 w-16\";\r\n  const xlSize = \"h-24 w-24\";\r\n  const fullSize = \"h-full w-full\";\r\n  var realSize;\r\n  switch (size) {\r\n    case \"xs\":\r\n      realSize = xsSize;\r\n      break;\r\n    case \"sm\":\r\n      realSize = smSize;\r\n      break;\r\n    case \"lg\":\r\n      realSize = lgSize;\r\n      break;\r\n    case \"xl\":\r\n      realSize = xlSize;\r\n      break;\r\n    case \"full\":\r\n      realSize = fullSize;\r\n      break;\r\n    default:\r\n      realSize = mdSize;\r\n  }\r\n  return (\r\n    <>\r\n      <img\r\n        className={\r\n          realSize +\r\n            \" \" +\r\n            \"select-none bg-white rounded-full object-cover \" +\r\n            \" \" +\r\n            className ?? \"\"\r\n        }\r\n        src={!src || src === \"\" ? DefaultAvatar : src}\r\n        alt={alt}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageCircle;\r\n","const constants = {\r\n  chatType: {\r\n    PRIVATE: 1,\r\n    GROUP: 2,\r\n  },\r\n  NO_NAME_GROUP: \"No name\",\r\n};\r\n\r\nexport default constants;\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction ChatList() {\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  function handleClick(id) {\r\n    if (id !== selectedId) {\r\n      const action = setSelectedId(id);\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"search\"\r\n        className=\"my-3 rounded-3xl bg-gray-100 px-4 py-2 focus:ring-2 focus:ring-green-400 focus:ring-opacity-50 outline-none transition-all duration-200 w-full dark:bg-dark-secondary dark:text-white\"\r\n        placeholder=\"Search chat\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n      />\r\n      <div className=\"h-full overflow-x-hidden space-y-2 overflow-y-auto pr-2 \">\r\n        {chats &&\r\n          getCurrentChats(chats, keyword).map((chat, index) => {\r\n            const currentUserName = currentUser.userName;\r\n\r\n            // check current user still exist in chat (remove participant case)\r\n            var isValid = chat?.participants.some(\r\n              (x) => x.userName === currentUserName,\r\n            );\r\n            if (!isValid) {\r\n              return;\r\n            }\r\n\r\n            const friend =\r\n              chat?.participants.length > 1\r\n                ? chat?.participants\r\n                    ?.filter((x) => x.userName !== currentUserName)\r\n                    .shift()\r\n                : currentUser;\r\n            let lastMessage = {};\r\n            if (chat.messages?.length !== 0) {\r\n              lastMessage = chat.messages?.reduce((a, b) =>\r\n                a.dateCreated > b.dateCreated ? a : b,\r\n              );\r\n            }\r\n            return (\r\n              <div\r\n                key={Date.now() + index}\r\n                className={\r\n                  \"select-none w-full h-20 flex flex-start cursor-pointer hover:bg-gray-100 p-2 rounded-lg transition-all duration-150 ease-in dark:hover:bg-dark-secondary dark:text-dark-txt\" +\r\n                  \" \" +\r\n                  (selectedId === chat.id\r\n                    ? \"bg-gray-100 dark:bg-dark-secondary\"\r\n                    : \"\")\r\n                }\r\n                onClick={() => handleClick(chat.id)}\r\n              >\r\n                <ImageCircle\r\n                  src={\r\n                    chat.type === constants.chatType.PRIVATE\r\n                      ? friend?.avatarUrl\r\n                      : chat.groupAvatarUrl\r\n                  }\r\n                  size=\"lg\"\r\n                />\r\n\r\n                <div className=\"font-primary flex flex-col px-3 py-2 justify-between truncate\">\r\n                  <span className=\"text-gray-800 truncate dark:text-dark-txt\">\r\n                    {chat.type === constants.chatType.PRIVATE\r\n                      ? friend?.fullName\r\n                      : chat.name ?? constants.NO_NAME_GROUP}\r\n                  </span>\r\n                  <div className=\"flex\">\r\n                    <span className=\"mr-2 text-sm max-w-200 md:max-w-100 text-gray-500 truncate\">\r\n                      {lastMessage.content ?? \"\"}\r\n                    </span>\r\n                    <span className=\"text-sm flex-grow text-gray-500 truncate\">\r\n                      {moment(\r\n                        new Date(lastMessage.dateCreated ?? chat.dateCreated),\r\n                        \"YYYYMMDD\",\r\n                      ).fromNow()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n\r\nfunction getCurrentChats(chats, keyword) {\r\n  var result = sortChat(chats);\r\n  result = searchChat(result, keyword);\r\n  return result;\r\n}\r\n\r\nfunction sortChat(chats) {\r\n  if (chats) {\r\n    return [...chats].sort((chatA, chatB) => {\r\n      let lastMessageA = {};\r\n      let lastMessageB = {};\r\n      // check if chat no message => return date created of chat\r\n      if (chatA.messages?.length !== 0) {\r\n        lastMessageA = chatA.messages?.reduce((a, b) => {\r\n          return a.dateCreated > b.dateCreated ? a : b;\r\n        });\r\n      } else {\r\n        lastMessageA.dateCreated = chatA.dateCreated;\r\n      }\r\n      if (chatB.messages?.length !== 0) {\r\n        lastMessageB = chatB.messages?.reduce((a, b) =>\r\n          a.dateCreated > b.dateCreated ? a : b,\r\n        );\r\n      } else {\r\n        lastMessageB.dateCreated = chatB.dateCreated;\r\n      }\r\n\r\n      return lastMessageA?.dateCreated < lastMessageB?.dateCreated ? 1 : -1;\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchChat(chats, keyword) {\r\n  if (chats) {\r\n    return chats.filter((chat) => {\r\n      let isValid = chat?.participants.some((x) => {\r\n        if (x.fullName.toLowerCase().includes(keyword.toLowerCase())) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return (\r\n        isValid || chat.name?.toLowerCase().includes(keyword.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info-icon.b4879a5e.svg\";","export default __webpack_public_path__ + \"static/media/left-arrow-icon.07714e5b.svg\";","export default __webpack_public_path__ + \"static/media/emoji.21d0cbf4.svg\";","export default __webpack_public_path__ + \"static/media/image-icon.c8ad9f46.svg\";","export default __webpack_public_path__ + \"static/media/send-icon.666dadc9.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nClickableIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nfunction ClickableIcon({ className, icon, iconClass, alt, onClick, onBlur }) {\r\n  return (\r\n    <>\r\n      <div\r\n        onBlur={onBlur}\r\n        onClick={onClick}\r\n        className={\r\n          \"p-1 rounded-full hover:bg-gray-200 active:bg-gray-300 dark:hover:bg-dark-hover dark:border-dark-third transition-all duration-200 cursor-pointer ease-in dark:active:bg-dark-third active:scale-90 active:transform select-none \" +\r\n          (className ?? \"\")\r\n        }\r\n      >\r\n        {icon ? (\r\n          <img\r\n            alt={alt ?? \"Clickable Icon\"}\r\n            src={icon}\r\n            onClick={onClick}\r\n            className=\"w-full\"\r\n          />\r\n        ) : (\r\n          <i\r\n            className={\r\n              \"text-center align-middle text-xl text-black dark:text-dark-txt w-7 h-7 \" +\r\n              \" \" +\r\n              iconClass\r\n            }\r\n          ></i>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ClickableIcon;\r\n","import { setIsLoading, setPopup } from \"app/appSlice\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useApi() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const Api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    timeout: 300000,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n  });\r\n\r\n  Api.interceptors.request.use(async (config) => {\r\n    var token = window.localStorage.getItem(\"token\");\r\n\r\n    var newConfig = config;\r\n    if (token) {\r\n      newConfig = {\r\n        ...config,\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n    }\r\n    return newConfig;\r\n  });\r\n  Api.interceptors.response.use(\r\n    (response) => {\r\n      dispatch(setIsLoading(false));\r\n\r\n      if (response && response.data) {\r\n        return response.data;\r\n      }\r\n      return response;\r\n    },\r\n    (error) => {\r\n      if (error.response) {\r\n        console.error(error.response);\r\n        dispatch(setIsLoading(false));\r\n\r\n        switch (error.response.status) {\r\n          case 401:\r\n            window.localStorage.removeItem(\"token\");\r\n            history.push(\"/login\");\r\n            break;\r\n          case 403:\r\n            history.push(\"/ForBid\");\r\n            break;\r\n          case 500:\r\n            history.push(\"/ServerError\");\r\n            break;\r\n          default:\r\n            var message =\r\n              typeof error?.response?.data === \"string\"\r\n                ? error?.response?.data\r\n                : \"Oops, something went wrong! Please contact administrator.\";\r\n\r\n            openPopup(\"Error\", message);\r\n            return Promise.reject(error.response?.data);\r\n        }\r\n      }\r\n      return Promise.reject(error?.response?.data);\r\n    },\r\n  );\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return Api;\r\n}\r\n","import { setIsLoading } from \"app/appSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useApi from \"./useApi.js\";\r\n\r\nconst baseApiUrl = \"/chats\";\r\n\r\nexport default function useChatApi() {\r\n  const Api = useApi();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatApi = {\r\n    getAll: () => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}`;\r\n      return Api.get(url);\r\n    },\r\n    getById: (chatId, params) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}`;\r\n      return Api.get(url, { params });\r\n    },\r\n    sendMessage: (chatId, content) => {\r\n      const url = `${baseApiUrl}/${chatId}/send`;\r\n      return Api.post(url, content);\r\n    },\r\n    sendImage: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}/sendImage`;\r\n\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.post(url, content);\r\n    },\r\n    updateGroupAvatar: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}/avatar`;\r\n\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.patch(url, content);\r\n    },\r\n    createGroupChat: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/group`;\r\n      return Api.post(url, content);\r\n    },\r\n    updateGroupChat: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}`;\r\n      return Api.patch(url, content);\r\n    },\r\n    createPrivateChat: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/private`;\r\n      return Api.post(url, content);\r\n    },\r\n  };\r\n  return chatApi;\r\n}\r\n","import EmojiIcon from \"assets/icons/emoji.svg\";\r\nimport ImageIcon from \"assets/icons/image-icon.svg\";\r\nimport SendIconNormal from \"assets/icons/send-icon.svg\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nChatInput.propTypes = {\r\n  chatId: PropTypes.number,\r\n};\r\n\r\nfunction ChatInput({ chatId }) {\r\n  const [content, setContent] = useState(\"\");\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [isOpenEmoji, setIsOpenEmoji] = useState(false);\r\n  const ref = useRef();\r\n\r\n  const chatApi = useChatApi();\r\n\r\n  async function onSendMessage(e) {\r\n    e.preventDefault();\r\n    if (!content) {\r\n      return;\r\n    }\r\n    setContent(\"\");\r\n\r\n    var request = { content };\r\n    await chatApi.sendMessage(chatId, request);\r\n  }\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject);\r\n    if (emojiObject?.emoji) {\r\n      setContent(content + emojiObject?.emoji);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenEmoji && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenEmoji(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenEmoji]);\r\n\r\n  async function sendImage(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Image\", file);\r\n\r\n    await chatApi.sendImage(chatId, formData);\r\n  }\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => onSendMessage(e)}\r\n        className=\"flex justify-between items-center space-x-1 pl-4 pr-2 md:pr-6 z-0\"\r\n      >\r\n        <div className=\"relative w-full flex\">\r\n          <input\r\n            id=\"imageFile\"\r\n            type=\"file\"\r\n            hidden\r\n            accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n            onChange={sendImage}\r\n          />\r\n          <label htmlFor=\"imageFile\">\r\n            <ClickableIcon className=\"h-10 w-10 p-2 mr-2\" icon={ImageIcon} />\r\n          </label>\r\n          <input\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Aa\"\r\n            className=\"bg-gray-200 dark:bg-dark-secondary rounded-3xl w-full py-2 px-4 pr-12 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 relative\"\r\n          />\r\n          <div ref={ref} position=\"relative\">\r\n            <ClickableIcon\r\n              className=\"absolute h-10 w-10 p-2 right-1 top-0\"\r\n              icon={EmojiIcon}\r\n              onClick={() => setIsOpenEmoji(!isOpenEmoji)}\r\n            />\r\n            <div\r\n              className={\r\n                \"animate-fade absolute right-0 bottom-full \" +\r\n                \" \" +\r\n                (isOpenEmoji ? \"visible\" : \"invisible\")\r\n              }\r\n            >\r\n              <Picker onEmojiClick={onEmojiClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button>\r\n          <ClickableIcon\r\n            disableAutoFocus\r\n            icon={SendIconNormal}\r\n            className=\"w-12 h-12 p-3\"\r\n          />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nConfirmModal.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  confirmButtonTitle: PropTypes.string,\r\n  confirmButtonAction: PropTypes.func,\r\n};\r\n\r\nfunction ConfirmModal({\r\n  title,\r\n  isOpen,\r\n  content = \"Are you sure?\",\r\n  closeAction,\r\n  confirmButtonTitle,\r\n  confirmButtonAction,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 dark:bg-dark-primary dark:bg-opacity-50 bg-opacity-30 z-50\">\r\n        <div className=\"bg-white dark:bg-dark-secondary dark:border-dark-third py-8 px-8 w-full md:w-2/3 lg:w-2/5 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-dark-txt\">\r\n            {title !== \"\" ? title : \"Notification\"}\r\n          </h3>\r\n          <span className=\"break-words dark:text-dark-txt\">{content}</span>\r\n          <div className=\"w-full flex justify-end space-x-2\">\r\n            <Button outline content=\"No\" onClick={closeAction} />\r\n            <Button\r\n              content={confirmButtonTitle ?? \"Ok\"}\r\n              onClick={confirmButtonAction}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import { setIsLoading } from \"app/appSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useApi from \"./useApi.js\";\r\n\r\nconst baseApiUrl = \"/users\";\r\n\r\nexport default function useUserApi() {\r\n  const Api = useApi();\r\n  const dispatch = useDispatch();\r\n\r\n  const userApi = {\r\n    login: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/login`;\r\n      return Api.post(url, content);\r\n    },\r\n    register: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/register`;\r\n      return Api.post(url, content);\r\n    },\r\n    checkUserNameExists: (userName) => {\r\n      if (userName) {\r\n        const url = `${baseApiUrl}/${userName}/isExists`;\r\n        return Api.get(url);\r\n      }\r\n      return Promise.reject();\r\n    },\r\n    getFriendList: () => {\r\n      const url = `${baseApiUrl}`;\r\n      return Api.get(url);\r\n    },\r\n    getCurrentUser: () => {\r\n      const url = `${baseApiUrl}/current`;\r\n      return Api.get(url);\r\n    },\r\n    updateUser: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}`;\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.put(url, content);\r\n    },\r\n  };\r\n  return userApi;\r\n}\r\n","import Button from \"components/Button\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport Popup from \"components/Popup\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction EditChat({ isOpen, setIsOpen, chat }) {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  const [groupName, setGroupName] = useState(chat.name);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [selectedFriendList, setSelectedFriendList] = useState(\r\n    chat.participants,\r\n  );\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setSelectedFriendList(chat.participants);\r\n    setGroupName(chat.name);\r\n  }, [chat]);\r\n\r\n  async function handleEditChat() {\r\n    var currentParticipantUserNames = chat?.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantFullNamesToAdd = [];\r\n    var participantFullNamesToRemove = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedFriendList.forEach((user) => {\r\n      if (!currentParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToAdd.push(user.fullName);\r\n      }\r\n    });\r\n    chat?.participants.forEach((user) => {\r\n      if (!selectedParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToRemove.push(user.fullName);\r\n        participantUserNamesToRemove.push(user.userName);\r\n      }\r\n    });\r\n\r\n    if (participantFullNamesToRemove.length > 0) {\r\n      var content = \"\";\r\n\r\n      if (\r\n        participantUserNamesToRemove.some((x) => x === currentUser.userName)\r\n      ) {\r\n        if (participantFullNamesToRemove.length === 1) {\r\n          content = \"Do you want to leave this group?\";\r\n          openModal(content);\r\n          return <></>;\r\n        } else {\r\n          content = \"Do you want to leave this group and remove \";\r\n        }\r\n      } else {\r\n        content = \"Do you want to remove \";\r\n      }\r\n\r\n      participantFullNamesToRemove.forEach((fullName, index) => {\r\n        if (participantUserNamesToRemove[index] !== currentUser.userName) {\r\n          content += `'${fullName}'`;\r\n          if (index !== participantFullNamesToRemove.length - 1) {\r\n            content += \", \";\r\n          }\r\n        }\r\n      });\r\n\r\n      content += \" from this chat?\";\r\n      openModal(content);\r\n    } else {\r\n      await submitEditChat();\r\n    }\r\n  }\r\n  async function submitEditChat() {\r\n    var currentParticipantUserNames = chat?.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantUserNamesToAdd = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedParticipantUserNames.forEach((userName) => {\r\n      if (!currentParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToAdd.push(userName);\r\n      }\r\n    });\r\n    currentParticipantUserNames.forEach((userName) => {\r\n      if (!selectedParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToRemove.push(userName);\r\n      }\r\n    });\r\n\r\n    const request = {\r\n      newGroupName: groupName,\r\n      participantUserNamesToAdd,\r\n      participantUserNamesToRemove,\r\n    };\r\n\r\n    chatApi.updateGroupChat(chat.id, request);\r\n\r\n    closeModal();\r\n    setIsOpen(false);\r\n  }\r\n\r\n  async function updateGroupAvatar(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Avatar\", file);\r\n\r\n    await chatApi.updateGroupAvatar(chat.id, formData).then((response) => {\r\n      openPopup(\"Success\", \"Update group avatar successfully!\");\r\n    });\r\n  }\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n  function openModal(content) {\r\n    setIsOpenModal(true);\r\n    setModalContent(content);\r\n  }\r\n  function closeModal() {\r\n    setIsOpenModal(false);\r\n    setModalContent(\"\");\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"md:px-5 md:py-3 flex flex-col bg-white dark:bg-dark-secondary dark:border-dark-third rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={() => setPopup({ isOpen: false })}\r\n        />\r\n        <ConfirmModal\r\n          isOpen={isOpenModal}\r\n          closeAction={() => setIsOpenModal(false)}\r\n          title=\"Are you sure?\"\r\n          content={modalContent}\r\n          confirmButtonTitle=\"Yes\"\r\n          confirmButtonAction={submitEditChat}\r\n        />\r\n        <div className=\"flex px-10 pt-6 pb-5 space-x-7 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-2xl text-green-600 dark:text-green-400\">\r\n            Chat info!\r\n          </h3>\r\n        </div>\r\n        <div className=\"px-10 space-y-4\">\r\n          {chat.type === constants.chatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold dark:text-dark-txt text-lg\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-dark-third bg-gray-100  rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold dark:text-dark-txt text-lg\"\r\n                >\r\n                  Add Members\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-third border border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none z-10 shadow-xl\">\r\n                        <h4 className=\"font-semibold mb-2\">Friend list</h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-hover bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                                {friend.fullName ?? \"Unknown\"}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold dark:text-dark-txt text-lg\"\r\n                >\r\n                  Members <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white border dark:bg-dark-third dark:border-dark-third border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none\">\r\n                  {[...selectedFriendList]\r\n                    .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                    .map((friend, index) => (\r\n                      <div\r\n                        onClick={() => {\r\n                          var result = [...selectedFriendList];\r\n                          var i = result.findIndex(\r\n                            (x) => x.userName === friend.userName,\r\n                          );\r\n                          if (i >= 0) {\r\n                            result.splice(i, 1);\r\n                            setSelectedFriendList(result);\r\n                          }\r\n                        }}\r\n                        key={Math.random() + index}\r\n                        className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2 dark:hover:bg-red-500 dark:bg-dark-hover bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                      >\r\n                        <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                        <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                          {friend.fullName ?? \"Unknown\"}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 mr-2 flex flex-col\">\r\n                <label\r\n                  htmlFor=\"avatar\"\r\n                  className=\"dark:text-dark-txt text-lg font-semibold \"\r\n                >\r\n                  Group Avatar\r\n                </label>\r\n                <input\r\n                  id=\"avatar\"\r\n                  onChange={updateGroupAvatar}\r\n                  type=\"file\"\r\n                  accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Created user:{\" \"}\r\n                <span className=\"font-normal\">{chat.creatorUserName}</span>\r\n              </div>\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Created date:{\" \"}\r\n                <span className=\"font-normal\">\r\n                  {moment(new Date(chat.dateCreated), \"YYYYMMDD\").format(\r\n                    \"MMMM Do YYYY, h:mm:ss a\",\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end px-10 py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            {chat.type === constants.chatType.GROUP ? (\r\n              <Button content=\"Save\" onClick={() => handleEditChat()} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default EditChat;\r\n","import { appendMessageToChat, setSelectedId } from \"app/chatSlice\";\r\nimport InfoIcon from \"assets/icons/info-icon.svg\";\r\nimport LeftArrowIcon from \"assets/icons/left-arrow-icon.svg\";\r\nimport ChatInput from \"components/ChatInput\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport EditChat from \"components/EditChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useMessagePagination from \"hooks/useMessagePagination\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction ChatWindow({ chat }) {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const [showTimeIndexes, setShowTimeIndexes] = useState([]);\r\n  const [isOpenInfoPopup, setIsOpenInfoPopup] = useState(false);\r\n\r\n  let currentUserName = currentUser.userName;\r\n\r\n  const friend =\r\n    chat?.participants.length > 1\r\n      ? chat?.participants\r\n          ?.filter((x) => x.userName !== currentUserName)\r\n          .shift()\r\n      : currentUser;\r\n\r\n  function backToChats() {\r\n    const action = setSelectedId(0);\r\n    dispatch(action);\r\n  }\r\n\r\n  function handleMessageClick(index) {\r\n    var result = [...showTimeIndexes];\r\n    const i = result.findIndex((x) => x === index);\r\n    if (i >= 0) {\r\n      result = result.filter((x) => x !== index);\r\n    } else {\r\n      result.push(index);\r\n    }\r\n    setShowTimeIndexes(result);\r\n  }\r\n\r\n  // infinity scrolling\r\n  const [page, setPage] = useState(1);\r\n  const { appendChat, hasMore, loading, error } = useMessagePagination(\r\n    chat,\r\n    page,\r\n  );\r\n  const endMessageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(appendMessageToChat(appendChat));\r\n  }, [appendChat]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (endMessageRef) {\r\n      endMessageRef.current.scrollIntoView();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chat.page < 2) {\r\n      scrollToBottom();\r\n    }\r\n  }, [chat]);\r\n\r\n  function loadMore() {\r\n    if (page < chat.pageCount) {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <EditChat\r\n        isOpen={isOpenInfoPopup}\r\n        setIsOpen={setIsOpenInfoPopup}\r\n        chat={chat}\r\n      />\r\n      <div className=\"flex flex-col w-full h-full pb-4\">\r\n        {/* Header chat window */}\r\n        <div className=\"w-full border-b border-gray-300 dark:border-dark-third flex justify-between items-center md:p-4 p-3\">\r\n          <div className=\"flex justify-between items-center space-x-3\">\r\n            <img\r\n              src={LeftArrowIcon}\r\n              alt=\"Arrow icon\"\r\n              className=\"h-5 w-5 md:hidden cursor-pointer\"\r\n              onClick={backToChats}\r\n            />\r\n            <ImageCircle\r\n              src={\r\n                chat.groupAvatarUrl !== \"\"\r\n                  ? chat.groupAvatarUrl\r\n                  : friend?.avatarUrl\r\n              }\r\n            />\r\n            <span className=\"text-lg font-semibold dark:text-dark-txt truncate w-60 md:w-96\">\r\n              {chat.type === constants.chatType.PRIVATE\r\n                ? friend?.fullName\r\n                : chat.name ?? constants.NO_NAME_GROUP}\r\n            </span>\r\n          </div>\r\n          <ClickableIcon\r\n            className=\"h-10 w-10 p-2 mr-2\"\r\n            icon={InfoIcon}\r\n            onClick={() => setIsOpenInfoPopup(!isOpenInfoPopup)}\r\n          />\r\n        </div>\r\n        {/* End header chat window */}\r\n\r\n        {/* Chat content */}\r\n        <div className=\"flex-grow overflow-y-auto overflow-x-hidden px-4 pb-4 pt-2 space-y-1 flex flex-col\">\r\n          {loading && (\r\n            <div className=\"text-gray-500 text-center my-2\">Loading...</div>\r\n          )}\r\n          {hasMore && !loading && (\r\n            <div className=\"flex\">\r\n              <button\r\n                className=\"mx-auto px-4 bg-gray-200 py-2 rounded-lg transform active:scale-95 hover:bg-gray-300 dark:hover:bg-dark-hover dark:bg-dark-third dark:text-gray-300 text-xs md:text-sm transition-all duration-200\"\r\n                onClick={loadMore}\r\n              >\r\n                Load more messages...\r\n              </button>\r\n            </div>\r\n          )}\r\n          {!hasMore && (\r\n            <div className=\"text-gray-500 text-xs md:text-sm text-center mb-2\">\r\n              Date created:{\" \"}\r\n              {moment(new Date(chat.dateCreated), \"YYYYMMDD\").format(\r\n                \"MMMM Do YYYY, h:mm:ss a\",\r\n              )}\r\n            </div>\r\n          )}\r\n          <div>{error && \"Error\"}</div>\r\n          {[...chat.messages]\r\n            ?.sort((messageA, messageB) => {\r\n              return messageA.dateCreated > messageB.dateCreated ? 1 : -1;\r\n            })\r\n            .map((message, index) =>\r\n              message.senderUserName === currentUser.userName ? (\r\n                <>\r\n                  <div\r\n                    key={index + Math.random()}\r\n                    className=\"flex flex-col items-end w-full\"\r\n                  >\r\n                    {showTimeIndexes.includes(index) && (\r\n                      <span className=\"transition-all animate-fade text-sm text-gray-400 left-0 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-right\">\r\n                        {moment(\r\n                          new Date(message.dateCreated),\r\n                          \"YYYYMMDD\",\r\n                        ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"max-w-300 rounded-lg shadow transition-all duration-200 cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className={\r\n                          \"text-white rounded-3xl px-5 py-3 break-word rounded-br-none cursor-pointer overflow-x-auto max-w-3/4\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-green-600 dark:bg-green-800\"\r\n                            : \"bg-gradient-to-br from-green-400 to-green-600 dark:from-green-500 dark:to-green-800 shadow-md\")\r\n                        }\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div\r\n                  key={index + Math.random()}\r\n                  className=\"flex items-end space-x-2\"\r\n                >\r\n                  <ImageCircle\r\n                    src={\r\n                      chat?.participants\r\n                        .filter((x) => x.userName === message.senderUserName)\r\n                        .shift()?.avatarUrl\r\n                    }\r\n                    size=\"sm\"\r\n                  />\r\n                  <div className=\"flex flex-col w-full items-start\">\r\n                    {(showTimeIndexes.includes(index) ||\r\n                      chat.type === constants.chatType.GROUP) && (\r\n                      <span className=\"transition-all animate-fade text-sm text-gray-400 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-left\">\r\n                        {message.senderFullName +\r\n                          \" - \" +\r\n                          moment(\r\n                            new Date(message.dateCreated),\r\n                            \"YYYYMMDD\",\r\n                          ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"max-w-300 rounded-lg shadow cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        className={\r\n                          \" rounded-3xl px-5 py-3 break-word rounded-bl-none shadow-sm cursor-pointer overflow-x-auto max-w-3/4\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-gray-300 dark:bg-dark-third\"\r\n                            : \"bg-gradient-to-br from-gray-100 to-gray-300 dark:from-gray-500 dark:to-gray-600 \")\r\n                        }\r\n                        onClick={() => handleMessageClick(index)}\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ),\r\n            )}\r\n          <div ref={endMessageRef}></div>\r\n        </div>\r\n        {/* End chat content */}\r\n\r\n        <ChatInput chatId={chat.id} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import { useEffect, useState } from \"react\";\r\nimport useChatApi from \"./useChatApi\";\r\n\r\nexport default function useMessagePagination(currentChat, page) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [appendChat, setAppendChat] = useState({});\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  const chatApi = useChatApi();\r\n\r\n  useEffect(() => {\r\n    if (page > 1 && hasMore) {\r\n      setLoading(true);\r\n      setError(false);\r\n\r\n      const request = { page };\r\n      chatApi\r\n        .getById(currentChat.id, request)\r\n        .then((response) => {\r\n          setAppendChat(response);\r\n          setHasMore(page < response.pageCount);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n        });\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    setHasMore(page < currentChat.pageCount);\r\n  }, [currentChat]);\r\n\r\n  return { loading, error, appendChat, hasMore };\r\n}\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport Button from \"components/Button\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction CreateChat({ isOpen, setIsOpen }) {\r\n  const [selectedMode, setSelectedMode] = useState(constants.chatType.PRIVATE);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [isValidButton, setIsValidButton] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [selectedFriendList, setSelectedFriendList] = useState([]);\r\n\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n    return () => {\r\n      setSelectedFriendList([]);\r\n      setGroupName(\"\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedMode === constants.chatType.GROUP) {\r\n      var result = selectedFriendList?.length >= 2 && groupName;\r\n      setIsValidButton(result);\r\n    } else if (selectedMode === constants.chatType.PRIVATE) {\r\n      setIsValidButton(selectedFriendList?.length !== 0 ? true : false);\r\n    }\r\n  }, [selectedFriendList, groupName, selectedMode]);\r\n\r\n  async function handleCreateGroup() {\r\n    if (isValidButton) {\r\n      if (selectedMode === constants.chatType.GROUP) {\r\n        const request = {\r\n          participantUserNames: selectedFriendList.map((x) => x.userName),\r\n          name: groupName,\r\n        };\r\n        chatApi.createGroupChat(request).then((response) => {\r\n          if (response.id) {\r\n            dispatch(setSelectedId(response.id));\r\n          }\r\n          setSelectedFriendList([]);\r\n          setGroupName(\"\");\r\n        });\r\n      } else if (selectedMode === constants.chatType.PRIVATE) {\r\n        const request = {\r\n          participantUserName: selectedFriendList\r\n            .map((x) => x.userName)\r\n            .shift(),\r\n        };\r\n        chatApi.createPrivateChat(request).then((response) => {\r\n          if (response.id) {\r\n            dispatch(setSelectedId(response.id));\r\n          }\r\n          setSelectedFriendList([]);\r\n          setGroupName(\"\");\r\n          setIsOpen(false);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"md:px-5 md:py-3 flex flex-col bg-white dark:bg-dark-secondary dark:border-dark-third rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <div className=\"flex px-10 pt-6 pb-5 space-x-7 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-2xl text-green-600 dark:text-green-400\">\r\n            New chat!\r\n          </h3>\r\n\r\n          <div className=\"relative flex rounded-lg items-center border border-green-500 cursor-pointer\">\r\n            <div\r\n              className={\r\n                \"absolute bg-gradient-to-br from-green-400 to-green-600 w-1/2 h-full rounded-lg transition-all duration-200 z-0\" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.GROUP\r\n                  ? \"transform translate-x-full left-0\"\r\n                  : \"left-0 \")\r\n              }\r\n            ></div>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.PRIVATE\r\n                  ? \"text-white\"\r\n                  : \" text-green-600 dark:text-green-400\")\r\n              }\r\n              onClick={() => setSelectedMode(constants.chatType.PRIVATE)}\r\n            >\r\n              Private\r\n            </span>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.GROUP\r\n                  ? \"text-white\"\r\n                  : \" text-green-600 dark:text-green-400\")\r\n              }\r\n              onClick={() => setSelectedMode(constants.chatType.GROUP)}\r\n            >\r\n              Group\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-10 space-y-4\">\r\n          {selectedMode === constants.chatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Find Friends\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-secondary dark:border-dark-hover border border-gray-300 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none z-10 shadow-xl\">\r\n                        <h4 className=\"font-semibold mb-2 dark:text-gray-200\">\r\n                          Friend list\r\n                        </h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                                {friend.fullName ?? \"Unknown\"}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(At least 2 people. Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-dark-secondary border dark:border-dark-hover border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none\">\r\n                  {selectedFriendList\r\n                    .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                    .map((friend, index) => (\r\n                      <div\r\n                        onClick={() => {\r\n                          var result = [...selectedFriendList];\r\n                          var i = result.findIndex(\r\n                            (x) => x.userName === friend.userName,\r\n                          );\r\n                          if (i >= 0) {\r\n                            result.splice(i, 1);\r\n                            setSelectedFriendList(result);\r\n                          }\r\n                        }}\r\n                        key={Math.random() + index}\r\n                        className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-red-200 dark:hover:bg-red-500 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                      >\r\n                        <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                        <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                          {friend.fullName ?? \"Unknown\"}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <label\r\n                htmlFor=\"selectFriend\"\r\n                className=\"font-semibold text-lg dark:text-gray-200\"\r\n              >\r\n                Select Friends\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"selectFriend\"\r\n                  type=\"search\"\r\n                  onFocus={() => setIsOpenFriendList(true)}\r\n                  value={keyword}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setKeyword(e.target.value)}\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n                {isOpenFriendList && (\r\n                  <>\r\n                    <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-secondary dark:border-dark-hover border border-gray-400 border-opacity-50 rounded-lg w-full space-y-1 max-h-72 overflow-y-auto select-none z-10 shadow-xl py-4 md:px-8 px-6 \">\r\n                      <h4 className=\"font-semibold mb-2 text-start dark:text-gray-200\">\r\n                        Friend list\r\n                      </h4>\r\n                      {friendList\r\n                        .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                        .filter(\r\n                          (x) =>\r\n                            (x.fullName\r\n                              ?.toLowerCase()\r\n                              .includes(keyword?.toLowerCase()) ||\r\n                              x.userName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase())) &&\r\n                            !selectedFriendList.some(\r\n                              (selected) => selected.userName === x.userName,\r\n                            ),\r\n                        )\r\n                        .map((friend, index) => (\r\n                          <div\r\n                            onClick={() => {\r\n                              var result = [];\r\n                              result.push(friend);\r\n                              setIsOpenFriendList(false);\r\n                              setSelectedFriendList(result);\r\n                            }}\r\n                            key={Math.random() + index}\r\n                            className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                          >\r\n                            <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                            <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                              {friend.fullName ?? \"Unknown\"}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-dark-secondary border dark:border-dark-hover border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none \">\r\n                  {[...selectedFriendList].map((friend, index) => {\r\n                    if (index === 0) {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            var result = [...selectedFriendList];\r\n                            var i = result.findIndex(\r\n                              (x) => x.userName === friend.userName,\r\n                            );\r\n                            if (i >= 0) {\r\n                              result.splice(i, 1);\r\n                              setSelectedFriendList(result);\r\n                            }\r\n                          }}\r\n                          key={Math.random() + index}\r\n                          className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300 dark:hover:bg-red-500\"\r\n                        >\r\n                          <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                          <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                            {friend.fullName ?? \"Unknown\"}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return <></>;\r\n                    }\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end px-10 py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            <Button\r\n              disabled={!isValidButton}\r\n              content=\"Create\"\r\n              onClick={() => handleCreateGroup()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default CreateChat;\r\n","import { setPopup } from \"app/appSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport Button from \"components/Button\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction UserInfo({ isOpen, setIsOpen, currentUser }) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [avatar, setAvatar] = useState({});\r\n\r\n  const userApi = useUserApi();\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser.firstName && currentUser.lastName) {\r\n      setFirstName(currentUser.firstName);\r\n      setLastName(currentUser.lastName);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  async function submit() {\r\n    const request = new FormData();\r\n    request.append(\"Avatar\", avatar);\r\n    request.append(\"FirstName\", firstName);\r\n    request.append(\"LastName\", lastName);\r\n\r\n    userApi.updateUser(request).then((response) => {\r\n      dispatch(updateUser(response));\r\n      openPopup(\"Success\", \"Update info successfully!\");\r\n    });\r\n\r\n    setIsOpen(false);\r\n  }\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"md:px-5 md:py-3 flex flex-col dark:bg-dark-secondary dark:border-dark-third bg-white rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300\"\r\n        }\r\n      >\r\n        <div className=\"flex px-10 pt-6 pb-5 space-x-7 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-2xl text-green-600 dark:text-green-400\">\r\n            User info!\r\n          </h3>\r\n        </div>\r\n        <div className=\"px-10 space-y-4\">\r\n          <div className=\"mb-3 grid grid-cols-2 place-items-start \">\r\n            <div className=\"col-span-1 space-y-2 mr-2\">\r\n              <label\r\n                htmlFor=\"fistName\"\r\n                className=\"text-lg font-semibold dark:text-dark-txt\"\r\n              >\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"firstName\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-dark-third rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n            </div>\r\n            <div className=\"col-span-1 space-y-2 ml-2\">\r\n              <label\r\n                htmlFor=\"lastName\"\r\n                className=\"text-lg font-semibold dark:text-dark-txt\"\r\n              >\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"lastName\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-dark-third rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mr-2 flex flex-col\">\r\n            <label\r\n              htmlFor=\"avatar\"\r\n              className=\"text-lg font-semibold dark:text-dark-txt\"\r\n            >\r\n              Avatar\r\n            </label>\r\n            <input\r\n              id=\"avatar\"\r\n              onChange={(e) => setAvatar(e.target.files[0])}\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end  py-6 space-x-4\">\r\n            <div className=\"space-x-2 flex items-center flex-end\">\r\n              <Button\r\n                outline\r\n                content=\"Close\"\r\n                onClick={() => setIsOpen(false)}\r\n              />\r\n              <Button content=\"Save\" onClick={() => submit()} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\nexport default UserInfo;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDarkMode() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var mode = window.localStorage.getItem(\"theme\");\r\n\r\n    if (mode === \"dark\") {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      setDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      window.document.documentElement.classList.remove(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return { darkMode, setDarkMode };\r\n}\r\n\r\nexport default useDarkMode;\r\n","import ConfirmModal from \"components/ConfirmModal\";\r\nimport CreateChat from \"components/CreateChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport useDarkMode from \"hooks/useDarkMode\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClickableIcon from \"../ClickableIcon\";\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func,\r\n};\r\n\r\nfunction Header({ logout }) {\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const [isOpenCreateChat, setIsOpenCreateChat] = useState(false);\r\n  const [isOpenUserInfo, setIsOpenUserInfo] = useState(false);\r\n  const [confirmModal, setConfirmModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmButtonTitle: \"\",\r\n  });\r\n\r\n  const { darkMode, setDarkMode } = useDarkMode();\r\n\r\n  const userAvatar = currentUser.avatarUrl;\r\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenMenu && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenMenu(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenMenu]);\r\n\r\n  function openConfirmModal(\r\n    content,\r\n    confirmButtonAction,\r\n    confirmButtonTitle = \"Yes\",\r\n    title,\r\n  ) {\r\n    const confirmModal = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n      confirmButtonTitle: confirmButtonTitle,\r\n      confirmButtonAction: confirmButtonAction,\r\n    };\r\n    setConfirmModal(confirmModal);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {confirmModal.isOpen && (\r\n        <ConfirmModal\r\n          isOpen={confirmModal.isOpen}\r\n          closeAction={() => setConfirmModal({ isOpen: false })}\r\n          title=\"Are you sure?\"\r\n          content={confirmModal.content}\r\n          confirmButtonTitle={confirmModal.confirmButtonTitle}\r\n          confirmButtonAction={confirmModal.confirmButtonAction}\r\n        />\r\n      )}\r\n      <UserInfo\r\n        currentUser={currentUser}\r\n        isOpen={isOpenUserInfo}\r\n        setIsOpen={setIsOpenUserInfo}\r\n      />\r\n      <CreateChat isOpen={isOpenCreateChat} setIsOpen={setIsOpenCreateChat} />\r\n      <div className=\"h-24 flex justify-between items-center\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div\r\n            className=\"transition-all duration-200 ring ring-green-500 p-1 transform active:scale-95 rounded-full cursor-pointer\"\r\n            onClick={() => setIsOpenUserInfo((x) => !x)}\r\n          >\r\n            <ImageCircle src={userAvatar} size=\"md\" />\r\n          </div>\r\n          <h1 className=\"font-bold text-3xl\">Chats</h1>\r\n        </div>\r\n        <div className=\"flex space-x-2 items-center\">\r\n          <ClickableIcon\r\n            iconClass=\"bx bxs-edit\"\r\n            onClick={() => setIsOpenCreateChat(true)}\r\n            className=\"dark:bg-dark-third bg-gray-100\"\r\n          />\r\n          <div className=\"relative\" ref={ref}>\r\n            <ClickableIcon\r\n              iconClass=\"bx bx-dots-horizontal-rounded\"\r\n              onClick={() => setIsOpenMenu(!isOpenMenu)}\r\n              className=\"dark:bg-dark-third bg-gray-100\"\r\n            />\r\n            {isOpenMenu && (\r\n              <div className=\"animate-fade transition-all duration-200 absolute right-0 md:left-0 border border-gray-200 bg-white w-52 rounded-lg shadow-md overflow-hidden p-2 dark:bg-dark-secondary dark:border-dark-third mt-2 select-none\">\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-dark-third\"\r\n                  onClick={() => setDarkMode(!darkMode)}\r\n                >\r\n                  <span className=\"p-1 bg-gray-100 dark:bg-dark-hover rounded-full select-none\">\r\n                    <i className=\"bx bx-moon text-center text-xl align-middle text-black dark:text-dark-txt w-7 h-7\"></i>\r\n                  </span>\r\n                  <span>Dark Mode</span>\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-dark-third\"\r\n                  onClick={() => {\r\n                    openConfirmModal(\"Do you want to log out?\", logout);\r\n                  }}\r\n                >\r\n                  <span className=\"p-1 bg-gray-100 dark:bg-dark-hover rounded-full select-none\">\r\n                    <i className=\"bx bx-log-in-circle text-center text-xl align-middle text-black dark:text-dark-txt w-7 h-7\"></i>\r\n                  </span>\r\n                  <span>Log Out</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.2a8dee36.png\";","import { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport {\r\n  addChat,\r\n  addMessage,\r\n  editChat,\r\n  editGroupAvatar,\r\n  refreshChats,\r\n  setSelectedId,\r\n} from \"app/chatSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport ChatList from \"components/ChatList\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport Header from \"components/Header\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Chat() {\r\n  const [connection, setConnection] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"token\");\r\n    connection.stop();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      chatApi\r\n        .getAll()\r\n        .then((response) => {\r\n          dispatch(refreshChats(response.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Connection failed: \", error);\r\n        });\r\n\r\n      userApi.getCurrentUser().then((response) => {\r\n        dispatch(updateUser(response));\r\n      });\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // for realtime\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_SERVER_URL + \"/hubs/chats\", {\r\n        accessTokenFactory: () => localStorage.getItem(\"token\"),\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection && !connection.connectionStarted) {\r\n      connection.start().then((result) => {\r\n        connection.on(\"ReceiveMessage\", (response) => {\r\n          const action = addMessage(response);\r\n          dispatch(action);\r\n        });\r\n        connection.on(\"ReceiveChat\", (chat) => {\r\n          const action = addChat(chat);\r\n          dispatch(action);\r\n          if (chat.creatorUserName === currentUser.userName) {\r\n            dispatch(setSelectedId(chat.id));\r\n          }\r\n        });\r\n        connection.on(\"ReceiveUpdatedChat\", (chat) => {\r\n          const action = editChat(chat);\r\n          dispatch(action);\r\n        });\r\n        connection.on(\"ReceiveUpdatedGroupAvatar\", (response) => {\r\n          const action = editGroupAvatar(response);\r\n          dispatch(action);\r\n        });\r\n      });\r\n    }\r\n    return () => {\r\n      if (connection && connection.connectionStarted) {\r\n        connection.stop();\r\n      }\r\n    };\r\n  }, [connection]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark:bg-dark-primary dark:text-white  animate-fade grid grid-cols-12 h-screen w-screen\">\r\n        <div\r\n          className={\r\n            \"animate-fade lg:col-span-3 md:col-span-4 col-span-12 md:flex flex-col h-screen border-r px-4 dark:border-dark-third border-gray-300 pt-1\" +\r\n            (selectedId !== 0 ? \" hidden\" : \"flex\")\r\n          }\r\n        >\r\n          <Header logout={logout} />\r\n          <ChatList />\r\n        </div>\r\n        {!selectedId ? (\r\n          chats?.length === 0 ? (\r\n            <div className=\"dark:bg-black animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex flex-col h-full w-full \">\r\n              <img src={Logo} className=\"w-32 h-32 mb-3\" alt=\"logo\" />\r\n              <span className=\"text-center\">\r\n                {\" \"}\r\n                Welcome to{\" \"}\r\n                <span className=\"text-green-600 dark:text-green-400 font-bold\">\r\n                  TeeChat!\r\n                </span>{\" \"}\r\n                <br />\r\n                You do not have any chats, please start a chat!{\" \"}\r\n              </span>\r\n              <span></span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"dark:bg-black animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex flex-col h-full w-full \">\r\n              <img src={Logo} className=\"w-32 h-32 mb-3\" alt=\"logo\" />\r\n              <span className=\"text-center\">\r\n                {\" \"}\r\n                Welcome to{\" \"}\r\n                <span className=\"text-green-600 dark:text-green-400 font-bold\">\r\n                  TeeChat!\r\n                </span>{\" \"}\r\n                <br />\r\n                Select a chat to start.{\" \"}\r\n              </span>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"dark:bg-dark-primary md:dark:bg-black animate-fade lg:col-span-9 md:col-span-8 col-span-12 flex h-screen w-full overflow-y-auto\">\r\n            <ChatWindow chat={chats.find((chat) => chat.id === selectedId)} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/forbid.7d678d5c.jpg\";","import React from \"react\";\r\nimport ForbidImg from \"assets/img/forbid.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Forbid({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ForbidImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"You don't have permission to access this resources\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forbid;\r\n","export default __webpack_public_path__ + \"static/media/login-page.dc5637a7.jpg\";","import { getCurrentUser } from \"app/userSlice\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userApi = useUserApi();\r\n\r\n  useEffect(() => {\r\n    if (username && password) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n  }, [username, password]);\r\n  function login(e) {\r\n    e.preventDefault();\r\n\r\n    const request = { username, password };\r\n    setError(\"\");\r\n\r\n    userApi\r\n      .login(request)\r\n      .then((response) => {\r\n        dispatch(getCurrentUser());\r\n        window.localStorage.setItem(\"token\", response);\r\n        history.push(\"/chats\");\r\n      })\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\"\r\n            ? error\r\n            : \"Username or password is incorrect\";\r\n        setError(message);\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n      <img\r\n        src={LoginPageImage}\r\n        alt=\"login\"\r\n        className=\"md:block hidden col-span-3 w-full ml-44\"\r\n      />\r\n      <form\r\n        onSubmit={(e) => login(e)}\r\n        className=\"container rounded-2xl flex flex-col py-10 md:w-auto md:col-span-4\"\r\n      >\r\n        <img src={Logo} alt=\"login\" className=\"h-20 w-20 mx-auto mb-3\" />\r\n        <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n          Login to TeeChat!\r\n        </h1>\r\n\r\n        {error && (\r\n          <span className=\"bg-red-500 rounded-md text-white text-lg mb-2 py-2 text-center\">\r\n            {error ?? \"Username or password is incorrect\"}\r\n          </span>\r\n        )}\r\n        <div className=\"space-y-2 mb-3\">\r\n          <label htmlFor=\"username\" className=\"text-lg font-semibold px-1\">\r\n            Username or email address\r\n          </label>\r\n          <input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2 mb-2\">\r\n          <label htmlFor=\"password\" className=\"text-lg font-semibold px-1\">\r\n            Password\r\n          </label>\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          disabled={!isDirty}\r\n          content=\"Login\"\r\n          className=\"mb-4 mt-2 font-bold\"\r\n        />\r\n        <div className=\"text-center\">\r\n          Not a member?{\" \"}\r\n          <Link to=\"/register\" className=\"text-green-500 font-bold\">\r\n            Sign up now\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/not-found.500f302c.jpg\";","import React from \"react\";\r\nimport NotFoundImg from \"assets/img/not-found.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={NotFoundImg} alt=\"Error\" />\r\n      <span className=\" font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Not found resources\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport Popup from \"components/Popup\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm, useWatch } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction Register() {\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [isExistsUserName, setIsExistsUserName] = useState(true);\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  const userApi = useUserApi();\r\n\r\n  // yup validation\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"First Name is required\"),\r\n    lastName: yup.string().required(\"Last Name is required\"),\r\n    userName: yup\r\n      .string()\r\n      .required(\"User Name is required\")\r\n      .min(6, \"Username must be 6-20 characters\")\r\n      .max(20, \"Username must be 6-20 characters\")\r\n      .test(\r\n        \"checkUsername\",\r\n        \"Username does not contain special characters\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=[a-zA-Z0-9._])(?!.*[_.]{2})[^_.].*[^_.]$\",\r\n          );\r\n        },\r\n      )\r\n      .test(\r\n        \"existsUsername\",\r\n        \"Username is already taken\",\r\n        (value) => !isExistsUserName,\r\n      ),\r\n    email: yup\r\n      .string()\r\n      .required(\"Email is required\")\r\n      .test(\"checkEmail\", \"Email is invalid\", (value) => {\r\n        return checkRegex(\r\n          value,\r\n          /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n        );\r\n      }),\r\n    password: yup\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .test(\r\n        \"checkPassword\",\r\n        \"Passwords must be at least 8 characters, one digit, one uppercase, one non alphanumeric character\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$^+=!*()@%&]).{8,}$\",\r\n          );\r\n        },\r\n      ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Confirm Password is required\")\r\n      .test(\r\n        \"ConfirmPasswordMatch\",\r\n        \"Password and Confirmation Password must match\",\r\n        (confirmPassword) => {\r\n          return confirmPassword === watch.password;\r\n        },\r\n      ),\r\n  });\r\n\r\n  // react hook form\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    setError,\r\n    clearErrors,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {},\r\n  });\r\n  const watch = useWatch({\r\n    control,\r\n  });\r\n\r\n  useEffect(() => {\r\n    userApi.checkUserNameExists(watch.userName).then((response) => {\r\n      if (response.isExists) {\r\n        setError(\r\n          \"userName\",\r\n          {\r\n            type: \"required\",\r\n            message: `Username '${watch.userName}' is already taken`,\r\n          },\r\n          { shouldFocus: true },\r\n        );\r\n        setIsExistsUserName(true);\r\n      } else {\r\n        clearErrors(\"userName\");\r\n        setIsExistsUserName(false);\r\n      }\r\n    });\r\n  }, [watch.userName]);\r\n\r\n  useEffect(() => {\r\n    const onChange = () => {\r\n      var isValid =\r\n        watch.firstName &&\r\n        watch.lastName &&\r\n        watch.userName &&\r\n        watch.email &&\r\n        watch.password &&\r\n        watch.confirmPassword;\r\n\r\n      if (isValid) {\r\n        setIsChanged(true);\r\n        return;\r\n      }\r\n      setIsChanged(false);\r\n    };\r\n\r\n    onChange();\r\n  }, [watch]);\r\n\r\n  // handle submit\r\n  const onSubmit = (content) => {\r\n    userApi.register(content).then((response) => {\r\n      openPopup(\r\n        \"Success\",\r\n        <span>\r\n          \"Create account successfully! Please{\" \"}\r\n          <Link className=\"font-bold text-green-600\" to=\"/login\">\r\n            log in\r\n          </Link>\r\n          !\"\r\n        </span>,\r\n      );\r\n      reset({});\r\n    });\r\n  };\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        title={popup.title}\r\n        isOpen={popup.isOpen}\r\n        content={popup.content}\r\n        onClick={() => {\r\n          setPopup({ isOpen: false });\r\n          history.push(\"/login\");\r\n        }}\r\n      />\r\n      <div className=\"z-10 h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n        <img\r\n          src={LoginPageImage}\r\n          alt=\"login\"\r\n          className=\"md:block hidden col-span-3 w-full ml-44\"\r\n        />\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"container rounded-2xl flex flex-col py-10 md:w-full md:col-span-4 md:px-20 lg:px-48\"\r\n        >\r\n          <img src={Logo} alt=\"login\" className=\"h-20 w-20 mx-auto mb-3\" />\r\n          <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n            Sign up to TeeChat!\r\n          </h1>\r\n          <div className=\"mb-3 grid grid-cols-2 place-items-start \">\r\n            <div className=\"col-span-1 space-y-2 mr-2 w-full\">\r\n              <label htmlFor=\"fistName\" className=\"text-lg font-semibold \">\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"firstName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.firstName?.message}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 space-y-2 ml-2 w-full\">\r\n              <label htmlFor=\"lastName\" className=\"text-lg font-semibold \">\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"lastName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.lastName?.message}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"userName\" className=\"text-lg font-semibold \">\r\n              Username <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"userName\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.userName?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"email\" className=\"text-lg font-semibold \">\r\n              Email <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"email\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">{errors.email?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"password\" className=\"text-lg font-semibold \">\r\n              Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"password\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.password?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"confirmPassword\" className=\"text-lg font-semibold \">\r\n              Confirm Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"confirmPassword\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.confirmPassword?.message}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            disabled={!isChanged}\r\n            content=\"Sign Up\"\r\n            className=\"mb-4 mt-2 font-bold\"\r\n          />\r\n          <div className=\"text-center\">\r\n            Already a member?{\" \"}\r\n            <Link to=\"/login\" className=\"text-green-500 font-bold\">\r\n              Sign in\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\nfunction checkRegex(value, regex) {\r\n  if (value && regex) {\r\n    var pattern = new RegExp(regex);\r\n    var res = pattern.test(value);\r\n    return res;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.c72c9a3e.jpg\";","import React from \"react\";\r\nimport ErrorImg from \"assets/img/error.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ServerError({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ErrorImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Oops! Something went wrong!\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport jwt from \"jwt-decode\";\r\nimport { setPopup } from \"app/appSlice\";\r\nimport Loader from \"components/Loader\";\r\nimport Popup from \"components/Popup\";\r\nimport Chat from \"./pages/Chat\";\r\nimport Forbid from \"./pages/Forbid\";\r\nimport Login from \"./pages/Login\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Register from \"./pages/Register\";\r\nimport ServerError from \"./pages/ServerError\";\r\n\r\nfunction App() {\r\n  const isLoading = useSelector((state) => state.app.isLoading);\r\n  const popup = useSelector((state) => state.app.popup);\r\n  const dispatch = useDispatch();\r\n\r\n  function closePopup() {\r\n    dispatch(setPopup({ isOpen: false }));\r\n  }\r\n  return (\r\n    <>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Loader isOpen={isLoading} className=\"z-50\" />\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={closePopup}\r\n        />\r\n\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/forbid\" component={Forbid} />\r\n          <Route path=\"/ServerError\" component={ServerError} />\r\n          <PrivateRoute path=\"/chats\" component={Chat} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  var isLogin = window.localStorage.getItem(\"token\") ? true : false;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction isTokenExpired(token) {\r\n  if (jwt(token).exp < Date.now() / 1000) {\r\n    localStorage.clear();\r\n    return true;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"app/store\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"boxicons/css/boxicons.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}