{"version":3,"sources":["app/chatSlice.js","app/appSlice.js","app/userSlice.js","app/store.js","components/Loader/index.jsx","components/Button/index.jsx","components/Popup/index.jsx","assets/img/default-avatar.jpg","components/ImageCircle/index.jsx","utils/constants.js","components/ChatList/index.jsx","assets/icons/info-icon.svg","assets/icons/left-arrow-icon.svg","assets/icons/emoji.svg","assets/icons/image-icon.svg","assets/icons/send-icon.svg","components/ClickableIcon/index.jsx","hooks/useApi.js","hooks/useChatApi.js","components/ChatInput/index.jsx","components/ConfirmModal/index.jsx","hooks/useUserApi.js","components/EditChat/index.jsx","components/ChatWindow/index.jsx","hooks/useMessagePagination.js","components/CreateChat/index.jsx","components/UserInfo/index.jsx","hooks/useDarkMode.js","components/Header/index.jsx","logo.png","pages/Chat/index.jsx","assets/img/forbid.jpg","pages/Forbid/index.jsx","assets/img/login-page.jpg","pages/Login/index.jsx","assets/img/not-found.jpg","pages/NotFound/index.jsx","pages/Register/index.jsx","assets/img/error.jpg","pages/ServerError/index.jsx","App.js","index.js"],"names":["chats","createSlice","name","initialState","reducers","addChat","state","action","some","chat","id","payload","push","editChat","updatedChat","index","findIndex","participants","editGroupAvatar","updatedChatId","chatId","groupAvatarUrl","appendMessageToChat","chatToAppend","messagesToAppend","messages","totalRecords","limit","page","pageCount","keyword","concat","refreshChats","addMessage","newMessage","message","addNotification","numOfUnreadMessages","readMessage","selectedId","setSelectedId","reducer","combineReducers","actions","isLoading","setIsLoading","popup","isOpen","content","title","setPopup","currentUser","getCurrentUser","user","token","window","localStorage","getItem","jwt","decodeCurrentUser","updateUser","userName","rootReducer","chatReducer","app","appReducer","users","store","configureStore","Loader","className","circleCommonClasses","useState","isEnding","setIsEnding","useEffect","Button","outline","onClick","onBlur","disabled","Popup","ImageCircle","realSize","src","DefaultAvatar","alt","size","constants","chatType","PRIVATE","GROUP","NO_NAME_GROUP","ChatList","useSelector","dispatch","useDispatch","setKeyword","type","placeholder","onChange","e","target","value","getCurrentChats","map","currentUserName","x","friend","length","filter","shift","lastMessage","reduce","a","b","dateCreated","handleClick","avatarUrl","fullName","moment","Date","fromNow","replace","trim","now","result","sort","chatA","chatB","lastMessageA","lastMessageB","sortChat","toLowerCase","includes","searchChat","ClickableIcon","icon","iconClass","useApi","history","useHistory","Api","axios","create","baseURL","process","timeout","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","newConfig","Authorization","response","data","error","status","removeItem","errors","obj","str","Object","values","val","toString","substring","objToString","Promise","reject","baseApiUrl","useChatApi","getAll","url","get","getById","sendMessage","post","patch","sendImage","updateGroupAvatar","createGroupChat","groupName","updateGroupChat","newGroupName","createPrivateChat","ChatInput","setContent","setChosenEmoji","isOpenEmoji","setIsOpenEmoji","ref","useRef","chatApi","preventDefault","file","files","formData","FormData","append","checkIfClickedOutside","current","contains","document","addEventListener","removeEventListener","onSubmit","onSendMessage","hidden","accept","htmlFor","ImageIcon","position","EmojiIcon","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","SendIconNormal","ConfirmModal","closeAction","confirmButtonTitle","confirmButtonAction","useUserApi","login","register","firstName","lastName","checkUserNameExists","getFriendList","put","EditChat","setIsOpen","isOpenModal","setIsOpenModal","modalContent","setModalContent","setGroupName","isValidButton","setIsValidButton","friendList","setFriendList","isOpenFriendList","setIsOpenFriendList","selectedFriendList","setSelectedFriendList","userApi","friendListRef","currentParticipantUserNames","selectedParticipantUserNames","participantFullNamesToAdd","participantFullNamesToRemove","participantUserNamesToRemove","forEach","openModal","submitEditChat","participantUserNamesToAdd","closeModal","then","openPopup","onFocus","autoComplete","selected","localeCompare","Math","random","i","splice","creatorUserName","format","handleEditChat","ChatWindow","showTimeIndexes","setShowTimeIndexes","isOpenInfoPopup","setIsOpenInfoPopup","handleMessageClick","setPage","currentChat","loading","setLoading","setError","appendChat","setAppendChat","hasMore","setHasMore","catch","useMessagePagination","endMessageRef","res","scrollIntoView","LeftArrowIcon","InfoIcon","prevPage","messageA","messageB","senderUserName","calendar","imageUrl","senderFullName","CreateChat","selectedMode","setSelectedMode","participantUserNames","participantUserName","handleCreateGroup","UserInfo","setFirstName","setLastName","avatar","setAvatar","submit","useDarkMode","darkMode","setDarkMode","documentElement","classList","add","setItem","remove","Header","logout","isOpenCreateChat","setIsOpenCreateChat","isOpenUserInfo","setIsOpenUserInfo","confirmModal","setConfirmModal","userAvatar","isOpenMenu","setIsOpenMenu","openConfirmModal","Chat","connection","setConnection","console","fetchData","newConnection","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","build","connectionStarted","start","on","stop","find","Logo","Forbid","ForbidImg","to","Login","username","setUsername","password","setPassword","isDirty","setIsDirty","LoginPageImage","NotFound","NotFoundImg","Register","isChanged","setIsChanged","isExistsUserName","setIsExistsUserName","schema","yup","shape","required","min","max","test","checkRegex","email","confirmPassword","watch","useForm","resolver","yupResolver","defaultValues","handleSubmit","control","clearErrors","reset","formState","useWatch","isExists","shouldFocus","regex","RegExp","ServerError","ErrorImg","App","basename","path","component","PrivateRoute","exact","Component","rest","isLogin","render","props","pathname","from","location","ReactDOM","StrictMode","getElementById"],"mappings":"qMAEMA,EAAQC,YAAY,CACxBC,KAAM,QACNC,aAAc,GACdC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACAD,EAAME,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOH,EAAOI,QAAQD,OAE7DJ,EAAMM,KAAKL,EAAOI,UAGtBE,SAAU,SAACP,EAAOC,GAChB,IAAMO,EAAcP,EAAOI,QACrBI,EAAQT,EAAMU,WAAU,SAACP,GAC7B,OAAOA,EAAKC,KAAOI,EAAYJ,MAE7BK,GAAS,IACXT,EAAMS,GAAOb,KAAOY,EAAYZ,KAChCI,EAAMS,GAAOE,aAAeH,EAAYG,eAG5CC,gBAAiB,SAACZ,EAAOC,GACvB,IAIgB,EAJVY,EAAgBZ,EAAOI,QAAQS,OAC/BL,EAAQT,EAAMU,WAAU,SAACP,GAC7B,OAAOA,EAAKC,KAAOS,KAEjBJ,GAAS,IACXT,EAAMS,GAAOM,eAAb,UAA8Bd,EAAOI,eAArC,aAA8B,EAAgBU,iBAGlDC,oBAAqB,SAAChB,EAAOC,GAC3B,IAAMgB,EAAehB,EAAOI,QACtBa,EAAgB,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcE,SACjCV,EAAQT,EAAMU,WAAU,SAACP,GAC7B,OAAOA,EAAKC,KAAOa,EAAab,MAE9BK,GAAS,IACXT,EAAMS,GAAOW,aAAeH,EAAaG,aACzCpB,EAAMS,GAAOY,MAAQJ,EAAaI,MAClCrB,EAAMS,GAAOa,KAAOL,EAAaK,KACjCtB,EAAMS,GAAOc,UAAYN,EAAaM,UAClCN,EAAaO,QACfxB,EAAMS,GAAOU,SAAWD,EAExBlB,EAAMS,GAAOU,SACXnB,EAAMS,GAAOU,SAASM,OAAOP,KAIrCQ,aAAc,SAAC1B,EAAOC,GAAY,IAAD,EAE/B,OADK,UAAGA,EAAOI,eAAV,QAAqB,IAG5BsB,WAAY,SAAC3B,EAAOC,GAClB,IAAM2B,EAAa3B,EAAOI,QACpBI,EAAQT,EAAMU,WAAU,SAACP,GAC7B,OAAOA,EAAKC,KAAOwB,EAAWd,UAE5BL,GAAS,GACXT,EAAMS,GAAOU,SAASb,KAAtB,OAA2BsB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAYC,UAG3CC,gBAAiB,SAAC9B,EAAOC,GACvB,IAAMa,EAASb,EAAOI,QAChBI,EAAQT,EAAMU,WAAU,SAACP,GAC7B,OAAOA,EAAKC,KAAOU,KAEjBL,GAAS,IACXT,EAAMS,GAAOsB,qBAAuB,IAGxCC,YAAa,SAAChC,EAAOC,GACnB,IAAMa,EAASb,EAAOI,QAChBI,EAAQT,EAAMU,WAAU,SAACP,GAC7B,OAAOA,EAAKC,KAAOU,KAEjBL,GAAS,IACXT,EAAMS,GAAOsB,oBAAsB,OAMrCE,EAAatC,YAAY,CAC7BC,KAAM,aACNC,aAAc,EACdC,SAAU,CACRoC,cAAe,SAAClC,EAAOC,GAErB,OADQA,EAAOI,YAMf8B,EAAUC,YAAgB,CAC9B1C,MAAOA,EAAMyC,QACbF,WAAYA,EAAWE,UAGlB,EASHzC,EAAM2C,QARRtC,EADK,EACLA,QACAQ,EAFK,EAELA,SACAmB,EAHK,EAGLA,aACAC,EAJK,EAILA,WACAX,EALK,EAKLA,oBACAJ,EANK,EAMLA,gBACAoB,EAPK,EAOLA,YACAF,EARK,EAQLA,gBAEaI,EAAkBD,EAAWI,QAA7BH,cACAC,IC7GTG,EAAY3C,YAAY,CAC5BC,KAAM,YACNC,cAAc,EACdC,SAAU,CACRyC,aAAc,SAACvC,EAAOC,GAEpB,OADQA,EAAOI,YAMfmC,EAAQ7C,YAAY,CACxBC,KAAM,QACNC,aAAc,CACZ4C,QAAQ,EACRC,QAAS,GACTC,MAAO,gBAET7C,SAAU,CACR8C,SAAU,SAAC5C,EAAOC,GAEhB,OADQA,EAAOI,YAMf8B,EAAUC,YAAgB,CAC9BE,UAAWA,EAAUH,QACrBK,MAAOA,EAAML,UAGAI,EAAiBD,EAAUD,QAA3BE,aACAK,EAAaJ,EAAMH,QAAnBO,SACAT,I,QChCTU,EAAclD,YAAY,CAC9BC,KAAM,cACNC,aAAc,GACdC,SAAU,CACRgD,eAAgB,SAAC9C,EAAOC,GACtB,IAAI8C,EAsBV,WACE,IAAIC,EAAQC,OAAOC,aAAaC,QAAQ,SACxC,GAAIH,EAAO,CAET,OADaI,YAAIJ,GAGnB,OAAO,EA5BQK,GACX,GAAIN,EAEF,OADQA,GAIZO,WAAY,SAACtD,EAAOC,GAClB,GAAIA,EAAOI,QAAQkD,SAEjB,OADQtD,EAAOI,YAOjB8B,EAAUC,YAAgB,CAC9BS,YAAaA,EAAYV,UAGpB,EAAuCU,EAAYR,QAA3CS,EAAR,EAAQA,eAAgBQ,EAAxB,EAAwBA,WCtB/B,IAAME,EAAc,CAClB9D,MAAO+D,EACPC,IAAKC,EACLC,MDoBazB,GCbA0B,EAJDC,YAAe,CAC3B3B,QAASqB,I,wDC4BIO,EArCA,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,UAA+B,IAApBvB,cAAoB,SAC3CwB,EACF,+EACF,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OALAC,qBAAU,WACR,OAAO,WACLD,GAAY,MAEb,IAED3B,GACE,mCACE,qBACEuB,UACE,qLACCG,EAAW,UAAY,KADxB,UAEC,IAAMH,SAFP,QAEoB,IAJxB,SAYE,sBAAKA,UAAU,+DAAf,UACE,qBAAKA,UAAS,UAAKC,EAAL,0BACd,qBACED,UAAS,UAAKC,EAAL,6BAEX,qBAAKD,UAAS,UAAKC,EAAL,gCCQXK,MAhCf,YAOI,IAAD,IANDC,eAMC,SALD7B,EAKC,EALDA,QACAsB,EAIC,EAJDA,UACAQ,EAGC,EAHDA,QACAC,EAEC,EAFDA,OACAC,EACC,EADDA,SAEA,OACE,mCACE,wBACEA,SAAUA,EACVF,QAASA,EACTC,OAAQA,EACRT,UACE,4HAECO,EACG,+JACA,wGACJ,KALA,OAMCP,QAND,IAMCA,IAAa,IACd,KACEU,EAAgD,iBAArC,oCAbjB,SAgBGhC,OCDMiC,MAvBf,YAKI,IAAD,IAJDhC,aAIC,MAJO,eAIP,EAHDF,EAGC,EAHDA,OAGC,IAFDC,eAEC,MAFS,8BAET,EADD8B,EACC,EADDA,QAEA,OACE/B,GACE,qBAAKuB,UAAU,4JAAf,SACE,sBAAKA,UAAU,oIAAf,UACE,oBAAIA,UAAU,wDAAd,SACGrB,IAEH,sBAAMqB,UAAU,iCAAhB,SAAkDtB,IAClD,qBAAKsB,UAAU,0BAAf,SACE,cAAC,EAAD,CAAQtB,QAAQ,QAAQ8B,QAASA,Y,uCCzB9B,MAA0B,2CC4D1BI,MAjDf,YAKI,IAAD,EAOGC,EAPH,IAJDC,WAIC,MAJKC,EAIL,MAHDf,iBAGC,MAHW,GAGX,MAFDgB,WAEC,MAFK,SAEL,MADDC,KASA,YARC,MADM,KACN,GASC,IAAK,KACHJ,EATW,wBAUX,MACF,IAAK,KACHA,EAXW,wBAYX,MACF,IAAK,KACHA,EAZW,4BAaX,MACF,IAAK,KACHA,EAdW,4BAeX,MACF,IAAK,OACHA,EAhBa,gBAiBb,MACF,QACEA,EAtBW,4BAwBf,OACE,mCACE,qBACEb,UAAS,UACPa,mEAIEb,SALK,QAKQ,GAEjBc,IAAMA,GAAe,KAARA,EAA6BA,EAAhBC,EAC1BC,IAAKA,O,oBC9CEE,GARG,CAChBC,SAAU,CACRC,QAAS,EACTC,MAAO,GAETC,cAAe,WCyHFC,OAvHf,WACE,IAAM7F,EAAQ8F,aAAY,SAACxF,GAAD,OAAWA,EAAMN,MAAMA,SAC3CuC,EAAauD,aAAY,SAACxF,GAAD,OAAWA,EAAMN,MAAMuC,cAChDY,EAAc2C,aAAY,SAACxF,GAAD,OAAWA,EAAM4D,MAAMf,eACjD4C,EAAWC,cAEjB,EAA8BxB,mBAAS,IAAvC,mBAAO1C,EAAP,KAAgBmE,EAAhB,KASA,OACE,qCACE,uBACEC,KAAK,SACL5B,UAAU,wLACV6B,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,OAAOC,UAEvC,qBAAKjC,UAAU,wEAAf,SACGtE,GACCwG,GAAgBxG,EAAO8B,GAAS2E,KAAI,SAAChG,EAAMM,GAAW,IAAD,cAC7C2F,EAAkBvD,EAAYU,SAMpC,GAHW,OAAGpD,QAAH,IAAGA,OAAH,EAAGA,EAAMQ,aAAaT,MAC/B,SAACmG,GAAD,OAAOA,EAAE9C,WAAa6C,KAExB,CAIA,IAOiC,EAP3BE,GACA,OAAJnG,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,aAAa4F,QAAS,EAA5B,OACIpG,QADJ,IACIA,GADJ,UACIA,EAAMQ,oBADV,aACI,EACI6F,QAAO,SAACH,GAAD,OAAOA,EAAE9C,WAAa6C,KAC9BK,QACH5D,EACF6D,EAAc,GAClB,GAA8B,KAA1B,UAAAvG,EAAKgB,gBAAL,eAAeoF,QACjBG,EAAW,UAAGvG,EAAKgB,gBAAR,aAAG,EAAewF,QAAO,SAACC,EAAGC,GAAJ,OAClCD,EAAEE,YAAcD,EAAEC,YAAcF,EAAIC,KAGxC,OACE,sBAEE7C,UACE,yLAEC/B,IAAe9B,EAAKC,GACjB,qCACA,IAENoE,QAAS,kBAlDvB,SAAqBpE,GACnB,GAAIA,IAAO6B,EAAY,CACrB,IAAMhC,EAASiC,EAAc9B,GAC7BqF,EAASxF,IA+CgB8G,CAAY5G,EAAKC,KATlC,UAWGD,EAAK4B,oBAAsB,GAC1B,sBAAMiC,UAAU,oKAAhB,SACG7D,EAAK4B,oBAAsB,EACxB,KACA5B,EAAK4B,sBAGb,cAAC,EAAD,CACE+C,KACM,OAAJ3E,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,QAASV,GAAUC,SAASC,QAAlC,OACIkB,QADJ,IACIA,OADJ,EACIA,EAAQU,UADZ,OAEI7G,QAFJ,IAEIA,OAFJ,EAEIA,EAAMY,eAEZkE,KAAK,OAGP,sBAAKjB,UAAU,uEAAf,UACE,sBAAKA,UAAU,6DAAf,UACE,sBACEA,UACE,8CAEC7D,EAAK4B,oBAAsB,EAAI,YAAc,IAJlD,UAOO,OAAJ5B,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,QAASV,GAAUC,SAASC,QAAlC,OACGkB,QADH,IACGA,OADH,EACGA,EAAQW,SADX,iBAEG9G,QAFH,IAEGA,OAFH,EAEGA,EAAMP,YAFT,QAEiBsF,GAAUI,gBAE9B,sBAAMtB,UAAU,+CAAhB,mBACGkD,KACC,IAAIC,KAAJ,UAAST,EAAYI,mBAArB,QAAoC3G,EAAK2G,aACzC,YAECM,iBALL,iBACG,EAKGC,QAAQ,MAAO,WANrB,aACG,EAMGC,YAGR,qBAAKtD,UAAU,OAAf,SACE,sBACEA,UACE,kEAEC7D,EAAK4B,oBAAsB,EAAI,YAAc,IAJlD,mBAOG2E,EAAYhE,eAPf,QAO0B,YAzDzByE,KAAKI,MAAQ9G,aAuElC,SAASyF,GAAgBxG,EAAO8B,GAC9B,IAAIgG,EAKN,SAAkB9H,GAChB,GAAIA,EACF,OAAO,YAAIA,GAAO+H,MAAK,SAACC,EAAOC,GAAW,IAAD,QAIL,EAOA,EAV9BC,EAAe,GACfC,EAAe,GAEY,KAA3B,UAAAH,EAAMvG,gBAAN,eAAgBoF,QAClBqB,EAAY,UAAGF,EAAMvG,gBAAT,aAAG,EAAgBwF,QAAO,SAACC,EAAGC,GACxC,OAAOD,EAAEE,YAAcD,EAAEC,YAAcF,EAAIC,KAG7Ce,EAAad,YAAcY,EAAMZ,YAEJ,KAA3B,UAAAa,EAAMxG,gBAAN,eAAgBoF,QAClBsB,EAAY,UAAGF,EAAMxG,gBAAT,aAAG,EAAgBwF,QAAO,SAACC,EAAGC,GAAJ,OACpCD,EAAEE,YAAcD,EAAEC,YAAcF,EAAIC,KAGtCgB,EAAaf,YAAca,EAAMb,YAGnC,OAAmB,QAAZ,EAAAc,SAAA,eAAcd,cAAd,UAA4Be,SAA5B,aAA4B,EAAcf,aAAc,GAAK,KA1B3DgB,CAASpI,GAEtB,OADA8H,EA8BF,SAAoB9H,EAAO8B,GACzB,GAAI9B,EACF,OAAOA,EAAM8G,QAAO,SAACrG,GAAU,IAAD,EAU5B,OATW,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAMQ,aAAaT,MAAK,SAACmG,GACrC,SACEA,EAAEY,SAASc,cAAcC,SAASxG,EAAQuG,kBAA1C,OACA1B,QADA,IACAA,OADA,EACAA,EAAG9C,SAASwE,cAAcC,SAASxG,EAAQuG,uBAOtC,OAAI5H,QAAJ,IAAIA,GAAJ,UAAIA,EAAMP,YAAV,aAAI,EAAYmI,cAAcC,SAASxG,EAAQuG,mBA3CnDE,CAAWT,EAAQhG,GClIf,WAA0B,sCCA1B,OAA0B,4CCA1B,OAA0B,kCCA1B,OAA0B,uCCA1B,OAA0B,sCCwC1B0G,OAhCf,YAA8E,IAArDlE,EAAoD,EAApDA,UAAWmE,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,UAAWpD,EAAwB,EAAxBA,IAAKR,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OACjE,OACE,mCACE,qBACEA,OAAQA,EACRD,QAASA,EACTR,UACE,yPACCA,QADD,IACCA,IAAa,IALlB,SAQGmE,EACC,qBACEnD,IAAG,OAAEA,QAAF,IAAEA,IAAO,iBACZF,IAAKqD,EACL3D,QAASA,EACTR,UAAU,WAGZ,mBACEA,UACE,2EAEAoE,S,4DCzBC,SAASC,KACtB,IAAM5C,EAAWC,cACX4C,EAAUC,cAEVC,EAAMC,KAAMC,OAAO,CACvBC,QAASC,2CACTC,QAAS,IACTC,QAAS,CACP,eAAgB,oBAElBC,iBAAkB,SAACC,GAAD,OAAYC,KAAYC,UAAUF,MAmEtD,OAhEAR,EAAIW,aAAaC,QAAQC,IAAzB,uCAA6B,WAAOC,GAAP,iBAAA1C,EAAA,6DACvB5D,EAAQC,OAAOC,aAAaC,QAAQ,SAEpCoG,EAAYD,EACZtG,IACFuG,EAAS,2BACJD,GADI,IAEPR,QAAS,CAAEU,cAAc,UAAD,OAAYxG,OAPb,kBAUpBuG,GAVoB,2CAA7B,uDAYAf,EAAIW,aAAaM,SAASJ,KACxB,SAACI,GAGC,OAFAhE,EAASlD,GAAa,IAElBkH,GAAYA,EAASC,KAChBD,EAASC,KAEXD,KAET,SAACE,GAAW,IAAD,gBACT,GAAIA,EAAMF,SAGR,OAFAhE,EAASlD,GAAa,IAEdoH,EAAMF,SAASG,QACrB,KAAK,IACH3G,OAAOC,aAAa2G,WAAW,SAC/BvB,EAAQhI,KAAK,UACb,MACF,KAAK,IACHgI,EAAQhI,KAAK,WACb,MACF,KAAK,IACHgI,EAAQhI,KAAK,gBACb,MACF,QACE,IAAIuB,EAC8B,kBAAhC,UAAO8H,EAAMF,gBAAb,aAAO,EAAgBC,MAAvB,UACIC,EAAMF,gBADV,aACI,EAAgBC,KAChB,4DAQN,OALA7H,GAAU,UAAA8H,EAAMF,gBAAN,mBAAgBC,YAAhB,eAAsBI,QAyB5C,SAAqBC,GAEnB,IADA,IAAIC,EAAM,GACV,MAAkBC,OAAOC,OAAOH,GAAhC,eAAsC,CAAjC,IAAMI,EAAG,KACZH,GAAG,UAAOG,EAAIC,WAAX,MAGL,OADAJ,EAAMA,EAAIK,UAAU,EAAGL,EAAIzD,OAAS,GA7BtB+D,CAAW,UAACX,EAAMF,gBAAP,iBAAC,EAAgBC,YAAjB,aAAC,EAAsBI,QAClCjI,EAgBZ4D,EAAS7C,EALK,CACZH,QAAQ,EACRE,MAXgB,eAYhBD,QAZgCb,KACnB0I,QAAQC,OAAR,UAAeb,EAAMF,gBAArB,aAAe,EAAgBC,MAG5C,OAAOa,QAAQC,OAAR,OAAeb,QAAf,IAAeA,GAAf,UAAeA,EAAOF,gBAAtB,aAAe,EAAiBC,SAapClB,EC/ET,IAAMiC,GAAa,SAEJ,SAASC,KACtB,IAAMlC,EAAMH,KACN5C,EAAWC,cAiFjB,MA/EgB,CACdiF,OAAQ,WACNlF,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,IACf,OAAOjC,EAAIqC,IAAID,IAEjBE,QAAS,SAAChK,EAAQkI,GAChBvD,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,YAAoB3J,GAC7B,OAAO0H,EAAIqC,IAAID,EAAK,CAAE5B,YAExB+B,YAAa,SAACjK,EAAQ4B,GACpB,IAAMkI,EAAG,UAAMH,GAAN,YAAoB3J,EAApB,SACT,OAAO0H,EAAIwC,KAAKJ,EAAKlI,IAEvBV,YAAa,SAAClB,GACZ,IAAM8J,EAAG,UAAMH,GAAN,YAAoB3J,EAApB,SACT,OAAO0H,EAAIyC,MAAML,IAEnBM,UAAW,SAACpK,EAAQ4B,GAClB+C,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,YAAoB3J,EAApB,cAgBT,OAdA0H,EAAIW,aAAaC,QAAQC,IAAzB,uCAA6B,WAAOC,GAAP,iBAAA1C,EAAA,6DACvB5D,EAAQC,OAAOC,aAAaC,QAAQ,SACpCoG,EAAY,GACZvG,IACFuG,EAAS,2BACJD,GADI,IAEPR,QAAS,CACP,eAAgB,sBAChBU,cAAc,UAAD,OAAYxG,OARJ,kBAYpBuG,GAZoB,2CAA7B,uDAcOf,EAAIwC,KAAKJ,EAAKlI,IAEvByI,kBAAmB,SAACrK,EAAQ4B,GAC1B+C,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,YAAoB3J,EAApB,WAgBT,OAdA0H,EAAIW,aAAaC,QAAQC,IAAzB,uCAA6B,WAAOC,GAAP,iBAAA1C,EAAA,6DACvB5D,EAAQC,OAAOC,aAAaC,QAAQ,SACpCoG,EAAY,GACZvG,IACFuG,EAAS,2BACJD,GADI,IAEPR,QAAS,CACP,eAAgB,sBAChBU,cAAc,UAAD,OAAYxG,OARJ,kBAYpBuG,GAZoB,2CAA7B,uDAcOf,EAAIyC,MAAML,EAAKlI,IAExB0I,gBAAiB,SAAC1I,GAAa,IAAD,EAC5BA,EAAQ2I,UAAR,OAAoB3I,QAApB,IAAoBA,GAApB,UAAoBA,EAAS2I,iBAA7B,aAAoB,EAAoBhB,UAAU,EAAG,IAErD5E,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,UACT,OAAOjC,EAAIwC,KAAKJ,EAAKlI,IAEvB4I,gBAAiB,SAACxK,EAAQ4B,GAAa,IAAD,EACpCA,EAAQ6I,aAAR,OAAuB7I,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAS6I,oBAAhC,aAAuB,EAAuBlB,UAAU,EAAG,IAE3D5E,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,YAAoB3J,GAC7B,OAAO0H,EAAIyC,MAAML,EAAKlI,IAExB8I,kBAAmB,SAAC9I,GAClB+C,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,YACT,OAAOjC,EAAIwC,KAAKJ,EAAKlI,KC6BZ+I,OAtGf,YAAgC,IAAX3K,EAAU,EAAVA,OACnB,EAA8BoD,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgBgJ,EAAhB,KACA,EAAsCxH,mBAAS,MAA/C,mBAAoByH,GAApB,WACA,EAAsCzH,oBAAS,GAA/C,mBAAO0H,EAAP,KAAoBC,EAApB,KACMC,EAAMC,mBAENC,EAAUtB,KANa,4CAQ7B,WAA6B3E,GAA7B,eAAAa,EAAA,yDACEb,EAAEkG,iBACGvJ,EAFP,wDAKEgJ,EAAW,IAEPtC,EAAU,CAAE1G,WAPlB,SAQQsJ,EAAQjB,YAAYjK,EAAQsI,GARpC,4CAR6B,kEAyC7B,WAAyBrD,GAAzB,iBAAAa,EAAA,6DACMsF,EAAOnG,EAAEC,OAAOmG,MAAM,IACpBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GAH3B,SAKQF,EAAQd,UAAUpK,EAAQsL,GALlC,4CAzC6B,sBAgD7B,OAtBA/H,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAGzB6F,GAAeE,EAAIU,UAAYV,EAAIU,QAAQC,SAAS1G,EAAEC,SACxD6F,GAAe,IAInB,OADAa,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAACX,IAUF,8BACE,uBACEiB,SAAU,SAAC9G,GAAD,OAnDa,2CAmDN+G,CAAc/G,IAC/B/B,UAAU,oEAFZ,UAIE,sBAAKA,UAAU,uBAAf,UACE,uBACE5D,GAAG,YACHwF,KAAK,OACLmH,QAAM,EACNC,OAAO,0DACPlH,SA5DmB,8CA8DrB,uBAAOmH,QAAQ,YAAf,SACE,cAAC,GAAD,CAAejJ,UAAU,qBAAqBmE,KAAM+E,OAEtD,uBACEjH,MAAOvD,EACPoD,SAAU,SAACC,GAAD,OAAO2F,EAAW3F,EAAEC,OAAOC,QACrCL,KAAK,OACLC,YAAY,KACZ7B,UAAU,oLAEZ,sBAAK8H,IAAKA,EAAKqB,SAAS,WAAxB,UACE,cAAC,GAAD,CACEnJ,UAAU,uCACVmE,KAAMiF,GACN5I,QAAS,kBAAMqH,GAAgBD,MAEjC,qBACE5H,UACE,+CAEC4H,EAAc,UAAY,aAJ/B,SAOE,cAAC,KAAD,CAAQyB,aAlEC,SAACC,EAAOC,GAC3B5B,EAAe4B,IACf,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAaC,QACf9B,EAAWhJ,GAAO,OAAG6K,QAAH,IAAGA,OAAH,EAAGA,EAAaC,mBAoEhC,iCACE,cAAC,GAAD,CACEC,kBAAgB,EAChBtF,KAAMuF,GACN1J,UAAU,0BCnEP2J,OA7Bf,YAOI,IANFhL,EAMC,EANDA,MACAF,EAKC,EALDA,OAKC,IAJDC,eAIC,MAJS,gBAIT,EAHDkL,EAGC,EAHDA,YACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,oBAEA,OACErL,GACE,qBAAKuB,UAAU,4JAAf,SACE,sBAAKA,UAAU,2JAAf,UACE,oBAAIA,UAAU,wDAAd,SACa,KAAVrB,EAAeA,EAAQ,iBAE1B,sBAAMqB,UAAU,iCAAhB,SAAkDtB,IAClD,sBAAKsB,UAAU,oCAAf,UACE,cAAC,EAAD,CAAQO,SAAO,EAAC7B,QAAQ,KAAK8B,QAASoJ,IACtC,cAAC,EAAD,CACElL,QAAO,OAAEmL,QAAF,IAAEA,IAAsB,KAC/BrJ,QAASsJ,aC3BjBrD,GAAa,SAEJ,SAASsD,KACtB,IAAMvF,EAAMH,KACN5C,EAAWC,cAmDjB,MAjDgB,CACdsI,MAAO,SAACtL,GACN+C,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,UACT,OAAOjC,EAAIwC,KAAKJ,EAAKlI,IAEvBuL,SAAU,SAACvL,GAAa,IAAD,IACrBA,EAAQwL,UAAR,OAAoBxL,QAApB,IAAoBA,GAApB,UAAoBA,EAASwL,iBAA7B,aAAoB,EAAoB7D,UAAU,EAAG,IACrD3H,EAAQyL,SAAR,OAAmBzL,QAAnB,IAAmBA,GAAnB,UAAmBA,EAASyL,gBAA5B,aAAmB,EAAmB9D,UAAU,EAAG,IAEnD5E,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,GAAN,aACT,OAAOjC,EAAIwC,KAAKJ,EAAKlI,IAEvB0L,oBAAqB,SAAC7K,GACpB,GAAIA,EAAU,CACZ,IAAMqH,EAAG,UAAMH,GAAN,YAAoBlH,EAApB,aACT,OAAOiF,EAAIqC,IAAID,GAEjB,OAAOL,QAAQC,UAEjB6D,cAAe,WACb,IAAMzD,EAAG,UAAMH,IACf,OAAOjC,EAAIqC,IAAID,IAEjB9H,eAAgB,WACd,IAAM8H,EAAG,UAAMH,GAAN,YACT,OAAOjC,EAAIqC,IAAID,IAEjBtH,WAAY,SAACZ,GACX+C,EAASlD,GAAa,IACtB,IAAMqI,EAAG,UAAMH,IAef,OAdAjC,EAAIW,aAAaC,QAAQC,IAAzB,uCAA6B,WAAOC,GAAP,iBAAA1C,EAAA,6DACvB5D,EAAQC,OAAOC,aAAaC,QAAQ,SACpCoG,EAAY,GACZvG,IACFuG,EAAS,2BACJD,GADI,IAEPR,QAAS,CACP,eAAgB,sBAChBU,cAAc,UAAD,OAAYxG,OARJ,kBAYpBuG,GAZoB,2CAA7B,uDAcOf,EAAI8F,IAAI1D,EAAKlI,KCiWX6L,OA7Yf,YAAgD,IAA5B9L,EAA2B,EAA3BA,OAAQ+L,EAAmB,EAAnBA,UAAWrO,EAAQ,EAARA,KACrC,EAAsC+D,oBAAS,GAA/C,mBAAOuK,EAAP,KAAoBC,EAApB,KACA,EAAwCxK,mBAAS,IAAjD,mBAAOyK,EAAP,KAAqBC,EAArB,KAEA,EAAkC1K,mBAAS/D,EAAKP,MAAhD,mBAAOyL,EAAP,KAAkBwD,EAAlB,KACA,EAA8B3K,mBAAS,IAAvC,mBAAO1C,EAAP,KAAgBmE,EAAhB,KAEA,EAA0CzB,oBAAS,GAAnD,mBAAO4K,EAAP,KAAsBC,EAAtB,KACA,EAAoC7K,mBAAS,IAA7C,mBAAO8K,EAAP,KAAmBC,EAAnB,KACA,EAAgD/K,oBAAS,GAAzD,mBAAOgL,EAAP,KAAyBC,EAAzB,KACA,EAAoDjL,mBAClD/D,EAAKQ,cADP,mBAAOyO,EAAP,KAA2BC,EAA3B,KAIMrD,EAAUtB,KACV4E,EAAUvB,KAEhB,EAA0B7J,mBAAS,CACjCzB,QAAQ,EACRC,QAAS,GACTC,MAAO,iBAHT,mBAAOH,EAAP,KAAcI,EAAd,KAMMC,EAAc2C,aAAY,SAACxF,GAAD,OAAWA,EAAM4D,MAAMf,eACjD4C,GAAWC,cACXoG,GAAMC,mBACNwD,GAAgBxD,mBA1BuB,8CA4E7C,sCAAAnF,EAAA,yDACM4I,EADN,OACoCrP,QADpC,IACoCA,OADpC,EACoCA,EAAMQ,aAAawF,KAAI,SAACE,GAAD,OAAOA,EAAE9C,YAC9DkM,EAA+BL,EAAmBjJ,KACpD,SAACE,GAAD,OAAOA,EAAE9C,YAEPmM,EAA4B,GAC5BC,EAA+B,GAC/BC,EAA+B,GAGnCR,EAAmBS,SAAQ,SAAC9M,GACrByM,EAA4BtP,MAAK,SAACmG,GAAD,OAAOA,IAAMtD,EAAKQ,aACtDmM,EAA0BpP,KAAKyC,EAAKkE,aAGpC,OAAJ9G,QAAI,IAAJA,KAAMQ,aAAakP,SAAQ,SAAC9M,GACrB0M,EAA6BvP,MAAK,SAACmG,GAAD,OAAOA,IAAMtD,EAAKQ,cACvDoM,EAA6BrP,KAAKyC,EAAKkE,UACvC2I,EAA6BtP,KAAKyC,EAAKQ,gBAIvCoM,EAA6BpJ,OAAS,GAtB5C,oBAuBQ7D,EAAU,IAGZkN,EAA6B1P,MAAK,SAACmG,GAAD,OAAOA,IAAMxD,EAAYU,YA1BjE,oBA4BkD,IAAxCoM,EAA6BpJ,OA5BvC,wBA8BQuJ,GADApN,EAAU,oCA7BlB,kBA+Be,8BA/Bf,QAiCQA,EAAU,8CAjClB,gCAoCMA,EAAU,yBApChB,QAuCIiN,EAA6BE,SAAQ,SAAC5I,EAAUxG,GAC1CmP,EAA6BnP,KAAWoC,EAAYU,WACtDb,GAAO,WAAQuE,EAAR,KACHxG,IAAUkP,EAA6BpJ,OAAS,IAClD7D,GAAW,UAMjBoN,GADApN,GAAW,oBAhDf,yCAmDUqN,KAnDV,6CA5E6C,+BAkI9BA,KAlI8B,8EAkI7C,oCAAAnJ,EAAA,sDACM4I,EADN,OACoCrP,QADpC,IACoCA,OADpC,EACoCA,EAAMQ,aAAawF,KAAI,SAACE,GAAD,OAAOA,EAAE9C,YAC9DkM,EAA+BL,EAAmBjJ,KACpD,SAACE,GAAD,OAAOA,EAAE9C,YAEPyM,EAA4B,GAC5BJ,EAA+B,GAGnCH,EAA6BI,SAAQ,SAACtM,GAC/BiM,EAA4BxH,SAASzE,IACxCyM,EAA0B1P,KAAKiD,MAGnCiM,EAA4BK,SAAQ,SAACtM,GAC9BkM,EAA6BzH,SAASzE,IACzCqM,EAA6BtP,KAAKiD,MAIhC6F,EAAU,CACdmC,aAAcF,EACd2E,4BACAJ,gCAGF5D,EAAQV,gBAAgBnL,EAAKC,GAAIgJ,GAEZwG,EAA6B1P,MAChD,SAACmG,GAAD,OAAOA,IAAMxD,EAAYU,aAGzBkC,GAASvD,EAAc,IAGzB+N,KACAzB,GAAU,GApCZ,6CAlI6C,oEAyK7C,WAAiCzI,GAAjC,iBAAAa,EAAA,6DACMsF,EAAOnG,EAAEC,OAAOmG,MAAM,IACpBC,EAAW,IAAIC,UACZC,OAAO,SAAUJ,GAH5B,SAKQF,EAAQb,kBAAkBhL,EAAKC,GAAIgM,GAAU8D,MAAK,SAACzG,GACvD0G,GAAU,UAAW,wCANzB,4CAzK6C,sBAmL7C,SAASA,GAAUxN,EAAOD,GAMxBE,EALc,CACZH,QAAQ,EACRE,MAAOA,EACPD,QAASA,IAIb,SAASoN,GAAUpN,GACjBgM,GAAe,GACfE,EAAgBlM,GAElB,SAASuN,KACPvB,GAAe,GACfE,EAAgB,IAGlB,OAxKAvK,qBAAU,WACR0K,KAA0B,OAAT1D,QAAS,IAATA,OAAA,EAAAA,EAAW/D,WAC3B,CAAC+D,IACJhH,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAGzBtD,GAAUqJ,GAAIU,UAAYV,GAAIU,QAAQC,SAAS1G,EAAEC,SACnDwI,GAAU,IAId,OADA9B,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAAC9J,IACJ4B,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAI3BmJ,GACAK,GAAc/C,UACb+C,GAAc/C,QAAQC,SAAS1G,EAAEC,SAElCmJ,GAAoB,IAIxB,OADAzC,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAAC2C,IAEJ7K,qBAAU,WACRiL,EAAQjB,gBAAgB6B,MAAK,SAACzG,GACxBA,GACFwF,EAAcxF,QAGjB,IACHpF,qBAAU,WACRgL,EAAsBlP,EAAKQ,cAC3BkO,EAAa1O,EAAKP,QACjB,CAACO,IA0HGsC,EACL,qBAAKuB,UAAU,yJAAf,SACE,sBACE8H,IAAKA,GACL9H,UACE,2NAECkL,EAAmB,QAAU,IALlC,UAQE,cAAC,EAAD,CACEvM,MAAOH,EAAMG,MACbF,OAAQD,EAAMC,OACdC,QAASF,EAAME,QACf8B,QAAS,kBAAM5B,EAAS,CAAEH,QAAQ,OAEpC,cAAC,GAAD,CACEA,OAAQgM,EACRb,YAAa,kBAAMc,GAAe,IAClC/L,MAAM,gBACND,QAASiM,EACTd,mBAAmB,MACnBC,oBAAqBiC,KAEvB,qBAAK/L,UAAU,wBAAf,SACE,oBAAIA,UAAU,uEAAd,0BAIF,qBAAKA,UAAU,yBAAf,UACO,OAAJ7D,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,QAASV,GAAUC,SAASE,MACjC,qCACE,sBAAKrB,UAAU,YAAf,UACE,wBACEiJ,QAAQ,YACRjJ,UAAU,wDAFZ,wBAIa,sBAAMA,UAAU,eAAhB,kBAEb,uBACE5D,GAAG,YACH6F,MAAOoF,EACPvF,SAAU,SAACC,GAAD,OAAO8I,EAAa9I,EAAEC,OAAOC,QACvCL,KAAK,OACL5B,UAAU,yKAGd,sBAAK8H,IAAKyD,GAAevL,UAAU,YAAnC,UACE,uBACEiJ,QAAQ,SACRjJ,UAAU,wDAFZ,yBAMA,sBAAKA,UAAU,WAAf,UACE,uBACE5D,GAAG,SACHwF,KAAK,SACLwK,QAAS,kBAAMjB,GAAoB,IACnClJ,MAAOzE,EACP6O,aAAa,MACbvK,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,OAAOC,QACrCjC,UAAU,sKAEXkL,GACC,mCACE,sBAAKlL,UAAU,8NAAf,UACE,oBAAIA,UAAU,wCAAd,yBAGCgL,EACExI,QACC,SAACH,GAAD,gBACG,UAAAA,EAAEY,gBAAF,eACGc,cACDC,SAFF,OAEWxG,QAFX,IAEWA,OAFX,EAEWA,EAASuG,kBAFpB,UAGC1B,EAAE9C,gBAHH,aAGC,EACIwE,cACDC,SAFH,OAEYxG,QAFZ,IAEYA,OAFZ,EAEYA,EAASuG,mBACtBqH,EAAmBlP,MAClB,SAACoQ,GAAD,OAAcA,EAAS/M,WAAa8C,EAAE9C,eAG3CkE,MAAK,SAACb,EAAGC,GAAJ,OAAUD,EAAEK,SAASsJ,cAAc1J,EAAEI,aAC1Cd,KAAI,SAACG,EAAQ7F,GAAT,aACH,sBACE+D,QAAS,WACP,IAAIgD,EAAM,YAAO4H,GAEd5H,EAAOtH,MACN,SAACmG,GAAD,OAAOA,EAAE9C,WAAa+C,EAAO/C,cAG/BiE,EAAOlH,KAAKgG,GACZ+I,EAAsB7H,KAI1BxD,UAAU,kPAbZ,UAeE,cAAC,EAAD,CAAaiB,KAAK,KAAKH,IAAKwB,EAAOU,YACnC,sBAAMhD,UAAU,oEAAhB,mBACGsC,EAAOW,gBADV,QACsB,cALjBuJ,KAAKC,SAAWhQ,iBAcrC,sBAAKuD,UAAU,YAAf,UACE,wBACEiJ,QAAQ,SACRjJ,UAAU,wDAFZ,qBAIU,sBAAMA,UAAU,eAAhB,eAAwC,IAChD,sBAAMA,UAAU,wBAAhB,SACG,yBAGL,qBAAKA,UAAU,6LAAf,SACG,YAAIoL,GACF3H,MAAK,SAACb,EAAGC,GAAJ,OAAUD,EAAEK,SAASsJ,cAAc1J,EAAEI,aAC1Cd,KAAI,SAACG,EAAQ7F,GAAT,aACH,sBACE+D,QAAS,WACP,IAAIgD,EAAM,YAAO4H,GACbsB,EAAIlJ,EAAO9G,WACb,SAAC2F,GAAD,OAAOA,EAAE9C,WAAa+C,EAAO/C,YAE3BmN,GAAK,IACPlJ,EAAOmJ,OAAOD,EAAG,GACjBrB,EAAsB7H,KAI1BxD,UAAU,6OAZZ,UAcE,cAAC,EAAD,CAAaiB,KAAK,KAAKH,IAAKwB,EAAOU,YACnC,sBAAMhD,UAAU,oEAAhB,mBACGsC,EAAOW,gBADV,QACsB,cALjBuJ,KAAKC,SAAWhQ,WAW/B,sBAAKuD,UAAU,+BAAf,UACE,uBACEiJ,QAAQ,SACRjJ,UAAU,yDAFZ,0BAMA,uBACE5D,GAAG,SACH0F,SAhW6B,6CAiW7BF,KAAK,OACL5B,UAAU,SACVgJ,OAAO,kEAKb,sBAAKlB,IAAKyD,GAAevL,UAAU,YAAnC,UACE,sBAAKA,UAAU,+BAAf,0BACgB,IACd,sBAAMA,UAAU,cAAhB,SAA+B7D,EAAKyQ,qBAEtC,sBAAK5M,UAAU,+BAAf,0BACgB,IACd,sBAAMA,UAAU,cAAhB,SACGkD,KAAO,IAAIC,KAAKhH,EAAK2G,aAAc,YAAY+J,OAC9C,qCAOZ,qBAAK7M,UAAU,kCAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,cAAC,EAAD,CAAQO,SAAO,EAAC7B,QAAQ,QAAQ8B,QAAS,kBAAMgK,GAAU,OACpD,OAAJrO,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,QAASV,GAAUC,SAASE,MACjC,cAAC,EAAD,CACEX,UAAWoK,EACXpM,QAAQ,OACR8B,QAAS,kBA/XsB,2CA+XhBsM,MAGjB,aAOV,IC7JWC,OA1Of,YAA+B,IAAD,MAAR5Q,EAAQ,EAARA,KACdsF,EAAWC,cACX7C,EAAc2C,aAAY,SAACxF,GAAD,OAAWA,EAAM4D,MAAMf,eACjDmJ,EAAUtB,KAEhB,EAA8CxG,mBAAS,IAAvD,mBAAO8M,EAAP,KAAwBC,EAAxB,KACA,EAA8C/M,oBAAS,GAAvD,mBAAOgN,EAAP,KAAwBC,EAAxB,KAEI/K,EAAkBvD,EAAYU,SAE5B+C,GACA,OAAJnG,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,aAAa4F,QAAS,EAA5B,OACIpG,QADJ,IACIA,GADJ,UACIA,EAAMQ,oBADV,aACI,EACI6F,QAAO,SAACH,GAAD,OAAOA,EAAE9C,WAAa6C,KAC9BK,QACH5D,EAON,SAASuO,EAAmB3Q,GAC1B,IAAI+G,EAAM,YAAOwJ,GACPxJ,EAAO9G,WAAU,SAAC2F,GAAD,OAAOA,IAAM5F,MAC/B,EACP+G,EAASA,EAAOhB,QAAO,SAACH,GAAD,OAAOA,IAAM5F,KAEpC+G,EAAOlH,KAAKG,GAEdwQ,EAAmBzJ,GAIrB,MAAwBtD,mBAAS,GAAjC,mBAAO5C,EAAP,KAAa+P,EAAb,KACA,EC9Ca,SAA8BC,EAAahQ,GACxD,MAA8B4C,oBAAS,GAAvC,mBAAOqN,EAAP,KAAgBC,EAAhB,KACA,EAA0BtN,mBAAS,IAAnC,mBAAOyF,EAAP,KAAc8H,EAAd,KACA,EAAoCvN,mBAAS,IAA7C,mBAAOwN,EAAP,KAAmBC,EAAnB,KACA,EAA8BzN,oBAAS,GAAvC,mBAAO0N,EAAP,KAAgBC,EAAhB,KAEM7F,EAAUtB,KAyBhB,OAvBArG,qBAAU,WACR,GAAI/C,EAAO,GAAKsQ,EAAS,CACvBJ,GAAW,GACXC,GAAS,GAET,IAAMrI,EAAU,CAAE9H,QAClB0K,EACGlB,QAAQwG,EAAYlR,GAAIgJ,GACxB8G,MAAK,SAACzG,GACLkI,EAAclI,GACdoI,EAAWvQ,EAAOmI,EAASlI,WAC3BiQ,GAAW,MAEZM,OAAM,SAAC/L,GACN0L,EAAS1L,SAGd,CAACzE,IAEJ+C,qBAAU,WACRwN,EAAWvQ,EAAOgQ,EAAY/P,aAC7B,CAAC+P,IAEG,CAAEC,UAAS5H,QAAO+H,aAAYE,WDeWG,CAC9C5R,EACAmB,GAFMoQ,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,QAASL,EAA7B,EAA6BA,QAAS5H,EAAtC,EAAsCA,MAIhCqI,EAAgBjG,mBA+BtB,OA7BA1H,qBAAU,YACA,OAAJlE,QAAI,IAAJA,OAAA,EAAAA,EAAM4B,qBAAsB,GAC9BiK,EAAQhK,YAAY7B,EAAKC,IAAI8P,MAAK,SAAC+B,GACjCxM,EAASzD,EAAY7B,EAAKC,UAG7B,CAACD,IAEJkE,qBAAU,WACRoB,EAASzE,EAAoB0Q,MAC5B,CAACA,IAQJrN,qBAAU,WACJlE,EAAKmB,KAAO,GANZ0Q,GACFA,EAAcxF,QAAQ0F,mBAQvB,CAAC/R,IAQF,qCACE,cAAC,GAAD,CACEsC,OAAQyO,EACR1C,UAAW2C,EACXhR,KAAMA,IAER,sBAAK6D,UAAU,yDAAf,UAEE,sBAAKA,UAAU,iJAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,qBACEc,IAAKqN,GACLnN,IAAI,aACJhB,UAAU,mCACVQ,QApEZ,WACE,IAAMvE,EAASiC,EAAc,GAC7BuD,EAASxF,MAoED,cAAC,EAAD,CACE6E,IAC2B,MAArB,OAAJ3E,QAAI,IAAJA,OAAA,EAAAA,EAAMY,gBAAN,OACIZ,QADJ,IACIA,OADJ,EACIA,EAAMY,eADV,OAEIuF,QAFJ,IAEIA,OAFJ,EAEIA,EAAQU,YAGhB,sBAAMhD,UAAU,oEAAhB,UACO,OAAJ7D,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,QAASV,GAAUC,SAASC,QAAlC,OACGkB,QADH,IACGA,OADH,EACGA,EAAQW,SADX,iBAEG9G,QAFH,IAEGA,OAFH,EAEGA,EAAMP,YAFT,QAEiBsF,GAAUI,mBAGhC,cAAC,GAAD,CACEtB,UAAU,qBACVmE,KAAMiK,GACN5N,QAAS,kBAAM2M,GAAoBD,SAMvC,sBAAKlN,UAAU,6FAAf,UACGuN,GACC,qBAAKvN,UAAU,iCAAf,wBAED4N,IAAYL,GACX,qBAAKvN,UAAU,OAAf,SACE,wBACEA,UAAU,qMACVQ,QApDd,WACMlD,EAAOnB,EAAKoB,WACd8P,GAAQ,SAACgB,GAAD,OAAcA,EAAW,MAgDzB,sCAQFT,GACA,sBAAK5N,UAAU,oDAAf,0BACgB,IACbkD,KAAO,IAAIC,KAAKhH,EAAK2G,aAAc,YAAY+J,OAC9C,8BAIN,8BAAMlH,GAAS,UAtBjB,6BAuBOxJ,QAvBP,IAuBOA,OAvBP,EAuBOA,EAAMgB,iBAvBb,aAuBG,EACGsG,MAAK,SAAC6K,EAAUC,GAChB,OAAOD,EAASxL,YAAcyL,EAASzL,YAAc,GAAK,KAE3DX,KAAI,SAACtE,EAASpB,GAAV,iBACHoB,EAAQ2Q,iBAAmB3P,EAAYU,SACrC,mCACE,sBAEES,UAAU,iCAFZ,UAIGgN,EAAgBhJ,SAASvH,IACxB,sBAAMuD,UAAU,yJAAhB,mBACGkD,KACC,IAAIC,KAAKtF,EAAQiF,aACjB,YACA2L,kBAJJ,QAIkB,KAGnB5Q,EAAQ6Q,SACP,qBACElO,QAAS,kBAAM4M,EAAmB3Q,IAClCuD,UAAU,sFACVc,IAAKjD,EAAQ6Q,SACb1N,IAAI,YAGN,sBACER,QAAS,kBAAM4M,EAAmB3Q,IAClCuD,UACE,8IAECgN,EAAgBhJ,SAASvH,GACtB,iCACA,iGAPR,SAUGoB,EAAQa,YA7BRjC,EAAQ+P,KAAKC,YAmCtB,sBAEEzM,UAAU,2BAFZ,UAIE,cAAC,EAAD,CACEc,IAAG,OACD3E,QADC,IACDA,GADC,UACDA,EAAMQ,aACH6F,QAAO,SAACH,GAAD,OAAOA,EAAE9C,WAAa1B,EAAQ2Q,kBACrC/L,eAHF,aACD,EAEYO,UAEd/B,KAAK,OAEP,sBAAKjB,UAAU,mCAAf,WACIgN,EAAgBhJ,SAASvH,KACrB,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,QAASV,GAAUC,SAASE,QAClC,sBAAMrB,UAAU,iJAAhB,mBACGnC,EAAQ8Q,eACP,MACAzL,KACE,IAAIC,KAAKtF,EAAQiF,aACjB,YACA2L,kBANN,QAMoB,KAGrB5Q,EAAQ6Q,SACP,qBACElO,QAAS,kBAAM4M,EAAmB3Q,IAClCuD,UAAU,0DACVc,IAAKjD,EAAQ6Q,SACb1N,IAAI,YAGN,sBACEhB,UACE,8IAECgN,EAAgBhJ,SAASvH,GACtB,iCACA,oFAEN+D,QAAS,kBAAM4M,EAAmB3Q,IARpC,SAUGoB,EAAQa,eAzCVjC,EAAQ+P,KAAKC,aAgD1B,qBAAK3E,IAAKkG,OAIZ,cAAC,GAAD,CAAWlR,OAAQX,EAAKC,YE+JjBwS,OAxYf,YAA4C,IAAtBnQ,EAAqB,EAArBA,OAAQ+L,EAAa,EAAbA,UAC5B,EAAwCtK,mBAASgB,GAAUC,SAASC,SAApE,mBAAOyN,EAAP,KAAqBC,EAArB,KACA,EAAgD5O,oBAAS,GAAzD,mBAAOgL,EAAP,KAAyBC,EAAzB,KACA,EAA0CjL,oBAAS,GAAnD,mBAAO4K,EAAP,KAAsBC,EAAtB,KACA,EAAkC7K,mBAAS,IAA3C,mBAAOmH,EAAP,KAAkBwD,EAAlB,KACA,EAA8B3K,mBAAS,IAAvC,mBAAO1C,EAAP,KAAgBmE,EAAhB,KACA,EAAoCzB,mBAAS,IAA7C,mBAAO8K,EAAP,KAAmBC,EAAnB,KACA,EAAoD/K,mBAAS,IAA7D,mBAAOkL,EAAP,KAA2BC,EAA3B,KAEMvD,EAAMC,mBACNwD,EAAgBxD,mBAChBtG,EAAWC,cAEXsG,EAAUtB,KACV4E,EAAUvB,KAdyB,4CAsEzC,8BAAAnH,EAAA,sDACMkI,IACE+D,IAAiB3N,GAAUC,SAASE,OAChC+D,EAAU,CACd2J,qBAAsB3D,EAAmBjJ,KAAI,SAACE,GAAD,OAAOA,EAAE9C,YACtD3D,KAAMyL,GAERW,EAAQZ,gBAAgBhC,GAAS8G,MAAK,SAACzG,GACjCA,EAASrJ,IACXqF,EAASvD,EAAcuH,EAASrJ,KAElCiP,EAAsB,IACtBR,EAAa,IACbL,GAAU,OAEHqE,IAAiB3N,GAAUC,SAASC,UACvCgE,EAAU,CACd4J,oBAAqB5D,EAClBjJ,KAAI,SAACE,GAAD,OAAOA,EAAE9C,YACbkD,SAELuF,EAAQR,kBAAkBpC,GAAS8G,MAAK,SAACzG,GACnCA,EAASrJ,IACXqF,EAASvD,EAAcuH,EAASrJ,KAElCiP,EAAsB,IACtBR,EAAa,IACbL,GAAU,QA3BlB,4CAtEyC,sBAuGzC,OAvFAnK,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAGzBtD,GAAUqJ,EAAIU,UAAYV,EAAIU,QAAQC,SAAS1G,EAAEC,SACnDwI,GAAU,IAId,OADA9B,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAAC9J,IACJ4B,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAI3BmJ,GACAK,EAAc/C,UACb+C,EAAc/C,QAAQC,SAAS1G,EAAEC,SAElCmJ,GAAoB,IAIxB,OADAzC,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAAC2C,IAEJ7K,qBAAU,WAMR,OALAiL,EAAQjB,gBAAgB6B,MAAK,SAACzG,GACxBA,GACFwF,EAAcxF,MAGX,WACL4F,EAAsB,IACtBR,EAAa,OAEd,IAEHxK,qBAAU,WACR,GAAIwO,IAAiB3N,GAAUC,SAASE,MAAO,CAC7C,IAAImC,GAA2B,OAAlB4H,QAAkB,IAAlBA,OAAA,EAAAA,EAAoB7I,SAAU,IAA9B,OAAmC8E,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAW/D,QAC3DyH,EAAiBvH,QACRqL,IAAiB3N,GAAUC,SAASC,SAC7C2J,EAAgD,KAAb,OAAlBK,QAAkB,IAAlBA,OAAA,EAAAA,EAAoB7I,WAEtC,CAAC6I,EAAoB/D,EAAWwH,IAmC5BpQ,EACL,qBAAKuB,UAAU,0JAAf,SACE,sBACE8H,IAAKA,EACL9H,UACE,+OAECkL,EAAmB,QAAU,IALlC,UAQE,sBAAKlL,UAAU,qDAAf,UACE,oBAAIA,UAAU,uEAAd,uBAIA,sBAAKA,UAAU,+FAAf,UACE,qBACEA,UACE,gHAEC6O,IAAiB3N,GAAUC,SAASE,MACjC,oCACA,aAGR,sBACErB,UACE,oDAEC6O,IAAiB3N,GAAUC,SAASC,QACjC,aACA,uCAENZ,QAAS,kBAAMsO,EAAgB5N,GAAUC,SAASC,UARpD,qBAYA,sBACEpB,UACE,oDAEC6O,IAAiB3N,GAAUC,SAASE,MACjC,aACA,uCAENb,QAAS,kBAAMsO,EAAgB5N,GAAUC,SAASE,QARpD,yBAcJ,qBAAKrB,UAAU,yBAAf,SACG6O,IAAiB3N,GAAUC,SAASE,MACnC,qCACE,sBAAKrB,UAAU,YAAf,UACE,wBACEiJ,QAAQ,YACRjJ,UAAU,wDAFZ,wBAIa,sBAAMA,UAAU,eAAhB,kBAEb,uBACE5D,GAAG,YACH6F,MAAOoF,EACPvF,SAAU,SAACC,GAAD,OAAO8I,EAAa9I,EAAEC,OAAOC,QACvCL,KAAK,OACL5B,UAAU,yKAGd,sBAAK8H,IAAKyD,EAAevL,UAAU,YAAnC,UACE,uBACEiJ,QAAQ,SACRjJ,UAAU,wDAFZ,0BAMA,sBAAKA,UAAU,WAAf,UACE,uBACE5D,GAAG,SACHwF,KAAK,SACLwK,QAAS,kBAAMjB,GAAoB,IACnClJ,MAAOzE,EACP6O,aAAa,MACbvK,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,OAAOC,QACrCjC,UAAU,sKAEXkL,GACC,mCACE,sBAAKlL,UAAU,wPAAf,UACE,oBAAIA,UAAU,wCAAd,yBAGCgL,EACExI,QACC,SAACH,GAAD,gBACG,UAAAA,EAAEY,gBAAF,eACGc,cACDC,SAFF,OAEWxG,QAFX,IAEWA,OAFX,EAEWA,EAASuG,kBAFpB,UAGC1B,EAAE9C,gBAHH,aAGC,EACIwE,cACDC,SAFH,OAEYxG,QAFZ,IAEYA,OAFZ,EAEYA,EAASuG,mBACtBqH,EAAmBlP,MAClB,SAACoQ,GAAD,OAAcA,EAAS/M,WAAa8C,EAAE9C,eAG3CkE,MAAK,SAACb,EAAGC,GAAJ,OAAUD,EAAEK,SAASsJ,cAAc1J,EAAEI,aAC1Cd,KAAI,SAACG,EAAQ7F,GAAT,aACH,sBACE+D,QAAS,WACP,IAAIgD,EAAM,YAAO4H,GAEd5H,EAAOtH,MACN,SAACmG,GAAD,OAAOA,EAAE9C,WAAa+C,EAAO/C,cAG/BiE,EAAOlH,KAAKgG,GACZ+I,EAAsB7H,KAI1BxD,UAAU,kPAbZ,UAeE,cAAC,EAAD,CAAaiB,KAAK,KAAKH,IAAKwB,EAAOU,YACnC,sBAAMhD,UAAU,oEAAhB,mBACGsC,EAAOW,gBADV,QACsB,cALjBuJ,KAAKC,SAAWhQ,iBAcrC,sBAAKuD,UAAU,YAAf,UACE,wBACEiJ,QAAQ,SACRjJ,UAAU,wDAFZ,sBAIW,sBAAMA,UAAU,eAAhB,eAAwC,IACjD,sBAAMA,UAAU,wBAAhB,SACG,4CAGL,qBAAKA,UAAU,iMAAf,SACGoL,EACE3H,MAAK,SAACb,EAAGC,GAAJ,OAAUD,EAAEK,SAASsJ,cAAc1J,EAAEI,aAC1Cd,KAAI,SAACG,EAAQ7F,GAAT,aACH,sBACE+D,QAAS,WACP,IAAIgD,EAAM,YAAO4H,GACbsB,EAAIlJ,EAAO9G,WACb,SAAC2F,GAAD,OAAOA,EAAE9C,WAAa+C,EAAO/C,YAE3BmN,GAAK,IACPlJ,EAAOmJ,OAAOD,EAAG,GACjBrB,EAAsB7H,KAI1BxD,UAAU,8OAZZ,UAcE,cAAC,EAAD,CAAaiB,KAAK,KAAKH,IAAKwB,EAAOU,YACnC,sBAAMhD,UAAU,oEAAhB,mBACGsC,EAAOW,gBADV,QACsB,cALjBuJ,KAAKC,SAAWhQ,cAajC,sBAAKqL,IAAKyD,EAAevL,UAAU,YAAnC,UACE,uBACEiJ,QAAQ,eACRjJ,UAAU,8CAFZ,4BAMA,sBAAKA,UAAU,WAAf,UACE,uBACE5D,GAAG,eACHwF,KAAK,SACLwK,QAAS,kBAAMjB,GAAoB,IACnClJ,MAAOzE,EACP6O,aAAa,MACbvK,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,OAAOC,QACrCjC,UAAU,sKAEXkL,GACC,mCACE,sBAAKlL,UAAU,iOAAf,UACE,oBAAIA,UAAU,mDAAd,yBAGCgL,EACEvH,MAAK,SAACb,EAAGC,GAAJ,OAAUD,EAAEK,SAASsJ,cAAc1J,EAAEI,aAC1CT,QACC,SAACH,GAAD,gBACG,UAAAA,EAAEY,gBAAF,eACGc,cACDC,SAFF,OAEWxG,QAFX,IAEWA,OAFX,EAEWA,EAASuG,kBAFpB,UAGC1B,EAAE9C,gBAHH,aAGC,EACIwE,cACDC,SAFH,OAEYxG,QAFZ,IAEYA,OAFZ,EAEYA,EAASuG,mBACtBqH,EAAmBlP,MAClB,SAACoQ,GAAD,OAAcA,EAAS/M,WAAa8C,EAAE9C,eAG3C4C,KAAI,SAACG,EAAQ7F,GAAT,aACH,sBACE+D,QAAS,WACP,IAAIgD,EAAS,GACbA,EAAOlH,KAAKgG,GACZ6I,GAAoB,GACpBE,EAAsB7H,IAGxBxD,UAAU,kPARZ,UAUE,cAAC,EAAD,CAAaiB,KAAK,KAAKH,IAAKwB,EAAOU,YACnC,sBAAMhD,UAAU,oEAAhB,mBACGsC,EAAOW,gBADV,QACsB,cALjBuJ,KAAKC,SAAWhQ,cAanC,sBAAKuD,UAAU,YAAf,UACE,wBACEiJ,QAAQ,SACRjJ,UAAU,8CAFZ,sBAIW,sBAAMA,UAAU,eAAhB,eAAwC,IACjD,sBAAMA,UAAU,wBAAhB,SACG,yBAGL,qBAAKA,UAAU,kMAAf,SACG,YAAIoL,GAAoBjJ,KAAI,SAACG,EAAQ7F,GAClB,IAAD,EAAjB,OAAc,IAAVA,EAEA,sBACE+D,QAAS,WACP,IAAIgD,EAAM,YAAO4H,GACbsB,EAAIlJ,EAAO9G,WACb,SAAC2F,GAAD,OAAOA,EAAE9C,WAAa+C,EAAO/C,YAE3BmN,GAAK,IACPlJ,EAAOmJ,OAAOD,EAAG,GACjBrB,EAAsB7H,KAI1BxD,UAAU,8OAZZ,UAcE,cAAC,EAAD,CAAaiB,KAAK,KAAKH,IAAKwB,EAAOU,YACnC,sBAAMhD,UAAU,oEAAhB,mBACGsC,EAAOW,gBADV,QACsB,cALjBuJ,KAAKC,SAAWhQ,GAUlB,0CAQrB,qBAAKuD,UAAU,kCAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,cAAC,EAAD,CAAQO,SAAO,EAAC7B,QAAQ,QAAQ8B,QAAS,kBAAMgK,GAAU,MACzD,cAAC,EAAD,CACE9J,UAAWoK,EACXpM,QAAQ,SACR8B,QAAS,kBA7XoB,0CA6XdyO,gBAOzB,IC3QWC,OA3Hf,YAAuD,IAAnCzQ,EAAkC,EAAlCA,OAAQ+L,EAA0B,EAA1BA,UAAW3L,EAAe,EAAfA,YACrC,EAAkCqB,mBAAS,IAA3C,mBAAOgK,EAAP,KAAkBiF,EAAlB,KACA,EAAgCjP,mBAAS,IAAzC,mBAAOiK,EAAP,KAAiBiF,EAAjB,KACA,EAA4BlP,mBAAS,IAArC,mBAAOmP,EAAP,KAAeC,EAAf,KAEMhE,EAAUvB,KACVjC,EAAMC,mBACNtG,EAAWC,cAPmC,4CA+BpD,4BAAAkB,EAAA,uDACQwC,EAAU,IAAIiD,UACZC,OAAO,SAAU+G,GACzBjK,EAAQkD,OAAO,YAAa4B,EAAU7D,UAAU,EAAG,KACnDjB,EAAQkD,OAAO,WAAY6B,EAAS9D,UAAU,EAAG,KAEjDiF,EAAQhM,WAAW8F,GAAS8G,MAAK,SAACzG,GAChChE,EAASnC,EAAWmG,IACpB0G,EAAU,UAAW,gCAGvB3B,GAAU,GAXZ,4CA/BoD,sBA4CpD,SAAS2B,EAAUxN,EAAOD,GAMxB+C,EAAS7C,EALK,CACZH,QAAQ,EACRE,MAAOA,EACPD,QAASA,KAKb,OA5CA2B,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAGzBtD,GAAUqJ,EAAIU,UAAYV,EAAIU,QAAQC,SAAS1G,EAAEC,SACnDwI,GAAU,IAId,OADA9B,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAAC9J,IAEJ4B,qBAAU,WACJxB,EAAYqL,WAAarL,EAAYsL,WACvCgF,EAAatQ,EAAYqL,WACzBkF,EAAYvQ,EAAYsL,aAEzB,CAACtL,IAwBGJ,EACL,qBAAKuB,UAAU,0JAAf,SACE,sBACE8H,IAAKA,EACL9H,UACE,8LAHJ,UAME,oBAAIA,UAAU,iFAAd,wBAGA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,wFAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,wBACEiJ,QAAQ,WACRjJ,UAAU,8CAFZ,wBAIa,sBAAMA,UAAU,eAAhB,kBAEb,uBACE5D,GAAG,YACH6F,MAAOiI,EACPpI,SAAU,SAACC,GAAD,OAAOoN,EAAapN,EAAEC,OAAOC,QACvCL,KAAK,OACL5B,UAAU,mKAGd,sBAAKA,UAAU,kCAAf,UACE,wBACEiJ,QAAQ,WACRjJ,UAAU,8CAFZ,uBAIY,sBAAMA,UAAU,eAAhB,kBAEZ,uBACE5D,GAAG,WACH6F,MAAOkI,EACPrI,SAAU,SAACC,GAAD,OAAOqN,EAAYrN,EAAEC,OAAOC,QACtCL,KAAK,OACL5B,UAAU,wKAGd,sBAAKA,UAAU,0BAAf,UACE,uBACEiJ,QAAQ,SACRjJ,UAAU,sDAFZ,oBAMA,uBACE5D,GAAG,SACH0F,SAAU,SAACC,GAAD,OAAOuN,EAAUvN,EAAEC,OAAOmG,MAAM,KAC1CvG,KAAK,OACL5B,UAAU,SACVgJ,OAAO,kEAIb,sBAAKhJ,UAAU,+CAAf,UACE,cAAC,EAAD,CAAQO,SAAO,EAAC7B,QAAQ,QAAQ8B,QAAS,kBAAMgK,GAAU,MACzD,cAAC,EAAD,CAAQ9L,QAAQ,OAAO8B,QAAS,kBAlHU,0CAkHJ+O,iBAM9C,ICpGWC,OAzBf,WACE,MAAgCtP,oBAAS,GAAzC,mBAAOuP,EAAP,KAAiBC,EAAjB,KAqBA,OAnBArP,qBAAU,WAGK,SAFFpB,OAAOC,aAAaC,QAAQ,WAGrCF,OAAOyJ,SAASiH,gBAAgBC,UAAUC,IAAI,QAC9CH,GAAY,MAEb,IAEHrP,qBAAU,WACJoP,GACFxQ,OAAOyJ,SAASiH,gBAAgBC,UAAUC,IAAI,QAC9C5Q,OAAOC,aAAa4Q,QAAQ,QAAS,UAErC7Q,OAAOyJ,SAASiH,gBAAgBC,UAAUG,OAAO,QACjD9Q,OAAOC,aAAa4Q,QAAQ,QAAS,YAEtC,CAACL,IAEG,CAAEA,WAAUC,gBC8GNM,OAxHf,YAA6B,IAAXC,EAAU,EAAVA,OACVpR,EAAc2C,aAAY,SAACxF,GAAD,OAAWA,EAAM4D,MAAMf,eAEvD,EAAgDqB,oBAAS,GAAzD,mBAAOgQ,EAAP,KAAyBC,EAAzB,KACA,EAA4CjQ,oBAAS,GAArD,mBAAOkQ,EAAP,KAAuBC,EAAvB,KACA,EAAwCnQ,mBAAS,CAC/CzB,QAAQ,EACRE,MAAO,GACPD,QAAS,GACTmL,mBAAoB,KAJtB,mBAAOyG,EAAP,KAAqBC,EAArB,KAOA,EAAkCf,KAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAEZc,EAAa3R,EAAYmE,UAC/B,EAAoC9C,oBAAS,GAA7C,mBAAOuQ,EAAP,KAAmBC,EAAnB,KACM5I,EAAMC,mBAiCZ,OA/BA1H,qBAAU,WACR,IAAMkI,EAAwB,SAACxG,GAGzB0O,GAAc3I,EAAIU,UAAYV,EAAIU,QAAQC,SAAS1G,EAAEC,SACvD0O,GAAc,IAIlB,OADAhI,SAASC,iBAAiB,YAAaJ,GAChC,WAELG,SAASE,oBAAoB,YAAaL,MAE3C,CAACkI,IAmBF,qCACGH,EAAa7R,QACZ,cAAC,GAAD,CACEA,OAAQ6R,EAAa7R,OACrBmL,YAAa,kBAAM2G,EAAgB,CAAE9R,QAAQ,KAC7CE,MAAM,gBACND,QAAS4R,EAAa5R,QACtBmL,mBAAoByG,EAAazG,mBACjCC,oBAAqBwG,EAAaxG,sBAGtC,cAAC,GAAD,CACEjL,YAAaA,EACbJ,OAAQ2R,EACR5F,UAAW6F,IAEb,cAAC,GAAD,CAAY5R,OAAQyR,EAAkB1F,UAAW2F,IACjD,sBAAKnQ,UAAU,8CAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,qBACEA,UAAU,4GACVQ,QAAS,kBAAM6P,GAAkB,SAAChO,GAAD,OAAQA,MAF3C,SAIE,cAAC,EAAD,CAAavB,IAAK0P,EAAYvP,KAAK,SAErC,oBAAIjB,UAAU,qBAAd,sBAEF,sBAAKA,UAAU,8BAAf,UACE,cAAC,GAAD,CACEoE,UAAU,cACV5D,QAAS,kBAAM2P,GAAoB,IACnCnQ,UAAU,mCAEZ,sBAAKA,UAAU,WAAW8H,IAAKA,EAA/B,UACE,cAAC,GAAD,CACE1D,UAAU,gCACV5D,QAAS,kBAAMkQ,GAAeD,IAC9BzQ,UAAU,mCAEXyQ,GACC,sBAAKzQ,UAAU,wNAAf,UACE,yBACEA,UAAU,6LACVQ,QAAS,kBAAMkP,GAAaD,IAF9B,UAIE,sBAAMzP,UAAU,8DAAhB,SACE,mBAAGA,UAAU,wFAEf,gDAEF,yBACEA,UAAU,6LACVQ,QAAS,YArEzB,SACE9B,EACAoL,GAWAyG,EAPqB,CACnB9R,QAAQ,EACRE,MAHF,uCAIED,QAASA,EACTmL,mBALF,uDAFqB,MAQnBC,oBAAqBA,IA2DP6G,CAAiB,0BAA2BV,IAHhD,UAME,sBAAMjQ,UAAU,8DAAhB,SACE,mBAAGA,UAAU,iGAEf,8DC3HH,OAA0B,iCC2J1B4Q,OAtIf,WACE,MAAoC1Q,mBAAS,MAA7C,mBAAO2Q,EAAP,KAAmBC,EAAnB,KACMxM,EAAUC,cAEV9C,EAAWC,cACXhG,EAAQ8F,aAAY,SAACxF,GAAD,OAAWA,EAAMN,MAAMA,SAC3CmD,EAAc2C,aAAY,SAACxF,GAAD,OAAWA,EAAM4D,MAAMf,eACjDZ,EAAauD,aAAY,SAACxF,GAAD,OAAWA,EAAMN,MAAMuC,cAEhD+J,EAAUtB,KACV4E,EAAUvB,KAyEhB,OAjEA1J,qBAAU,WAAM,4CACd,sBAAAuC,EAAA,sDACEoF,EACGrB,SACAuF,MAAK,SAACzG,GACLhE,EAAS/D,EAAa+H,EAASC,UAEhCoI,OAAM,SAACnI,GACNoL,QAAQpL,MAAM,sBAAuBA,MAGzC2F,EAAQxM,iBAAiBoN,MAAK,SAACzG,GAC7BhE,EAASnC,EAAWmG,OAXxB,4CADc,uBAAC,WAAD,wBAgBduL,KACC,IAGH3Q,qBAAU,WACR,IAAM4Q,GAAgB,IAAIC,KACvBC,QAAQvM,kDAAkD,CACzDwM,mBAAoB,kBAAMlS,aAAaC,QAAQ,YAEhDkS,yBACAC,QAEHR,EAAcG,KACb,IAEH5Q,qBAAU,WA2BR,OA1BIwQ,IAAeA,EAAWU,mBAC5BV,EAAWW,QAAQtF,MAAK,SAAC1I,GACvBqN,EAAWY,GAAG,kBAAkB,SAAChM,GAC/B,IAAMxJ,EAAS0B,EAAW8H,GAC1BhE,EAASxF,GACLwJ,EAAS3I,QAAUmB,IAAewH,EAAS3I,QAC7C2E,EAAS3D,EAAgB2H,EAAS3I,YAGtC+T,EAAWY,GAAG,eAAe,SAACtV,GAC5B,IAAMF,EAASF,EAAQI,GACvBsF,EAASxF,GACLE,EAAKyQ,kBAAoB/N,EAAYU,UACvCkC,EAASvD,EAAc/B,EAAKC,QAGhCyU,EAAWY,GAAG,sBAAsB,SAACtV,GACnC,IAAMF,EAASM,EAASJ,GACxBsF,EAASxF,MAEX4U,EAAWY,GAAG,6BAA6B,SAAChM,GAC1C,IAAMxJ,EAASW,EAAgB6I,GAC/BhE,EAASxF,SAIR,WACD4U,GAAcA,EAAWU,mBAC3BV,EAAWa,UAGd,CAACb,IAGF,mCACE,sBAAK7Q,UAAU,yGAAf,UACE,sBACEA,UACE,4IACgB,IAAf/B,EAAmB,UAAY,QAHpC,UAME,cAAC,GAAD,CAAQgS,OAhFhB,WACEhR,OAAOC,aAAa2G,WAAW,SAC/BgL,EAAWa,OACXpN,EAAQhI,KAAK,aA8EP,cAAC,GAAD,OAEA2B,EA8BA,qBAAK+B,UAAU,kIAAf,SACE,cAAC,GAAD,CAAY7D,KAAMT,EAAMiW,MAAK,SAACxV,GAAD,OAAUA,EAAKC,KAAO6B,SA9BnC,KAAb,OAALvC,QAAK,IAALA,OAAA,EAAAA,EAAO6G,QACL,sBAAKvC,UAAU,gJAAf,UACE,qBAAKc,IAAK8Q,GAAM5R,UAAU,iBAAiBgB,IAAI,SAC/C,uBAAMhB,UAAU,cAAhB,UACG,IADH,aAEa,IACX,sBAAMA,UAAU,+CAAhB,sBAEQ,IACR,uBANF,kDAOkD,OAElD,4BAGF,sBAAKA,UAAU,gJAAf,UACE,qBAAKc,IAAK8Q,GAAM5R,UAAU,iBAAiBgB,IAAI,SAC/C,uBAAMhB,UAAU,cAAhB,UACG,IADH,aAEa,IACX,sBAAMA,UAAU,+CAAhB,sBAEQ,IACR,uBANF,0BAO0B,gBC7IzB,OAA0B,mCCmB1B6R,OAdf,YAA8B,IAAZhU,EAAW,EAAXA,QAChB,OACE,sBAAKmC,UAAU,mFAAf,UACE,qBAAKA,UAAU,wBAAwBc,IAAKgR,GAAW9Q,IAAI,UAC3D,sBAAMhB,UAAU,6CAAhB,gBACGnC,QADH,IACGA,IAAW,uDAEd,cAAC,IAAD,CAAMkU,GAAG,SAAT,SACE,cAAC,EAAD,CAAQrT,QAAQ,2BCbT,OAA0B,uCC6G1BsT,OApGf,WACE,MAAgC9R,mBAAS,IAAzC,mBAAO+R,EAAP,KAAiBC,EAAjB,KACA,EAA0BhS,mBAAS,IAAnC,mBAAOyF,EAAP,KAAc8H,EAAd,KACA,EAAgCvN,mBAAS,IAAzC,mBAAOiS,EAAP,KAAiBC,EAAjB,KACA,EAA8BlS,oBAAS,GAAvC,mBAAOmS,EAAP,KAAgBC,EAAhB,KACMhO,EAAUC,cACV9C,EAAWC,cAEX4J,EAAUvB,KA8BhB,OA5BA1J,qBAAU,WAENiS,KADEL,IAAYE,MAKf,CAACF,EAAUE,IAuBZ,sBAAKnS,UAAU,uDAAf,UACE,qBACEc,IAAKyR,GACLvR,IAAI,QACJhB,UAAU,4CAEZ,uBACE6I,SAAU,SAAC9G,GAAD,OA7BhB,SAAeA,GACbA,EAAEkG,iBAEF,IAAM7C,EAAU,CAAE6M,WAAUE,YAC5B1E,EAAS,IAETnC,EACGtB,MAAM5E,GACN8G,MAAK,SAACzG,GACLhE,EAAS3C,KACTG,OAAOC,aAAa4Q,QAAQ,QAASrK,GACrCnB,EAAQhI,KAAK,aAEdwR,OAAM,SAACnI,GAKN8H,EAHmB,kBAAV9H,EACHA,EACA,wCAYWqE,CAAMjI,IACvB/B,UAAU,oEAFZ,UAIE,qBAAKc,IAAK8Q,GAAM5Q,IAAI,QAAQhB,UAAU,2BACtC,oBAAIA,UAAU,kEAAd,+BAIC2F,GACC,sBAAM3F,UAAU,iEAAhB,gBACG2F,QADH,IACGA,IAAS,sCAGd,sBAAK3F,UAAU,iBAAf,UACE,uBAAOiJ,QAAQ,WAAWjJ,UAAU,6BAApC,uCAGA,uBACEiC,MAAOgQ,EACPnQ,SAAU,SAACC,GAAD,OAAOmQ,EAAYnQ,EAAEC,OAAOC,QACtC7F,GAAG,WACHwF,KAAK,OACL5B,UAAU,qJAGd,sBAAKA,UAAU,iBAAf,UACE,uBAAOiJ,QAAQ,WAAWjJ,UAAU,6BAApC,sBAGA,uBACEiC,MAAOkQ,EACPrQ,SAAU,SAACC,GAAD,OAAOqQ,EAAYrQ,EAAEC,OAAOC,QACtCL,KAAK,WACLxF,GAAG,WACH4D,UAAU,gJAId,cAAC,EAAD,CACEU,UAAW2R,EACX3T,QAAQ,QACRsB,UAAU,wBAEZ,sBAAKA,UAAU,cAAf,0BACgB,IACd,cAAC,IAAD,CAAM+R,GAAG,YAAY/R,UAAU,2BAA/B,mCCpGK,OAA0B,sCCmB1BwS,OAdf,YAAgC,IAAZ3U,EAAW,EAAXA,QAClB,OACE,sBAAKmC,UAAU,mFAAf,UACE,qBAAKA,UAAU,wBAAwBc,IAAK2R,GAAazR,IAAI,UAC7D,sBAAMhB,UAAU,8CAAhB,gBACGnC,QADH,IACGA,IAAW,wBAEd,cAAC,IAAD,CAAMkU,GAAG,SAAT,SACE,cAAC,EAAD,CAAQrT,QAAQ,2B,4BC+QTgU,OAjRf,WAAqB,IAAD,YAClB,EAAkCxS,oBAAS,GAA3C,mBAAOyS,EAAP,KAAkBC,EAAlB,KACA,EAAgD1S,oBAAS,GAAzD,mBAAO2S,EAAP,KAAyBC,EAAzB,KACA,EAA0B5S,mBAAS,CACjCzB,QAAQ,EACRC,QAAS,GACTC,MAAO,iBAHT,mBAAOH,EAAP,KAAcI,EAAd,KAMM0F,EAAUC,cACV+G,EAAUvB,KAGVgJ,EAASC,OAAaC,MAAM,CAChC/I,UAAW8I,OAAaE,SAAS,0BACjC/I,SAAU6I,OAAaE,SAAS,yBAChC3T,SAAUyT,OAEPE,SAAS,yBACTC,IAAI,EAAG,oCACPC,IAAI,GAAI,oCACRC,KACC,gBACA,gDACA,SAACpR,GACC,OAAOqR,GACLrR,EACA,mDAILoR,KACC,iBACA,6BACA,SAACpR,GAAD,OAAY4Q,KAEhBU,MAAOP,OAEJE,SAAS,qBACTG,KAAK,aAAc,oBAAoB,SAACpR,GACvC,OAAOqR,GACLrR,EACA,uDAGNkQ,SAAUa,OAEPE,SAAS,wBACTG,KACC,gBACA,qGACA,SAACpR,GACC,OAAOqR,GACLrR,EACA,iEAIRuR,gBAAiBR,OAEdE,SAAS,gCACTG,KACC,uBACA,iDACA,SAACG,GACC,OAAOA,IAAoBC,EAAMtB,cAMzC,EAQIuB,aAAQ,CACVC,SAAUC,aAAYb,GACtBc,cAAe,KATf5J,EADF,EACEA,SACA6J,EAFF,EAEEA,aACAC,EAHF,EAGEA,QACAtG,EAJF,EAIEA,SACAuG,EALF,EAKEA,YACAC,EANF,EAMEA,MACanO,EAPf,EAOEoO,UAAapO,OAKT2N,EAAQU,aAAS,CACrBJ,YAoEF,OAjEA1T,qBAAU,WACRiL,EAAQlB,oBAAoBqJ,EAAMlU,UAAU2M,MAAK,SAACzG,GAC5CA,EAAS2O,UACX3G,EACE,WACA,CACE7L,KAAM,WACN/D,QAAQ,aAAD,OAAe4V,EAAMlU,SAArB,uBAET,CAAE8U,aAAa,IAEjBvB,GAAoB,KAEpBkB,EAAY,YACZlB,GAAoB,SAGvB,CAACW,EAAMlU,WAEVc,qBAAU,YACS,WAAO,IAAD,OAEnB,UAAAoT,EAAMvJ,iBAAN,eAAiB5G,UAAjB,UACAmQ,EAAMtJ,gBADN,aACA,EAAgB7G,UADhB,UAEAmQ,EAAMlU,gBAFN,aAEA,EAAgB+D,SAChBmQ,EAAMF,OACNE,EAAMtB,UACNsB,EAAMD,gBAGNZ,GAAa,GAGfA,GAAa,GAGf9Q,KACC,CAAC2R,IA6BF,qCACE,cAAC,EAAD,CACE9U,MAAOH,EAAMG,MACbF,OAAQD,EAAMC,OACdC,QAASF,EAAME,QACf8B,QAAS,WACP5B,EAAS,CAAEH,QAAQ,IACnB6F,EAAQhI,KAAK,aAGjB,sBAAK0D,UAAU,4DAAf,UACE,qBACEc,IAAKyR,GACLvR,IAAI,QACJhB,UAAU,4CAEZ,uBACE6I,SAAUiL,GA3CD,SAACpV,GAChB4M,EAAQrB,SAASvL,GAASwN,MAAK,SAACzG,IAelC,SAAmB9G,EAAOD,GAMxBE,EALc,CACZH,QAAQ,EACRE,MAAOA,EACPD,QAASA,IAlBTyN,CACE,UACA,wEACuC,IACrC,cAAC,IAAD,CAAMnM,UAAU,2BAA2B+R,GAAG,SAA9C,oBAFF,SAQFkC,EAAM,UAgCFjU,UAAU,sFAFZ,UAIE,qBAAKc,IAAK8Q,GAAM5Q,IAAI,QAAQhB,UAAU,2BACtC,oBAAIA,UAAU,kEAAd,iCAGA,sBAAKA,UAAU,2CAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,wBAAOiJ,QAAQ,WAAWjJ,UAAU,yBAApC,wBACa,sBAAMA,UAAU,eAAhB,kBAEb,iDACMiK,EAAS,cADf,IAEErI,KAAK,OACL5B,UAAU,8IAEZ,qBAAKA,UAAU,uBAAf,mBACG8F,EAAOoE,iBADV,aACG,EAAkBrM,aAGvB,sBAAKmC,UAAU,mCAAf,UACE,wBAAOiJ,QAAQ,WAAWjJ,UAAU,yBAApC,uBACY,sBAAMA,UAAU,eAAhB,kBAEZ,iDACMiK,EAAS,aADf,IAEErI,KAAK,OACL5B,UAAU,mJAEZ,qBAAKA,UAAU,uBAAf,mBACG8F,EAAOqE,gBADV,aACG,EAAiBtM,gBAIxB,sBAAKmC,UAAU,iBAAf,UACE,wBAAOiJ,QAAQ,WAAWjJ,UAAU,yBAApC,sBACW,sBAAMA,UAAU,eAAhB,kBAEX,iDACMiK,EAAS,aADf,IAEErI,KAAK,OACL5B,UAAU,mJAEZ,qBAAKA,UAAU,uBAAf,mBACG8F,EAAOvG,gBADV,aACG,EAAiB1B,aAGtB,sBAAKmC,UAAU,iBAAf,UACE,wBAAOiJ,QAAQ,QAAQjJ,UAAU,yBAAjC,mBACQ,sBAAMA,UAAU,eAAhB,kBAER,iDACMiK,EAAS,UADf,IAEErI,KAAK,OACL5B,UAAU,mJAEZ,qBAAKA,UAAU,uBAAf,mBAAuC8F,EAAOyN,aAA9C,aAAuC,EAAc1V,aAGvD,sBAAKmC,UAAU,iBAAf,UACE,wBAAOiJ,QAAQ,WAAWjJ,UAAU,yBAApC,sBACW,sBAAMA,UAAU,eAAhB,kBAEX,+CACE4B,KAAK,YACDqI,EAAS,aAFf,IAGEjK,UAAU,8IAEZ,qBAAKA,UAAU,uBAAf,mBACG8F,EAAOqM,gBADV,aACG,EAAiBtU,aAGtB,sBAAKmC,UAAU,iBAAf,UACE,wBAAOiJ,QAAQ,kBAAkBjJ,UAAU,yBAA3C,8BACmB,sBAAMA,UAAU,eAAhB,kBAEnB,+CACE4B,KAAK,YACDqI,EAAS,oBAFf,IAGEjK,UAAU,8IAEZ,qBAAKA,UAAU,uBAAf,mBACG8F,EAAO0N,uBADV,aACG,EAAwB3V,aAG7B,cAAC,EAAD,CACE6C,UAAWiS,EACXjU,QAAQ,UACRsB,UAAU,wBAEZ,sBAAKA,UAAU,cAAf,8BACoB,IAClB,cAAC,IAAD,CAAM+R,GAAG,SAAS/R,UAAU,2BAA5B,kCAYZ,SAASsT,GAAWrR,EAAOqS,GACzB,GAAIrS,GAASqS,EAGX,OAFc,IAAIC,OAAOD,GACPjB,KAAKpR,GCjSZ,WAA0B,kCCmB1BuS,OAdf,YAAmC,IAAZ3W,EAAW,EAAXA,QACrB,OACE,sBAAKmC,UAAU,mFAAf,UACE,qBAAKA,UAAU,wBAAwBc,IAAK2T,GAAUzT,IAAI,UAC1D,sBAAMhB,UAAU,6CAAhB,gBACGnC,QADH,IACGA,IAAW,gCAEd,cAAC,IAAD,CAAMkU,GAAG,SAAT,SACE,cAAC,EAAD,CAAQrT,QAAQ,2B,iBCmCTgW,OAjCf,WACE,IAAMpW,EAAYkD,aAAY,SAACxF,GAAD,OAAWA,EAAM0D,IAAIpB,aAC7CE,EAAQgD,aAAY,SAACxF,GAAD,OAAWA,EAAM0D,IAAIlB,SACzCiD,EAAWC,cAKjB,OACE,mCACE,eAAC,IAAD,CAAeiT,SAAU/P,WAAzB,UACE,cAAC,EAAD,CAAQnG,OAAQH,EAAW0B,UAAU,SACrC,cAAC,EAAD,CACErB,MAAOH,EAAMG,MACbF,OAAQD,EAAMC,OACdC,QAASF,EAAME,QACf8B,QAXR,WACEiB,EAAS7C,EAAS,CAAEH,QAAQ,QAaxB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmW,KAAK,SAASC,UAAW7C,KAChC,cAAC,IAAD,CAAO4C,KAAK,YAAYC,UAAWnC,KACnC,cAAC,IAAD,CAAOkC,KAAK,UAAUC,UAAWhD,KACjC,cAAC,IAAD,CAAO+C,KAAK,eAAeC,UAAWL,KACtC,cAACM,GAAD,CAAcF,KAAK,SAASC,UAAWjE,KACvC,cAACkE,GAAD,CAAcC,OAAK,EAACH,KAAK,IAAIC,UAAWjE,KACxC,cAAC,IAAD,CAAOgE,KAAK,IAAIC,UAAWrC,cASrC,SAASsC,GAAT,GAA0D,IAAvBE,EAAsB,EAAjCH,UAAyBI,EAAQ,kBACnDC,IAAUjW,OAAOC,aAAaC,QAAQ,SAE1C,OACE,cAAC,IAAD,2BACM8V,GADN,IAEEE,OAAQ,SAACC,GAAD,OACM,IAAZF,EACE,cAACF,EAAD,eAAeI,IAEf,cAAC,IAAD,CACErD,GAAI,CAAEsD,SAAU,SAAUrZ,MAAO,CAAEsZ,KAAMF,EAAMG,iB,OCpD3DC,IAASL,OACP,cAAC,IAAMM,WAAP,UACE,cAAC,IAAD,CAAU5V,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJ6I,SAASgN,eAAe,W","file":"static/js/main.a91f67d3.chunk.js","sourcesContent":["import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst chats = createSlice({\r\n  name: \"chats\",\r\n  initialState: [],\r\n  reducers: {\r\n    addChat: (state, action) => {\r\n      var isExists = state.some((chat) => chat.id === action.payload.id);\r\n      if (!isExists) {\r\n        state.push(action.payload);\r\n      }\r\n    },\r\n    editChat: (state, action) => {\r\n      const updatedChat = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChat.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].name = updatedChat.name;\r\n        state[index].participants = updatedChat.participants;\r\n      }\r\n    },\r\n    editGroupAvatar: (state, action) => {\r\n      const updatedChatId = action.payload.chatId;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].groupAvatarUrl = action.payload?.groupAvatarUrl;\r\n      }\r\n    },\r\n    appendMessageToChat: (state, action) => {\r\n      const chatToAppend = action.payload;\r\n      const messagesToAppend = chatToAppend?.messages;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatToAppend.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].totalRecords = chatToAppend.totalRecords;\r\n        state[index].limit = chatToAppend.limit;\r\n        state[index].page = chatToAppend.page;\r\n        state[index].pageCount = chatToAppend.pageCount;\r\n        if (chatToAppend.keyword) {\r\n          state[index].messages = messagesToAppend;\r\n        } else {\r\n          state[index].messages =\r\n            state[index].messages.concat(messagesToAppend);\r\n        }\r\n      }\r\n    },\r\n    refreshChats: (state, action) => {\r\n      state = action.payload ?? [];\r\n      return state;\r\n    },\r\n    addMessage: (state, action) => {\r\n      const newMessage = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === newMessage.chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].messages.push(newMessage?.message);\r\n      }\r\n    },\r\n    addNotification: (state, action) => {\r\n      const chatId = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].numOfUnreadMessages += 1;\r\n      }\r\n    },\r\n    readMessage: (state, action) => {\r\n      const chatId = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].numOfUnreadMessages = 0;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst selectedId = createSlice({\r\n  name: \"selectedId\",\r\n  initialState: 0,\r\n  reducers: {\r\n    setSelectedId: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  chats: chats.reducer,\r\n  selectedId: selectedId.reducer,\r\n});\r\n\r\nexport const {\r\n  addChat,\r\n  editChat,\r\n  refreshChats,\r\n  addMessage,\r\n  appendMessageToChat,\r\n  editGroupAvatar,\r\n  readMessage,\r\n  addNotification,\r\n} = chats.actions;\r\nexport const { setSelectedId } = selectedId.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst isLoading = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst popup = createSlice({\r\n  name: \"popup\",\r\n  initialState: {\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  },\r\n  reducers: {\r\n    setPopup: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  isLoading: isLoading.reducer,\r\n  popup: popup.reducer,\r\n});\r\n\r\nexport const { setIsLoading } = isLoading.actions;\r\nexport const { setPopup } = popup.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nconst currentUser = createSlice({\r\n  name: \"currentUser\",\r\n  initialState: {},\r\n  reducers: {\r\n    getCurrentUser: (state, action) => {\r\n      var user = decodeCurrentUser();\r\n      if (user) {\r\n        state = user;\r\n        return state;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      if (action.payload.userName) {\r\n        state = action.payload;\r\n        return state;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  currentUser: currentUser.reducer,\r\n});\r\n\r\nexport const { getCurrentUser, updateUser } = currentUser.actions;\r\nexport default reducer;\r\n\r\nfunction decodeCurrentUser() {\r\n  var token = window.localStorage.getItem(\"token\");\r\n  if (token) {\r\n    const user = jwt(token);\r\n    return user;\r\n  }\r\n  return false;\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport chatReducer from \"app/chatSlice\";\r\nimport appReducer from \"app/appSlice\";\r\nimport userReducer from \"app/userSlice\";\r\n\r\nconst rootReducer = {\r\n  chats: chatReducer,\r\n  app: appReducer,\r\n  users: userReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\n// import Logo from \"logo.png\";\r\n\r\nconst Loader = ({ className, isOpen = true }) => {\r\n  let circleCommonClasses =\r\n    \"h-3 w-3 bg-gradient-to-br from-green-300 to-green-600 shadow-md rounded-full\";\r\n  const [isEnding, setIsEnding] = useState(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsEnding(true);\r\n    };\r\n  }, []);\r\n  return (\r\n    isOpen && (\r\n      <>\r\n        <div\r\n          className={\r\n            \"z-50  animate-fade flex flex-col h-screen w-screen justify-center items-center fixed transition-all duration-200 bg-white dark:bg-dark-secondary dark:bg-opacity-50 bg-opacity-50\" +\r\n            (isEnding ? \" hidden\" : \"\") +\r\n            (\" \" + className ?? \"\")\r\n          }\r\n        >\r\n          {/* <img\r\n            src={Logo}\r\n            className=\"animate-bounce w-20 h-20 mb-10\"\r\n            alt=\"logo\"\r\n          /> */}\r\n          <div className=\"flex justify-center items-center transition-all duration-200\">\r\n            <div className={`${circleCommonClasses} mr-3 animate-bounce`}></div>\r\n            <div\r\n              className={`${circleCommonClasses} mr-3 animate-bounce200`}\r\n            ></div>\r\n            <div className={`${circleCommonClasses} animate-bounce400`}></div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nButton.propTypes = {\r\n  content: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nfunction Button({\r\n  outline = false,\r\n  content,\r\n  className,\r\n  onClick,\r\n  onBlur,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n        className={\r\n          \"px-4 py-2 rounded-lg transition-all text-sm md:text-base duration-200 disabled:opacity-50 outline-none z-0 select-none \" +\r\n          \" \" +\r\n          (outline\r\n            ? \"ring-inset ring-1 ring-green-500 bg-white dark:bg-transparent dark:hover:bg-green-500 text-green-500 hover:text-white hover:bg-green-400 active:bg-green-500\"\r\n            : \"bg-gradient-to-br from-green-400 to-green-600 text-white active:from-green-500 active:to-green-600  \") +\r\n          \" \" +\r\n          (className ?? \"\") +\r\n          \" \" +\r\n          (!disabled ? \"active:scale-95 active:transform\" : \"cursor-default\")\r\n        }\r\n      >\r\n        {content}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nPopup.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nfunction Popup({\r\n  title = \"Notification\",\r\n  isOpen,\r\n  content = \"Oops! Something went wrong!\",\r\n  onClick,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50 z-50\">\r\n        <div className=\"bg-white dark:bg-dark-secondary py-8 px-8 w-full md:w-2/3 lg:w-1/2 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-dark-txt\">\r\n            {title}\r\n          </h3>\r\n          <span className=\"break-words dark:text-dark-txt\">{content}</span>\r\n          <div className=\"w-full flex justify-end\">\r\n            <Button content=\"Close\" onClick={onClick} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.ae67bd1e.jpg\";","import DefaultAvatar from \"assets/img/default-avatar.jpg\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nImageCircle.propTypes = {\r\n  src: PropTypes.string,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nfunction ImageCircle({\r\n  src = DefaultAvatar,\r\n  className = \"\",\r\n  alt = \"Avatar\",\r\n  size = \"md\",\r\n}) {\r\n  const xsSize = \"h-5 w-5 md:h-6 md:w-6\";\r\n  const smSize = \"h-6 w-6 md:h-8 md:w-8\";\r\n  const mdSize = \"h-10 w-10 md:h-12 md:w-12\";\r\n  const lgSize = \"h-14 w-14 md:h-16 md:w-16\";\r\n  const xlSize = \"h-22 w-22 md:h-24 md:w-24\";\r\n  const fullSize = \"h-full w-full\";\r\n  var realSize;\r\n  switch (size) {\r\n    case \"xs\":\r\n      realSize = xsSize;\r\n      break;\r\n    case \"sm\":\r\n      realSize = smSize;\r\n      break;\r\n    case \"lg\":\r\n      realSize = lgSize;\r\n      break;\r\n    case \"xl\":\r\n      realSize = xlSize;\r\n      break;\r\n    case \"full\":\r\n      realSize = fullSize;\r\n      break;\r\n    default:\r\n      realSize = mdSize;\r\n  }\r\n  return (\r\n    <>\r\n      <img\r\n        className={\r\n          realSize +\r\n            \" \" +\r\n            \"select-none bg-white rounded-full object-cover flex-shrink-0\" +\r\n            \" \" +\r\n            className ?? \"\"\r\n        }\r\n        src={!src || src === \"\" ? DefaultAvatar : src}\r\n        alt={alt}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageCircle;\r\n","const constants = {\r\n  chatType: {\r\n    PRIVATE: 1,\r\n    GROUP: 2,\r\n  },\r\n  NO_NAME_GROUP: \"No name\",\r\n};\r\n\r\nexport default constants;\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction ChatList() {\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  function handleClick(id) {\r\n    if (id !== selectedId) {\r\n      const action = setSelectedId(id);\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"search\"\r\n        className=\"my-3 rounded-3xl bg-gray-100 px-4 py-2 focus:ring-2 focus:ring-green-400 focus:ring-opacity-50 outline-none transition-all duration-200 w-full dark:bg-dark-secondary dark:text-white\"\r\n        placeholder=\"Search chat\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n      />\r\n      <div className=\"h-full overflow-x-hidden space-y-2 overflow-y-auto pr-2 pb-48 md:pb-0\">\r\n        {chats &&\r\n          getCurrentChats(chats, keyword).map((chat, index) => {\r\n            const currentUserName = currentUser.userName;\r\n\r\n            // check current user still exist in chat (remove participant case)\r\n            var isValid = chat?.participants.some(\r\n              (x) => x.userName === currentUserName,\r\n            );\r\n            if (!isValid) {\r\n              return;\r\n            }\r\n\r\n            const friend =\r\n              chat?.participants.length > 1\r\n                ? chat?.participants\r\n                    ?.filter((x) => x.userName !== currentUserName)\r\n                    .shift()\r\n                : currentUser;\r\n            let lastMessage = {};\r\n            if (chat.messages?.length !== 0) {\r\n              lastMessage = chat.messages?.reduce((a, b) =>\r\n                a.dateCreated > b.dateCreated ? a : b,\r\n              );\r\n            }\r\n            return (\r\n              <div\r\n                key={Date.now() + index}\r\n                className={\r\n                  \"relative select-none w-full h-20 flex flex-start cursor-pointer hover:bg-gray-100 p-2 rounded-lg transition-all duration-150 ease-in dark:hover:bg-dark-secondary dark:text-dark-txt\" +\r\n                  \" \" +\r\n                  (selectedId === chat.id\r\n                    ? \"bg-gray-100 dark:bg-dark-secondary\"\r\n                    : \"\")\r\n                }\r\n                onClick={() => handleClick(chat.id)}\r\n              >\r\n                {chat.numOfUnreadMessages > 0 && (\r\n                  <span className=\"w-6 h-6 absolute right-4 top-1/2 transform translate-y-1/3 text-xs font-bold p-1 bg-green-500 dark:bg-green-600 text-white rounded-full  text-center align-middle\">\r\n                    {chat.numOfUnreadMessages > 9\r\n                      ? \"9+\"\r\n                      : chat.numOfUnreadMessages}\r\n                  </span>\r\n                )}\r\n                <ImageCircle\r\n                  src={\r\n                    chat?.type === constants.chatType.PRIVATE\r\n                      ? friend?.avatarUrl\r\n                      : chat?.groupAvatarUrl\r\n                  }\r\n                  size=\"lg\"\r\n                />\r\n\r\n                <div className=\"font-primary flex flex-col px-3 py-2 justify-between truncate w-full\">\r\n                  <div className=\"flex justify-between items-center w-full min-w-0 space-x-3\">\r\n                    <span\r\n                      className={\r\n                        \"text-gray-800 truncate dark:text-dark-txt\" +\r\n                        \" \" +\r\n                        (chat.numOfUnreadMessages > 0 ? \"font-bold\" : \"\")\r\n                      }\r\n                    >\r\n                      {chat?.type === constants.chatType.PRIVATE\r\n                        ? friend?.fullName\r\n                        : chat?.name ?? constants.NO_NAME_GROUP}\r\n                    </span>\r\n                    <span className=\"text-sm text-gray-500 truncate flex-shrink-0\">\r\n                      {moment(\r\n                        new Date(lastMessage.dateCreated ?? chat.dateCreated),\r\n                        \"YYYYMMDD\",\r\n                      )\r\n                        .fromNow()\r\n                        ?.replace(\"ago\", \"\")\r\n                        ?.trim()}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex\">\r\n                    <span\r\n                      className={\r\n                        \"mr-2 text-sm text-gray-500 truncate overflow-hidden flex-grow\" +\r\n                        \" \" +\r\n                        (chat.numOfUnreadMessages > 0 ? \"font-bold\" : \"\")\r\n                      }\r\n                    >\r\n                      {lastMessage.content ?? \"\"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n\r\nfunction getCurrentChats(chats, keyword) {\r\n  var result = sortChat(chats);\r\n  result = searchChat(result, keyword);\r\n  return result;\r\n}\r\n\r\nfunction sortChat(chats) {\r\n  if (chats) {\r\n    return [...chats].sort((chatA, chatB) => {\r\n      let lastMessageA = {};\r\n      let lastMessageB = {};\r\n      // check if chat no message => return date created of chat\r\n      if (chatA.messages?.length !== 0) {\r\n        lastMessageA = chatA.messages?.reduce((a, b) => {\r\n          return a.dateCreated > b.dateCreated ? a : b;\r\n        });\r\n      } else {\r\n        lastMessageA.dateCreated = chatA.dateCreated;\r\n      }\r\n      if (chatB.messages?.length !== 0) {\r\n        lastMessageB = chatB.messages?.reduce((a, b) =>\r\n          a.dateCreated > b.dateCreated ? a : b,\r\n        );\r\n      } else {\r\n        lastMessageB.dateCreated = chatB.dateCreated;\r\n      }\r\n\r\n      return lastMessageA?.dateCreated < lastMessageB?.dateCreated ? 1 : -1;\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchChat(chats, keyword) {\r\n  if (chats) {\r\n    return chats.filter((chat) => {\r\n      let isValid = chat?.participants.some((x) => {\r\n        if (\r\n          x.fullName.toLowerCase().includes(keyword.toLowerCase()) ||\r\n          x?.userName.toLowerCase().includes(keyword.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return (\r\n        isValid || chat?.name?.toLowerCase().includes(keyword.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info-icon.b4879a5e.svg\";","export default __webpack_public_path__ + \"static/media/left-arrow-icon.07714e5b.svg\";","export default __webpack_public_path__ + \"static/media/emoji.21d0cbf4.svg\";","export default __webpack_public_path__ + \"static/media/image-icon.c8ad9f46.svg\";","export default __webpack_public_path__ + \"static/media/send-icon.666dadc9.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nClickableIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nfunction ClickableIcon({ className, icon, iconClass, alt, onClick, onBlur }) {\r\n  return (\r\n    <>\r\n      <div\r\n        onBlur={onBlur}\r\n        onClick={onClick}\r\n        className={\r\n          \"p-1 rounded-full hover:bg-gray-200 active:bg-gray-300 dark:hover:bg-dark-hover dark:border-dark-third transition-all duration-200 cursor-pointer ease-in dark:active:bg-dark-third active:scale-90 active:transform select-none flex-shrink-0 \" +\r\n          (className ?? \"\")\r\n        }\r\n      >\r\n        {icon ? (\r\n          <img\r\n            alt={alt ?? \"Clickable Icon\"}\r\n            src={icon}\r\n            onClick={onClick}\r\n            className=\"w-full\"\r\n          />\r\n        ) : (\r\n          <i\r\n            className={\r\n              \"text-center align-middle text-xl text-black dark:text-dark-txt w-7 h-7 \" +\r\n              \" \" +\r\n              iconClass\r\n            }\r\n          ></i>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ClickableIcon;\r\n","import { setIsLoading, setPopup } from \"app/appSlice\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useApi() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const Api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    timeout: 300000,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n  });\r\n\r\n  Api.interceptors.request.use(async (config) => {\r\n    var token = window.localStorage.getItem(\"token\");\r\n\r\n    var newConfig = config;\r\n    if (token) {\r\n      newConfig = {\r\n        ...config,\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n    }\r\n    return newConfig;\r\n  });\r\n  Api.interceptors.response.use(\r\n    (response) => {\r\n      dispatch(setIsLoading(false));\r\n\r\n      if (response && response.data) {\r\n        return response.data;\r\n      }\r\n      return response;\r\n    },\r\n    (error) => {\r\n      if (error.response) {\r\n        dispatch(setIsLoading(false));\r\n\r\n        switch (error.response.status) {\r\n          case 401:\r\n            window.localStorage.removeItem(\"token\");\r\n            history.push(\"/login\");\r\n            break;\r\n          case 403:\r\n            history.push(\"/ForBid\");\r\n            break;\r\n          case 500:\r\n            history.push(\"/ServerError\");\r\n            break;\r\n          default:\r\n            var message =\r\n              typeof error.response?.data === \"string\"\r\n                ? error.response?.data\r\n                : \"Oops, something went wrong! Please contact administrator.\";\r\n\r\n            // for model binding error\r\n            message = error.response?.data?.errors\r\n              ? objToString(error.response?.data?.errors)\r\n              : message;\r\n\r\n            openPopup(\"Notification\", message);\r\n            return Promise.reject(error.response?.data);\r\n        }\r\n      }\r\n      return Promise.reject(error?.response?.data);\r\n    },\r\n  );\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return Api;\r\n}\r\n\r\n// utils function for model binding convert\r\nfunction objToString(obj) {\r\n  let str = \"\";\r\n  for (const val of Object.values(obj)) {\r\n    str += `${val.toString()}, `;\r\n  }\r\n  str = str.substring(0, str.length - 2);\r\n  return str;\r\n}\r\n","import { setIsLoading } from \"app/appSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useApi from \"./useApi.js\";\r\n\r\nconst baseApiUrl = \"/chats\";\r\n\r\nexport default function useChatApi() {\r\n  const Api = useApi();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatApi = {\r\n    getAll: () => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}`;\r\n      return Api.get(url);\r\n    },\r\n    getById: (chatId, params) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}`;\r\n      return Api.get(url, { params });\r\n    },\r\n    sendMessage: (chatId, content) => {\r\n      const url = `${baseApiUrl}/${chatId}/send`;\r\n      return Api.post(url, content);\r\n    },\r\n    readMessage: (chatId) => {\r\n      const url = `${baseApiUrl}/${chatId}/read`;\r\n      return Api.patch(url);\r\n    },\r\n    sendImage: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}/sendImage`;\r\n\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.post(url, content);\r\n    },\r\n    updateGroupAvatar: (chatId, content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}/avatar`;\r\n\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.patch(url, content);\r\n    },\r\n    createGroupChat: (content) => {\r\n      content.groupName = content?.groupName?.substring(0, 99);\r\n\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/group`;\r\n      return Api.post(url, content);\r\n    },\r\n    updateGroupChat: (chatId, content) => {\r\n      content.newGroupName = content?.newGroupName?.substring(0, 99);\r\n\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/${chatId}`;\r\n      return Api.patch(url, content);\r\n    },\r\n    createPrivateChat: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/private`;\r\n      return Api.post(url, content);\r\n    },\r\n  };\r\n  return chatApi;\r\n}\r\n","import EmojiIcon from \"assets/icons/emoji.svg\";\r\nimport ImageIcon from \"assets/icons/image-icon.svg\";\r\nimport SendIconNormal from \"assets/icons/send-icon.svg\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nChatInput.propTypes = {\r\n  chatId: PropTypes.number,\r\n};\r\n\r\nfunction ChatInput({ chatId }) {\r\n  const [content, setContent] = useState(\"\");\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [isOpenEmoji, setIsOpenEmoji] = useState(false);\r\n  const ref = useRef();\r\n\r\n  const chatApi = useChatApi();\r\n\r\n  async function onSendMessage(e) {\r\n    e.preventDefault();\r\n    if (!content) {\r\n      return;\r\n    }\r\n    setContent(\"\");\r\n\r\n    var request = { content };\r\n    await chatApi.sendMessage(chatId, request);\r\n  }\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject);\r\n    if (emojiObject?.emoji) {\r\n      setContent(content + emojiObject?.emoji);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenEmoji && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenEmoji(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenEmoji]);\r\n\r\n  async function sendImage(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Image\", file);\r\n\r\n    await chatApi.sendImage(chatId, formData);\r\n  }\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => onSendMessage(e)}\r\n        className=\"flex justify-between items-center space-x-1 pl-4 pr-2 md:pr-6 z-0\"\r\n      >\r\n        <div className=\"relative w-full flex\">\r\n          <input\r\n            id=\"imageFile\"\r\n            type=\"file\"\r\n            hidden\r\n            accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n            onChange={sendImage}\r\n          />\r\n          <label htmlFor=\"imageFile\">\r\n            <ClickableIcon className=\"h-10 w-10 p-2 mr-2\" icon={ImageIcon} />\r\n          </label>\r\n          <input\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Aa\"\r\n            className=\"bg-gray-200 dark:bg-dark-secondary rounded-3xl w-full py-2 px-4 pr-12 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 relative\"\r\n          />\r\n          <div ref={ref} position=\"relative\">\r\n            <ClickableIcon\r\n              className=\"absolute h-10 w-10 p-2 right-1 top-0\"\r\n              icon={EmojiIcon}\r\n              onClick={() => setIsOpenEmoji(!isOpenEmoji)}\r\n            />\r\n            <div\r\n              className={\r\n                \"animate-fade absolute right-0 bottom-full \" +\r\n                \" \" +\r\n                (isOpenEmoji ? \"visible\" : \"invisible\")\r\n              }\r\n            >\r\n              <Picker onEmojiClick={onEmojiClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button>\r\n          <ClickableIcon\r\n            disableAutoFocus\r\n            icon={SendIconNormal}\r\n            className=\"w-12 h-12 p-3\"\r\n          />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nConfirmModal.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  confirmButtonTitle: PropTypes.string,\r\n  confirmButtonAction: PropTypes.func,\r\n};\r\n\r\nfunction ConfirmModal({\r\n  title,\r\n  isOpen,\r\n  content = \"Are you sure?\",\r\n  closeAction,\r\n  confirmButtonTitle,\r\n  confirmButtonAction,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 dark:bg-dark-primary dark:bg-opacity-50 bg-opacity-30 z-50\">\r\n        <div className=\"bg-white dark:bg-dark-secondary dark:border-dark-third py-8 px-8 w-full md:w-2/3 lg:w-1/2 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-dark-txt\">\r\n            {title !== \"\" ? title : \"Notification\"}\r\n          </h3>\r\n          <span className=\"break-words dark:text-dark-txt\">{content}</span>\r\n          <div className=\"w-full flex justify-end space-x-2\">\r\n            <Button outline content=\"No\" onClick={closeAction} />\r\n            <Button\r\n              content={confirmButtonTitle ?? \"Ok\"}\r\n              onClick={confirmButtonAction}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import { setIsLoading } from \"app/appSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useApi from \"./useApi.js\";\r\n\r\nconst baseApiUrl = \"/users\";\r\n\r\nexport default function useUserApi() {\r\n  const Api = useApi();\r\n  const dispatch = useDispatch();\r\n\r\n  const userApi = {\r\n    login: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/login`;\r\n      return Api.post(url, content);\r\n    },\r\n    register: (content) => {\r\n      content.firstName = content?.firstName?.substring(0, 49);\r\n      content.lastName = content?.lastName?.substring(0, 49);\r\n\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}/register`;\r\n      return Api.post(url, content);\r\n    },\r\n    checkUserNameExists: (userName) => {\r\n      if (userName) {\r\n        const url = `${baseApiUrl}/${userName}/isExists`;\r\n        return Api.get(url);\r\n      }\r\n      return Promise.reject();\r\n    },\r\n    getFriendList: () => {\r\n      const url = `${baseApiUrl}`;\r\n      return Api.get(url);\r\n    },\r\n    getCurrentUser: () => {\r\n      const url = `${baseApiUrl}/current`;\r\n      return Api.get(url);\r\n    },\r\n    updateUser: (content) => {\r\n      dispatch(setIsLoading(true));\r\n      const url = `${baseApiUrl}`;\r\n      Api.interceptors.request.use(async (config) => {\r\n        var token = window.localStorage.getItem(\"token\");\r\n        var newConfig = {};\r\n        if (token) {\r\n          newConfig = {\r\n            ...config,\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          };\r\n        }\r\n        return newConfig;\r\n      });\r\n      return Api.put(url, content);\r\n    },\r\n  };\r\n  return userApi;\r\n}\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport Button from \"components/Button\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport Popup from \"components/Popup\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction EditChat({ isOpen, setIsOpen, chat }) {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  const [groupName, setGroupName] = useState(chat.name);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const [isValidButton, setIsValidButton] = useState(false);\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [selectedFriendList, setSelectedFriendList] = useState(\r\n    chat.participants,\r\n  );\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setIsValidButton(groupName?.trim() ? true : false);\r\n  }, [groupName]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setSelectedFriendList(chat.participants);\r\n    setGroupName(chat.name);\r\n  }, [chat]);\r\n\r\n  async function handleEditChat() {\r\n    var currentParticipantUserNames = chat?.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantFullNamesToAdd = [];\r\n    var participantFullNamesToRemove = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedFriendList.forEach((user) => {\r\n      if (!currentParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToAdd.push(user.fullName);\r\n      }\r\n    });\r\n    chat?.participants.forEach((user) => {\r\n      if (!selectedParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToRemove.push(user.fullName);\r\n        participantUserNamesToRemove.push(user.userName);\r\n      }\r\n    });\r\n\r\n    if (participantFullNamesToRemove.length > 0) {\r\n      var content = \"\";\r\n\r\n      if (\r\n        participantUserNamesToRemove.some((x) => x === currentUser.userName)\r\n      ) {\r\n        if (participantFullNamesToRemove.length === 1) {\r\n          content = \"Do you want to leave this group?\";\r\n          openModal(content);\r\n          return <></>;\r\n        } else {\r\n          content = \"Do you want to leave this group and remove \";\r\n        }\r\n      } else {\r\n        content = \"Do you want to remove \";\r\n      }\r\n\r\n      participantFullNamesToRemove.forEach((fullName, index) => {\r\n        if (participantUserNamesToRemove[index] !== currentUser.userName) {\r\n          content += `'${fullName}'`;\r\n          if (index !== participantFullNamesToRemove.length - 1) {\r\n            content += \", \";\r\n          }\r\n        }\r\n      });\r\n\r\n      content += \" from this chat?\";\r\n      openModal(content);\r\n    } else {\r\n      await submitEditChat();\r\n    }\r\n  }\r\n  async function submitEditChat() {\r\n    var currentParticipantUserNames = chat?.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantUserNamesToAdd = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedParticipantUserNames.forEach((userName) => {\r\n      if (!currentParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToAdd.push(userName);\r\n      }\r\n    });\r\n    currentParticipantUserNames.forEach((userName) => {\r\n      if (!selectedParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToRemove.push(userName);\r\n      }\r\n    });\r\n\r\n    const request = {\r\n      newGroupName: groupName,\r\n      participantUserNamesToAdd,\r\n      participantUserNamesToRemove,\r\n    };\r\n\r\n    chatApi.updateGroupChat(chat.id, request);\r\n\r\n    const isLeaveGroup = participantUserNamesToRemove.some(\r\n      (x) => x === currentUser.userName,\r\n    );\r\n    if (isLeaveGroup) {\r\n      dispatch(setSelectedId(0));\r\n    }\r\n\r\n    closeModal();\r\n    setIsOpen(false);\r\n  }\r\n\r\n  async function updateGroupAvatar(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Avatar\", file);\r\n\r\n    await chatApi.updateGroupAvatar(chat.id, formData).then((response) => {\r\n      openPopup(\"Success\", \"Update group avatar successfully!\");\r\n    });\r\n  }\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n  function openModal(content) {\r\n    setIsOpenModal(true);\r\n    setModalContent(content);\r\n  }\r\n  function closeModal() {\r\n    setIsOpenModal(false);\r\n    setModalContent(\"\");\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 py-10 z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"px-6 md:px-14 md:py-6 flex flex-col bg-white dark:bg-dark-secondary dark:border-dark-third rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300 max-h-full overflow-y-auto\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={() => setPopup({ isOpen: false })}\r\n        />\r\n        <ConfirmModal\r\n          isOpen={isOpenModal}\r\n          closeAction={() => setIsOpenModal(false)}\r\n          title=\"Are you sure?\"\r\n          content={modalContent}\r\n          confirmButtonTitle=\"Yes\"\r\n          confirmButtonAction={submitEditChat}\r\n        />\r\n        <div className=\"flex pt-6 pb-5 h-full\">\r\n          <h3 className=\"font-semibold text-lg md:text-2xl text-green-600 dark:text-green-400\">\r\n            Chat info!\r\n          </h3>\r\n        </div>\r\n        <div className=\"space-y-2 md:space-y-4\">\r\n          {chat?.type === constants.chatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold dark:text-dark-txt text-base md:text-lg\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold dark:text-dark-txt text-base md:text-lg\"\r\n                >\r\n                  Add Members\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-third border border-gray-400 border-opacity-50 rounded-lg w-full md:py-4 py-2 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none z-10 shadow-2xl \">\r\n                        <h4 className=\"font-semibold dark:text-gray-200 mb-2\">\r\n                          Friend list\r\n                        </h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-hover bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                                {friend.fullName ?? \"Unknown\"}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-dark-txt\"\r\n                >\r\n                  Members <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white border dark:bg-dark-third dark:border-dark-third border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none\">\r\n                  {[...selectedFriendList]\r\n                    .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                    .map((friend, index) => (\r\n                      <div\r\n                        onClick={() => {\r\n                          var result = [...selectedFriendList];\r\n                          var i = result.findIndex(\r\n                            (x) => x.userName === friend.userName,\r\n                          );\r\n                          if (i >= 0) {\r\n                            result.splice(i, 1);\r\n                            setSelectedFriendList(result);\r\n                          }\r\n                        }}\r\n                        key={Math.random() + index}\r\n                        className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2 dark:hover:bg-red-500 dark:bg-dark-hover bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                      >\r\n                        <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                        <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                          {friend.fullName ?? \"Unknown\"}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 mr-2 flex flex-col\">\r\n                <label\r\n                  htmlFor=\"avatar\"\r\n                  className=\"dark:text-dark-txt text-base md:text-lg font-semibold \"\r\n                >\r\n                  Group Avatar\r\n                </label>\r\n                <input\r\n                  id=\"avatar\"\r\n                  onChange={updateGroupAvatar}\r\n                  type=\"file\"\r\n                  className=\"w-full\"\r\n                  accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Created user:{\" \"}\r\n                <span className=\"font-normal\">{chat.creatorUserName}</span>\r\n              </div>\r\n              <div className=\"font-bold dark:text-dark-txt\">\r\n                Created date:{\" \"}\r\n                <span className=\"font-normal\">\r\n                  {moment(new Date(chat.dateCreated), \"YYYYMMDD\").format(\r\n                    \"MMMM Do YYYY, h:mm:ss a\",\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            {chat?.type === constants.chatType.GROUP ? (\r\n              <Button\r\n                disabled={!isValidButton}\r\n                content=\"Save\"\r\n                onClick={() => handleEditChat()}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default EditChat;\r\n","import { appendMessageToChat, readMessage, setSelectedId } from \"app/chatSlice\";\r\nimport InfoIcon from \"assets/icons/info-icon.svg\";\r\nimport LeftArrowIcon from \"assets/icons/left-arrow-icon.svg\";\r\nimport ChatInput from \"components/ChatInput\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport EditChat from \"components/EditChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useMessagePagination from \"hooks/useMessagePagination\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction ChatWindow({ chat }) {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const chatApi = useChatApi();\r\n\r\n  const [showTimeIndexes, setShowTimeIndexes] = useState([]);\r\n  const [isOpenInfoPopup, setIsOpenInfoPopup] = useState(false);\r\n\r\n  let currentUserName = currentUser.userName;\r\n\r\n  const friend =\r\n    chat?.participants.length > 1\r\n      ? chat?.participants\r\n          ?.filter((x) => x.userName !== currentUserName)\r\n          .shift()\r\n      : currentUser;\r\n\r\n  function backToChats() {\r\n    const action = setSelectedId(0);\r\n    dispatch(action);\r\n  }\r\n\r\n  function handleMessageClick(index) {\r\n    var result = [...showTimeIndexes];\r\n    const i = result.findIndex((x) => x === index);\r\n    if (i >= 0) {\r\n      result = result.filter((x) => x !== index);\r\n    } else {\r\n      result.push(index);\r\n    }\r\n    setShowTimeIndexes(result);\r\n  }\r\n\r\n  // infinity scrolling\r\n  const [page, setPage] = useState(1);\r\n  const { appendChat, hasMore, loading, error } = useMessagePagination(\r\n    chat,\r\n    page,\r\n  );\r\n  const endMessageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (chat?.numOfUnreadMessages > 0) {\r\n      chatApi.readMessage(chat.id).then((res) => {\r\n        dispatch(readMessage(chat.id));\r\n      });\r\n    }\r\n  }, [chat]);\r\n\r\n  useEffect(() => {\r\n    dispatch(appendMessageToChat(appendChat));\r\n  }, [appendChat]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (endMessageRef) {\r\n      endMessageRef.current.scrollIntoView();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chat.page < 2) {\r\n      scrollToBottom();\r\n    }\r\n  }, [chat]);\r\n\r\n  function loadMore() {\r\n    if (page < chat.pageCount) {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <EditChat\r\n        isOpen={isOpenInfoPopup}\r\n        setIsOpen={setIsOpenInfoPopup}\r\n        chat={chat}\r\n      />\r\n      <div className=\"flex flex-col w-full h-full pb-4 flex-shrink-0 min-w-0\">\r\n        {/* Header chat window */}\r\n        <div className=\"w-full border-b border-gray-300 dark:border-dark-third flex justify-between items-center md:p-3 md:px-4 p-2 px-3 flex-shrink-0 overflow-hidden\">\r\n          <div className=\"flex min-w-0 justify-start items-center space-x-3\">\r\n            <img\r\n              src={LeftArrowIcon}\r\n              alt=\"Arrow icon\"\r\n              className=\"h-5 w-5 md:hidden cursor-pointer\"\r\n              onClick={backToChats}\r\n            />\r\n            <ImageCircle\r\n              src={\r\n                chat?.groupAvatarUrl !== \"\"\r\n                  ? chat?.groupAvatarUrl\r\n                  : friend?.avatarUrl\r\n              }\r\n            />\r\n            <span className=\"text-lg font-semibold dark:text-dark-txt truncate overflow-hidden\">\r\n              {chat?.type === constants.chatType.PRIVATE\r\n                ? friend?.fullName\r\n                : chat?.name ?? constants.NO_NAME_GROUP}\r\n            </span>\r\n          </div>\r\n          <ClickableIcon\r\n            className=\"h-10 w-10 p-2 mr-2\"\r\n            icon={InfoIcon}\r\n            onClick={() => setIsOpenInfoPopup(!isOpenInfoPopup)}\r\n          />\r\n        </div>\r\n        {/* End header chat window */}\r\n\r\n        {/* Chat content */}\r\n        <div className=\"flex-grow overflow-y-auto overflow-x-hidden px-4 pb-4 pt-2 space-y-1 flex flex-col min-w-0\">\r\n          {loading && (\r\n            <div className=\"text-gray-500 text-center my-2\">Loading...</div>\r\n          )}\r\n          {hasMore && !loading && (\r\n            <div className=\"flex\">\r\n              <button\r\n                className=\"mx-auto px-4 bg-gray-200 py-2 rounded-lg transform active:scale-95 hover:bg-gray-300 dark:hover:bg-dark-hover dark:bg-dark-third dark:text-gray-300 text-xs md:text-sm transition-all duration-200\"\r\n                onClick={loadMore}\r\n              >\r\n                Load more messages...\r\n              </button>\r\n            </div>\r\n          )}\r\n          {!hasMore && (\r\n            <div className=\"text-gray-500 text-xs md:text-sm text-center mb-2\">\r\n              Date created:{\" \"}\r\n              {moment(new Date(chat.dateCreated), \"YYYYMMDD\").format(\r\n                \"MMMM Do YYYY, h:mm:ss a\",\r\n              )}\r\n            </div>\r\n          )}\r\n          <div>{error && \"Error\"}</div>\r\n          {[...chat?.messages]\r\n            ?.sort((messageA, messageB) => {\r\n              return messageA.dateCreated > messageB.dateCreated ? 1 : -1;\r\n            })\r\n            .map((message, index) =>\r\n              message.senderUserName === currentUser.userName ? (\r\n                <>\r\n                  <div\r\n                    key={index + Math.random()}\r\n                    className=\"flex flex-col items-end w-full\"\r\n                  >\r\n                    {showTimeIndexes.includes(index) && (\r\n                      <span className=\"transition-all animate-fade text-xs md:text-sm text-gray-400 left-0 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-right\">\r\n                        {moment(\r\n                          new Date(message.dateCreated),\r\n                          \"YYYYMMDD\",\r\n                        ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"md:max-w-300 max-w-200 rounded-lg shadow transition-all duration-200 cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className={\r\n                          \"text-white rounded-3xl md:px-5 md:py-3 px-3 py-2 break-word rounded-br-none cursor-pointer overflow-x-auto max-w-3/4 text-sm md:text-base\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-green-600 dark:bg-green-800\"\r\n                            : \"bg-gradient-to-br from-green-400 to-green-600 dark:from-green-500 dark:to-green-800 shadow-md\")\r\n                        }\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div\r\n                  key={index + Math.random()}\r\n                  className=\"flex items-end space-x-2\"\r\n                >\r\n                  <ImageCircle\r\n                    src={\r\n                      chat?.participants\r\n                        .filter((x) => x.userName === message.senderUserName)\r\n                        .shift()?.avatarUrl\r\n                    }\r\n                    size=\"sm\"\r\n                  />\r\n                  <div className=\"flex flex-col w-full items-start\">\r\n                    {(showTimeIndexes.includes(index) ||\r\n                      chat?.type === constants.chatType.GROUP) && (\r\n                      <span className=\"transition-all animate-fade text-xs md:text-sm text-gray-400 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-left\">\r\n                        {message.senderFullName +\r\n                          \" - \" +\r\n                          moment(\r\n                            new Date(message.dateCreated),\r\n                            \"YYYYMMDD\",\r\n                          ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"md:max-w-300 max-w-200 rounded-lg shadow cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        className={\r\n                          \" rounded-3xl md:px-5 md:py-3 px-3 py-2 break-word rounded-bl-none shadow-sm cursor-pointer overflow-x-auto max-w-3/4 text-sm md:text-base\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-gray-300 dark:bg-dark-third\"\r\n                            : \"bg-gradient-to-br from-gray-100 to-gray-300 dark:from-gray-500 dark:to-gray-600 \")\r\n                        }\r\n                        onClick={() => handleMessageClick(index)}\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ),\r\n            )}\r\n          <div ref={endMessageRef}></div>\r\n        </div>\r\n        {/* End chat content */}\r\n\r\n        <ChatInput chatId={chat.id} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import { useEffect, useState } from \"react\";\r\nimport useChatApi from \"./useChatApi\";\r\n\r\nexport default function useMessagePagination(currentChat, page) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [appendChat, setAppendChat] = useState({});\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  const chatApi = useChatApi();\r\n\r\n  useEffect(() => {\r\n    if (page > 1 && hasMore) {\r\n      setLoading(true);\r\n      setError(false);\r\n\r\n      const request = { page };\r\n      chatApi\r\n        .getById(currentChat.id, request)\r\n        .then((response) => {\r\n          setAppendChat(response);\r\n          setHasMore(page < response.pageCount);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n        });\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    setHasMore(page < currentChat.pageCount);\r\n  }, [currentChat]);\r\n\r\n  return { loading, error, appendChat, hasMore };\r\n}\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport Button from \"components/Button\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction CreateChat({ isOpen, setIsOpen }) {\r\n  const [selectedMode, setSelectedMode] = useState(constants.chatType.PRIVATE);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [isValidButton, setIsValidButton] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [selectedFriendList, setSelectedFriendList] = useState([]);\r\n\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n    return () => {\r\n      setSelectedFriendList([]);\r\n      setGroupName(\"\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedMode === constants.chatType.GROUP) {\r\n      var result = selectedFriendList?.length >= 2 && groupName?.trim();\r\n      setIsValidButton(result);\r\n    } else if (selectedMode === constants.chatType.PRIVATE) {\r\n      setIsValidButton(selectedFriendList?.length !== 0 ? true : false);\r\n    }\r\n  }, [selectedFriendList, groupName, selectedMode]);\r\n\r\n  async function handleCreateGroup() {\r\n    if (isValidButton) {\r\n      if (selectedMode === constants.chatType.GROUP) {\r\n        const request = {\r\n          participantUserNames: selectedFriendList.map((x) => x.userName),\r\n          name: groupName,\r\n        };\r\n        chatApi.createGroupChat(request).then((response) => {\r\n          if (response.id) {\r\n            dispatch(setSelectedId(response.id));\r\n          }\r\n          setSelectedFriendList([]);\r\n          setGroupName(\"\");\r\n          setIsOpen(false);\r\n        });\r\n      } else if (selectedMode === constants.chatType.PRIVATE) {\r\n        const request = {\r\n          participantUserName: selectedFriendList\r\n            .map((x) => x.userName)\r\n            .shift(),\r\n        };\r\n        chatApi.createPrivateChat(request).then((response) => {\r\n          if (response.id) {\r\n            dispatch(setSelectedId(response.id));\r\n          }\r\n          setSelectedFriendList([]);\r\n          setGroupName(\"\");\r\n          setIsOpen(false);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 py-10  z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"px-6 md:px-14 md:py-6 flex flex-col bg-white dark:bg-dark-secondary dark:border-dark-third rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300 max-h-full overflow-y-auto md:overflow-visible\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <div className=\"flex pt-6 pb-5 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-lg md:text-2xl text-green-600 dark:text-green-400\">\r\n            New chat!\r\n          </h3>\r\n\r\n          <div className=\"relative flex rounded-lg items-center border border-green-500 cursor-pointer overflow-hidden\">\r\n            <div\r\n              className={\r\n                \"absolute bg-gradient-to-br from-green-400 to-green-600 w-1/2 h-full rounded transition-all duration-200 z-0\" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.GROUP\r\n                  ? \"transform translate-x-full left-0\"\r\n                  : \"left-0 \")\r\n              }\r\n            ></div>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-xs md:text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.PRIVATE\r\n                  ? \"text-white\"\r\n                  : \" text-green-600 dark:text-green-400\")\r\n              }\r\n              onClick={() => setSelectedMode(constants.chatType.PRIVATE)}\r\n            >\r\n              Private\r\n            </span>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-xs md:text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.GROUP\r\n                  ? \"text-white\"\r\n                  : \" text-green-600 dark:text-green-400\")\r\n              }\r\n              onClick={() => setSelectedMode(constants.chatType.GROUP)}\r\n            >\r\n              Group\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"space-y-2 md:space-y-4\">\r\n          {selectedMode === constants.chatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Find Friends\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-secondary dark:border-dark-hover border border-gray-300 border-opacity-50 rounded-lg w-full py-2 md:py-4 md:px-8 px-6 space-y-1 max-h-36 md:max-h-72 overflow-y-auto select-none z-10 shadow-2xl\">\r\n                        <h4 className=\"font-semibold mb-2 dark:text-gray-200\">\r\n                          Friend list\r\n                        </h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                                {friend.fullName ?? \"Unknown\"}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-base md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(At least 2 people. Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-dark-secondary border dark:border-dark-hover border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none\">\r\n                  {selectedFriendList\r\n                    .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                    .map((friend, index) => (\r\n                      <div\r\n                        onClick={() => {\r\n                          var result = [...selectedFriendList];\r\n                          var i = result.findIndex(\r\n                            (x) => x.userName === friend.userName,\r\n                          );\r\n                          if (i >= 0) {\r\n                            result.splice(i, 1);\r\n                            setSelectedFriendList(result);\r\n                          }\r\n                        }}\r\n                        key={Math.random() + index}\r\n                        className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-red-200 dark:hover:bg-red-500 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                      >\r\n                        <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                        <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                          {friend.fullName ?? \"Unknown\"}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <label\r\n                htmlFor=\"selectFriend\"\r\n                className=\"font-semibold md:text-lg dark:text-gray-200\"\r\n              >\r\n                Select Friends\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"selectFriend\"\r\n                  type=\"search\"\r\n                  onFocus={() => setIsOpenFriendList(true)}\r\n                  value={keyword}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setKeyword(e.target.value)}\r\n                  className=\"dark:bg-dark-third bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n                {isOpenFriendList && (\r\n                  <>\r\n                    <div className=\"animate-fade absolute top-full bg-white dark:bg-dark-secondary border border-gray-400 border-opacity-50 rounded-lg w-full space-y-1 max-h-36 md:max-h-72 overflow-y-auto select-none z-10 shadow-2xl py-2 md:py-4 md:px-8 px-6\">\r\n                      <h4 className=\"font-semibold mb-2 text-start dark:text-gray-200\">\r\n                        Friend list\r\n                      </h4>\r\n                      {friendList\r\n                        .sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n                        .filter(\r\n                          (x) =>\r\n                            (x.fullName\r\n                              ?.toLowerCase()\r\n                              .includes(keyword?.toLowerCase()) ||\r\n                              x.userName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase())) &&\r\n                            !selectedFriendList.some(\r\n                              (selected) => selected.userName === x.userName,\r\n                            ),\r\n                        )\r\n                        .map((friend, index) => (\r\n                          <div\r\n                            onClick={() => {\r\n                              var result = [];\r\n                              result.push(friend);\r\n                              setIsOpenFriendList(false);\r\n                              setSelectedFriendList(result);\r\n                            }}\r\n                            key={Math.random() + index}\r\n                            className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                          >\r\n                            <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                            <span className=\"break-full w-full overflow-ellipsis truncate text-sm md:text-base\">\r\n                              {friend.fullName ?? \"Unknown\"}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold md:text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-dark-secondary border dark:border-dark-hover border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-48 md:max-h-72 overflow-y-auto select-none \">\r\n                  {[...selectedFriendList].map((friend, index) => {\r\n                    if (index === 0) {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            var result = [...selectedFriendList];\r\n                            var i = result.findIndex(\r\n                              (x) => x.userName === friend.userName,\r\n                            );\r\n                            if (i >= 0) {\r\n                              result.splice(i, 1);\r\n                              setSelectedFriendList(result);\r\n                            }\r\n                          }}\r\n                          key={Math.random() + index}\r\n                          className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-dark-third bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300 dark:hover:bg-red-500\"\r\n                        >\r\n                          <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                          <span className=\"break-full w-full overflow-ellipsis truncate md:text-base text-sm\">\r\n                            {friend.fullName ?? \"Unknown\"}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return <></>;\r\n                    }\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            <Button\r\n              disabled={!isValidButton}\r\n              content=\"Create\"\r\n              onClick={() => handleCreateGroup()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default CreateChat;\r\n","import { setPopup } from \"app/appSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport Button from \"components/Button\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction UserInfo({ isOpen, setIsOpen, currentUser }) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [avatar, setAvatar] = useState({});\r\n\r\n  const userApi = useUserApi();\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser.firstName && currentUser.lastName) {\r\n      setFirstName(currentUser.firstName);\r\n      setLastName(currentUser.lastName);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  async function submit() {\r\n    const request = new FormData();\r\n    request.append(\"Avatar\", avatar);\r\n    request.append(\"FirstName\", firstName.substring(0, 49));\r\n    request.append(\"LastName\", lastName.substring(0, 49));\r\n\r\n    userApi.updateUser(request).then((response) => {\r\n      dispatch(updateUser(response));\r\n      openPopup(\"Success\", \"Update info successfully!\");\r\n    });\r\n\r\n    setIsOpen(false);\r\n  }\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 py-10  z-30 bg-gray-500 bg-opacity-30 dark:bg-dark-primary dark:bg-opacity-50\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"w-full md:w-5/6 lg:w-2/5 md:px-14 px-6 md:py-6 flex flex-col dark:bg-dark-secondary dark:border-dark-third bg-white rounded-xl shadow-xl border border-gray-300 transition-all duration-300\"\r\n        }\r\n      >\r\n        <h3 className=\"pt-6 pb-5 font-semibold text-lg md:text-2xl text-green-600 dark:text-green-400\">\r\n          User info!\r\n        </h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"mb-3 flex flex-col md:grid md:grid-cols-2 md:place-items-start space-y-4 md:space-y-0\">\r\n            <div className=\"md:col-span-1 md:mr-2 space-y-2\">\r\n              <label\r\n                htmlFor=\"fistName\"\r\n                className=\"md:text-lg font-semibold dark:text-dark-txt\"\r\n              >\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"firstName\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-dark-third rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n            </div>\r\n            <div className=\"md:col-span-1 md:ml-2 space-y-2\">\r\n              <label\r\n                htmlFor=\"lastName\"\r\n                className=\"md:text-lg font-semibold dark:text-dark-txt\"\r\n              >\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"lastName\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-dark-third rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-2 flex flex-col\">\r\n              <label\r\n                htmlFor=\"avatar\"\r\n                className=\"md:text-lg font-semibold md:mt-4 dark:text-dark-txt\"\r\n              >\r\n                Avatar\r\n              </label>\r\n              <input\r\n                id=\"avatar\"\r\n                onChange={(e) => setAvatar(e.target.files[0])}\r\n                type=\"file\"\r\n                className=\"w-full\"\r\n                accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end space-x-2 items-center py-6\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            <Button content=\"Save\" onClick={() => submit()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\nexport default UserInfo;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDarkMode() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var mode = window.localStorage.getItem(\"theme\");\r\n\r\n    if (mode === \"dark\") {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      setDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      window.document.documentElement.classList.remove(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return { darkMode, setDarkMode };\r\n}\r\n\r\nexport default useDarkMode;\r\n","import ConfirmModal from \"components/ConfirmModal\";\r\nimport CreateChat from \"components/CreateChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport useDarkMode from \"hooks/useDarkMode\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClickableIcon from \"../ClickableIcon\";\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func,\r\n};\r\n\r\nfunction Header({ logout }) {\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const [isOpenCreateChat, setIsOpenCreateChat] = useState(false);\r\n  const [isOpenUserInfo, setIsOpenUserInfo] = useState(false);\r\n  const [confirmModal, setConfirmModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmButtonTitle: \"\",\r\n  });\r\n\r\n  const { darkMode, setDarkMode } = useDarkMode();\r\n\r\n  const userAvatar = currentUser.avatarUrl;\r\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenMenu && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenMenu(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenMenu]);\r\n\r\n  function openConfirmModal(\r\n    content,\r\n    confirmButtonAction,\r\n    confirmButtonTitle = \"Yes\",\r\n    title,\r\n  ) {\r\n    const confirmModal = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n      confirmButtonTitle: confirmButtonTitle,\r\n      confirmButtonAction: confirmButtonAction,\r\n    };\r\n    setConfirmModal(confirmModal);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {confirmModal.isOpen && (\r\n        <ConfirmModal\r\n          isOpen={confirmModal.isOpen}\r\n          closeAction={() => setConfirmModal({ isOpen: false })}\r\n          title=\"Are you sure?\"\r\n          content={confirmModal.content}\r\n          confirmButtonTitle={confirmModal.confirmButtonTitle}\r\n          confirmButtonAction={confirmModal.confirmButtonAction}\r\n        />\r\n      )}\r\n      <UserInfo\r\n        currentUser={currentUser}\r\n        isOpen={isOpenUserInfo}\r\n        setIsOpen={setIsOpenUserInfo}\r\n      />\r\n      <CreateChat isOpen={isOpenCreateChat} setIsOpen={setIsOpenCreateChat} />\r\n      <div className=\"pb-1 pt-4 flex justify-between items-center\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div\r\n            className=\"transition-all duration-200 ring ring-green-500 p-1 transform active:scale-95 rounded-full cursor-pointer\"\r\n            onClick={() => setIsOpenUserInfo((x) => !x)}\r\n          >\r\n            <ImageCircle src={userAvatar} size=\"md\" />\r\n          </div>\r\n          <h1 className=\"font-bold text-3xl\">Chats</h1>\r\n        </div>\r\n        <div className=\"flex space-x-2 items-center\">\r\n          <ClickableIcon\r\n            iconClass=\"bx bxs-edit\"\r\n            onClick={() => setIsOpenCreateChat(true)}\r\n            className=\"dark:bg-dark-third bg-gray-100\"\r\n          />\r\n          <div className=\"relative\" ref={ref}>\r\n            <ClickableIcon\r\n              iconClass=\"bx bx-dots-horizontal-rounded\"\r\n              onClick={() => setIsOpenMenu(!isOpenMenu)}\r\n              className=\"dark:bg-dark-third bg-gray-100\"\r\n            />\r\n            {isOpenMenu && (\r\n              <div className=\"animate-fade transition-all duration-200 absolute right-0 md:left-0 border border-gray-200 bg-white w-52 rounded-lg shadow-md overflow-hidden p-2 dark:bg-dark-secondary dark:border-dark-third mt-2 select-none z-30\">\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-dark-third\"\r\n                  onClick={() => setDarkMode(!darkMode)}\r\n                >\r\n                  <span className=\"p-1 bg-gray-100 dark:bg-dark-hover rounded-full select-none\">\r\n                    <i className=\"bx bx-moon text-center text-xl align-middle text-black dark:text-dark-txt w-7 h-7\"></i>\r\n                  </span>\r\n                  <span>Dark Mode</span>\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-dark-third\"\r\n                  onClick={() => {\r\n                    openConfirmModal(\"Do you want to log out?\", logout);\r\n                  }}\r\n                >\r\n                  <span className=\"p-1 bg-gray-100 dark:bg-dark-hover rounded-full select-none\">\r\n                    <i className=\"bx bx-log-in-circle text-center text-xl align-middle text-black dark:text-dark-txt w-7 h-7\"></i>\r\n                  </span>\r\n                  <span>Log Out</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.2a8dee36.png\";","import { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport {\r\n  addChat,\r\n  addMessage,\r\n  addNotification,\r\n  editChat,\r\n  editGroupAvatar,\r\n  refreshChats,\r\n  setSelectedId,\r\n} from \"app/chatSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport ChatList from \"components/ChatList\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport Header from \"components/Header\";\r\nimport useChatApi from \"hooks/useChatApi\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Chat() {\r\n  const [connection, setConnection] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n\r\n  const chatApi = useChatApi();\r\n  const userApi = useUserApi();\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"token\");\r\n    connection.stop();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      chatApi\r\n        .getAll()\r\n        .then((response) => {\r\n          dispatch(refreshChats(response.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Connection failed: \", error);\r\n        });\r\n\r\n      userApi.getCurrentUser().then((response) => {\r\n        dispatch(updateUser(response));\r\n      });\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // for realtime\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_SERVER_URL + \"/hubs/chats\", {\r\n        accessTokenFactory: () => localStorage.getItem(\"token\"),\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection && !connection.connectionStarted) {\r\n      connection.start().then((result) => {\r\n        connection.on(\"ReceiveMessage\", (response) => {\r\n          const action = addMessage(response);\r\n          dispatch(action);\r\n          if (response.chatId && selectedId !== response.chatId) {\r\n            dispatch(addNotification(response.chatId));\r\n          }\r\n        });\r\n        connection.on(\"ReceiveChat\", (chat) => {\r\n          const action = addChat(chat);\r\n          dispatch(action);\r\n          if (chat.creatorUserName === currentUser.userName) {\r\n            dispatch(setSelectedId(chat.id));\r\n          }\r\n        });\r\n        connection.on(\"ReceiveUpdatedChat\", (chat) => {\r\n          const action = editChat(chat);\r\n          dispatch(action);\r\n        });\r\n        connection.on(\"ReceiveUpdatedGroupAvatar\", (response) => {\r\n          const action = editGroupAvatar(response);\r\n          dispatch(action);\r\n        });\r\n      });\r\n    }\r\n    return () => {\r\n      if (connection && connection.connectionStarted) {\r\n        connection.stop();\r\n      }\r\n    };\r\n  }, [connection]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark:bg-dark-primary dark:text-white  animate-fade grid grid-cols-12 h-screen w-screen overflow-hidden\">\r\n        <div\r\n          className={\r\n            \"animate-fade lg:col-span-3 md:col-span-4 col-span-12 md:flex flex-col h-screen border-r px-4 dark:border-dark-third border-gray-300 pt-1\" +\r\n            (selectedId !== 0 ? \" hidden\" : \"flex\")\r\n          }\r\n        >\r\n          <Header logout={logout} />\r\n          <ChatList />\r\n        </div>\r\n        {!selectedId ? (\r\n          chats?.length === 0 ? (\r\n            <div className=\"dark:bg-black animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex flex-col h-full w-full \">\r\n              <img src={Logo} className=\"w-32 h-32 mb-3\" alt=\"logo\" />\r\n              <span className=\"text-center\">\r\n                {\" \"}\r\n                Welcome to{\" \"}\r\n                <span className=\"text-green-600 dark:text-green-400 font-bold\">\r\n                  TeeChat!\r\n                </span>{\" \"}\r\n                <br />\r\n                You do not have any chats, please start a chat!{\" \"}\r\n              </span>\r\n              <span></span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"dark:bg-black animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex flex-col h-full w-full \">\r\n              <img src={Logo} className=\"w-32 h-32 mb-3\" alt=\"logo\" />\r\n              <span className=\"text-center\">\r\n                {\" \"}\r\n                Welcome to{\" \"}\r\n                <span className=\"text-green-600 dark:text-green-400 font-bold\">\r\n                  TeeChat!\r\n                </span>{\" \"}\r\n                <br />\r\n                Select a chat to start.{\" \"}\r\n              </span>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"dark:bg-dark-primary md:dark:bg-black animate-fade lg:col-span-9 md:col-span-8 col-span-12 flex h-screen w-full overflow-y-auto\">\r\n            <ChatWindow chat={chats.find((chat) => chat.id === selectedId)} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/forbid.7d678d5c.jpg\";","import React from \"react\";\r\nimport ForbidImg from \"assets/img/forbid.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Forbid({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ForbidImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"You don't have permission to access this resources\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forbid;\r\n","export default __webpack_public_path__ + \"static/media/login-page.dc5637a7.jpg\";","import { getCurrentUser } from \"app/userSlice\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userApi = useUserApi();\r\n\r\n  useEffect(() => {\r\n    if (username && password) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n  }, [username, password]);\r\n  function login(e) {\r\n    e.preventDefault();\r\n\r\n    const request = { username, password };\r\n    setError(\"\");\r\n\r\n    userApi\r\n      .login(request)\r\n      .then((response) => {\r\n        dispatch(getCurrentUser());\r\n        window.localStorage.setItem(\"token\", response);\r\n        history.push(\"/chats\");\r\n      })\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\"\r\n            ? error\r\n            : \"Username or password is incorrect\";\r\n        setError(message);\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n      <img\r\n        src={LoginPageImage}\r\n        alt=\"login\"\r\n        className=\"md:block hidden col-span-3 w-full ml-44\"\r\n      />\r\n      <form\r\n        onSubmit={(e) => login(e)}\r\n        className=\"container rounded-2xl flex flex-col py-10 md:w-auto md:col-span-4\"\r\n      >\r\n        <img src={Logo} alt=\"login\" className=\"h-20 w-20 mx-auto mb-3\" />\r\n        <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n          Login to TeeChat!\r\n        </h1>\r\n\r\n        {error && (\r\n          <span className=\"bg-red-500 rounded-md text-white text-lg mb-2 py-2 text-center\">\r\n            {error ?? \"Username or password is incorrect\"}\r\n          </span>\r\n        )}\r\n        <div className=\"space-y-2 mb-3\">\r\n          <label htmlFor=\"username\" className=\"text-lg font-semibold px-1\">\r\n            Username or email address\r\n          </label>\r\n          <input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2 mb-2\">\r\n          <label htmlFor=\"password\" className=\"text-lg font-semibold px-1\">\r\n            Password\r\n          </label>\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          disabled={!isDirty}\r\n          content=\"Login\"\r\n          className=\"mb-4 mt-2 font-bold\"\r\n        />\r\n        <div className=\"text-center\">\r\n          Not a member?{\" \"}\r\n          <Link to=\"/register\" className=\"text-green-500 font-bold\">\r\n            Sign up now\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/not-found.500f302c.jpg\";","import React from \"react\";\r\nimport NotFoundImg from \"assets/img/not-found.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={NotFoundImg} alt=\"Error\" />\r\n      <span className=\" font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Not found resources\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport Popup from \"components/Popup\";\r\nimport useUserApi from \"hooks/useUserApi\";\r\nimport Logo from \"logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm, useWatch } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction Register() {\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [isExistsUserName, setIsExistsUserName] = useState(true);\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  const userApi = useUserApi();\r\n\r\n  // yup validation\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"First Name is required\"),\r\n    lastName: yup.string().required(\"Last Name is required\"),\r\n    userName: yup\r\n      .string()\r\n      .required(\"User Name is required\")\r\n      .min(6, \"Username must be 6-20 characters\")\r\n      .max(20, \"Username must be 6-20 characters\")\r\n      .test(\r\n        \"checkUsername\",\r\n        \"Username does not contain special characters\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=[a-zA-Z0-9._])(?!.*[_.]{2})[^_.].*[^_.]$\",\r\n          );\r\n        },\r\n      )\r\n      .test(\r\n        \"existsUsername\",\r\n        \"Username is already taken\",\r\n        (value) => !isExistsUserName,\r\n      ),\r\n    email: yup\r\n      .string()\r\n      .required(\"Email is required\")\r\n      .test(\"checkEmail\", \"Email is invalid\", (value) => {\r\n        return checkRegex(\r\n          value,\r\n          /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n        );\r\n      }),\r\n    password: yup\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .test(\r\n        \"checkPassword\",\r\n        \"Passwords must be at least 8 characters, one digit, one uppercase, one non alphanumeric character\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$^+=!*()@%&]).{8,}$\",\r\n          );\r\n        },\r\n      ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Confirm Password is required\")\r\n      .test(\r\n        \"ConfirmPasswordMatch\",\r\n        \"Password and Confirmation Password must match\",\r\n        (confirmPassword) => {\r\n          return confirmPassword === watch.password;\r\n        },\r\n      ),\r\n  });\r\n\r\n  // react hook form\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    setError,\r\n    clearErrors,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {},\r\n  });\r\n  const watch = useWatch({\r\n    control,\r\n  });\r\n\r\n  useEffect(() => {\r\n    userApi.checkUserNameExists(watch.userName).then((response) => {\r\n      if (response.isExists) {\r\n        setError(\r\n          \"userName\",\r\n          {\r\n            type: \"required\",\r\n            message: `Username '${watch.userName}' is already taken`,\r\n          },\r\n          { shouldFocus: true },\r\n        );\r\n        setIsExistsUserName(true);\r\n      } else {\r\n        clearErrors(\"userName\");\r\n        setIsExistsUserName(false);\r\n      }\r\n    });\r\n  }, [watch.userName]);\r\n\r\n  useEffect(() => {\r\n    const onChange = () => {\r\n      var isValid =\r\n        watch.firstName?.trim() &&\r\n        watch.lastName?.trim() &&\r\n        watch.userName?.trim() &&\r\n        watch.email &&\r\n        watch.password &&\r\n        watch.confirmPassword;\r\n\r\n      if (isValid) {\r\n        setIsChanged(true);\r\n        return;\r\n      }\r\n      setIsChanged(false);\r\n    };\r\n\r\n    onChange();\r\n  }, [watch]);\r\n\r\n  // handle submit\r\n  const onSubmit = (content) => {\r\n    userApi.register(content).then((response) => {\r\n      openPopup(\r\n        \"Success\",\r\n        <span>\r\n          \"Create account successfully! Please{\" \"}\r\n          <Link className=\"font-bold text-green-600\" to=\"/login\">\r\n            log in\r\n          </Link>\r\n          !\"\r\n        </span>,\r\n      );\r\n      reset({});\r\n    });\r\n  };\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        title={popup.title}\r\n        isOpen={popup.isOpen}\r\n        content={popup.content}\r\n        onClick={() => {\r\n          setPopup({ isOpen: false });\r\n          history.push(\"/login\");\r\n        }}\r\n      />\r\n      <div className=\"z-10 h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n        <img\r\n          src={LoginPageImage}\r\n          alt=\"login\"\r\n          className=\"md:block hidden col-span-3 w-full ml-44\"\r\n        />\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"container rounded-2xl flex flex-col py-10 md:w-full md:col-span-4 md:px-20 lg:px-48\"\r\n        >\r\n          <img src={Logo} alt=\"login\" className=\"h-20 w-20 mx-auto mb-3\" />\r\n          <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n            Sign up to TeeChat!\r\n          </h1>\r\n          <div className=\"mb-3 grid grid-cols-2 place-items-start \">\r\n            <div className=\"col-span-1 space-y-2 mr-2 w-full\">\r\n              <label htmlFor=\"fistName\" className=\"text-lg font-semibold \">\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"firstName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.firstName?.message}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 space-y-2 ml-2 w-full\">\r\n              <label htmlFor=\"lastName\" className=\"text-lg font-semibold \">\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"lastName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.lastName?.message}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"userName\" className=\"text-lg font-semibold \">\r\n              Username <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"userName\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.userName?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"email\" className=\"text-lg font-semibold \">\r\n              Email <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"email\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">{errors.email?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"password\" className=\"text-lg font-semibold \">\r\n              Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"password\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.password?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"confirmPassword\" className=\"text-lg font-semibold \">\r\n              Confirm Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"confirmPassword\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.confirmPassword?.message}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            disabled={!isChanged}\r\n            content=\"Sign Up\"\r\n            className=\"mb-4 mt-2 font-bold\"\r\n          />\r\n          <div className=\"text-center\">\r\n            Already a member?{\" \"}\r\n            <Link to=\"/login\" className=\"text-green-500 font-bold\">\r\n              Sign in\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\nfunction checkRegex(value, regex) {\r\n  if (value && regex) {\r\n    var pattern = new RegExp(regex);\r\n    var res = pattern.test(value);\r\n    return res;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.c72c9a3e.jpg\";","import React from \"react\";\r\nimport ErrorImg from \"assets/img/error.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ServerError({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ErrorImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Oops! Something went wrong!\"}\r\n      </span>\r\n      <Link to=\"/chats\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport jwt from \"jwt-decode\";\r\nimport { setPopup } from \"app/appSlice\";\r\nimport Loader from \"components/Loader\";\r\nimport Popup from \"components/Popup\";\r\nimport Chat from \"./pages/Chat\";\r\nimport Forbid from \"./pages/Forbid\";\r\nimport Login from \"./pages/Login\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Register from \"./pages/Register\";\r\nimport ServerError from \"./pages/ServerError\";\r\n\r\nfunction App() {\r\n  const isLoading = useSelector((state) => state.app.isLoading);\r\n  const popup = useSelector((state) => state.app.popup);\r\n  const dispatch = useDispatch();\r\n\r\n  function closePopup() {\r\n    dispatch(setPopup({ isOpen: false }));\r\n  }\r\n  return (\r\n    <>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Loader isOpen={isLoading} className=\"z-50\" />\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={closePopup}\r\n        />\r\n\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/forbid\" component={Forbid} />\r\n          <Route path=\"/ServerError\" component={ServerError} />\r\n          <PrivateRoute path=\"/chats\" component={Chat} />\r\n          <PrivateRoute exact path=\"/\" component={Chat} />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  var isLogin = window.localStorage.getItem(\"token\") ? true : false;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction isTokenExpired(token) {\r\n  if (jwt(token).exp < Date.now() / 1000) {\r\n    localStorage.clear();\r\n    return true;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"app/store\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"boxicons/css/boxicons.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}