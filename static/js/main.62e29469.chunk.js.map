{"version":3,"sources":["app/chatSlice.js","app/appSlice.js","app/userSlice.js","app/store.js","components/Loader/index.jsx","components/Button/index.jsx","components/Popup/index.jsx","api/Api.js","api/chatApi.js","api/userApi.js","assets/img/default-avatar.jpg","components/ImageCircle/index.jsx","utils/constants.js","components/ChatList/index.jsx","assets/icons/info-icon.svg","assets/icons/left-arrow-icon.svg","assets/icons/emoji.svg","assets/icons/image-icon.svg","assets/icons/send-icon.svg","components/ClickableIcon/index.jsx","components/ChatInput/index.jsx","components/ConfirmModal/index.jsx","components/EditChat/index.jsx","components/ChatWindow/index.jsx","hooks/useMessagePagination.js","assets/icons/dark-mode-icon.svg","assets/icons/menu-icon.svg","assets/icons/new-chat-icon.svg","assets/icons/sign-out-icon.svg","components/CreateChat/index.jsx","components/UserInfo/index.jsx","hooks/useDarkMode.js","components/Header/index.jsx","pages/Chat/index.jsx","assets/img/forbid.jpg","pages/Forbid/index.jsx","assets/img/login-page.jpg","pages/Login/index.jsx","assets/img/not-found.jpg","pages/NotFound/index.jsx","pages/Register/index.jsx","assets/img/error.jpg","pages/ServerError/index.jsx","App.js","index.js"],"names":["chats","createSlice","name","initialState","reducers","addChat","state","action","push","payload","editChat","updatedChat","index","findIndex","chat","id","participants","editGroupAvatar","updatedChatId","chatId","groupAvatarUrl","appendMessageToChat","chatToAppend","messagesToAppend","messages","totalRecords","limit","page","pageCount","keyword","concat","refreshChats","addMessage","newMessage","message","selectedId","setSelectedId","reducer","combineReducers","actions","isLoading","setIsLoading","popup","isOpen","content","title","setPopup","currentUser","getCurrentUser","user","token","window","localStorage","getItem","jwt","decodeCurrentUser","updateUser","userName","rootReducer","chatReducer","app","appReducer","users","store","configureStore","Loader","className","circleCommonClasses","useState","isEnding","setIsEnding","useEffect","Button","outline","onClick","onBlur","disabled","Popup","Api","axios","create","baseURL","process","timeout","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","a","newConfig","Authorization","response","data","error","status","location","href","Promise","reject","baseApiUrl","chatApi","getAll","url","get","getById","sendMessage","post","sendImage","updateGroupAvatar","patch","createGroupChat","updateGroupChat","createPrivateChat","userApi","isLogin","exp","Date","now","clear","login","register","checkUserNameExists","getFriendList","put","ImageCircle","realSize","src","DefaultAvatar","alt","size","constants","chatType","PRIVATE","GROUP","NO_NAME_GROUP","ChatList","useSelector","dispatch","useDispatch","setKeyword","type","placeholder","onChange","e","target","value","getCurrentChats","map","currentUserName","some","x","friend","length","filter","shift","lastMessage","reduce","b","dateCreated","handleClick","avatarUrl","fullName","moment","fromNow","result","sort","chatA","chatB","lastMessageA","lastMessageB","sortChat","toLowerCase","includes","searchChat","ClickableIcon","icon","ChatInput","setContent","chosenEmoji","setChosenEmoji","isOpenEmoji","setIsOpenEmoji","ref","useRef","preventDefault","file","files","formData","FormData","append","checkIfClickedOutside","current","contains","document","addEventListener","removeEventListener","onSubmit","onSendMessage","hidden","accept","htmlFor","ImageIcon","position","EmojiIcon","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","SendIconNormal","ConfirmModal","closeAction","confirmButtonTitle","confirmButtonAction","EditChat","setIsOpen","isOpenModal","setIsOpenModal","modalContent","setModalContent","groupName","setGroupName","friendList","setFriendList","isOpenFriendList","setIsOpenFriendList","selectedFriendList","setSelectedFriendList","friendListRef","currentParticipantUserNames","selectedParticipantUserNames","participantFullNamesToAdd","participantFullNamesToRemove","participantUserNamesToRemove","forEach","openModal","submitEditChat","participantUserNamesToAdd","newGroupName","then","catch","openPopup","closeModal","onFocus","autoComplete","selected","Math","random","i","splice","creatorUserName","format","handleEditChat","ChatWindow","showTimeIndexes","setShowTimeIndexes","isOpenInfoPopup","setIsOpenInfoPopup","handleMessageClick","setPage","currentChat","loading","setLoading","setError","appendChat","setAppendChat","hasMore","setHasMore","useMessagePagination","endMessageRef","scrollIntoView","LeftArrowIcon","InfoIcon","prevPage","messageA","messageB","senderUserName","calendar","imageUrl","senderFullName","CreateChat","selectedMode","setSelectedMode","isValidButton","setIsValidButton","participantUserNames","participantUserName","handleCreateGroup","UserInfo","firstName","setFirstName","lastName","setLastName","avatar","setAvatar","submit","useDarkMode","darkMode","setDarkMode","documentElement","classList","add","setItem","remove","Header","logout","isOpenCreateChat","setIsOpenCreateChat","isOpenUserInfo","setIsOpenUserInfo","confirmModal","setConfirmModal","userAvatar","isOpenMenu","setIsOpenMenu","NewChatIcon","MenuIcon","DarkModeIcon","openConfirmModal","SignOutIcon","Chat","connection","setConnection","history","useHistory","refreshChatAction","fetchData","newConnection","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","build","connectionStarted","start","on","console","stop","removeItem","find","Forbid","ForbidImg","to","Login","username","setUsername","password","setPassword","isDirty","setIsDirty","LoginPageImage","NotFound","NotFoundImg","Register","isChanged","setIsChanged","isExistsUserName","setIsExistsUserName","schema","yup","shape","required","min","max","test","checkRegex","email","confirmPassword","watch","useForm","resolver","yupResolver","defaultValues","handleSubmit","control","clearErrors","reset","errors","formState","useWatch","isExists","shouldFocus","regex","RegExp","ServerError","ErrorImg","App","basename","exact","from","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62e29469.chunk.js","sourcesContent":["import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst chats = createSlice({\r\n  name: \"chats\",\r\n  initialState: [],\r\n  reducers: {\r\n    addChat: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    editChat: (state, action) => {\r\n      const updatedChat = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChat.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].name = updatedChat.name;\r\n        state[index].participants = updatedChat.participants;\r\n      }\r\n    },\r\n    editGroupAvatar: (state, action) => {\r\n      const updatedChatId = action.payload.chatId;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === updatedChatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].groupAvatarUrl = action.payload.groupAvatarUrl;\r\n      }\r\n    },\r\n    appendMessageToChat: (state, action) => {\r\n      const chatToAppend = action.payload;\r\n      const messagesToAppend = chatToAppend?.messages;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === chatToAppend.id;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].totalRecords = chatToAppend.totalRecords;\r\n        state[index].limit = chatToAppend.limit;\r\n        state[index].page = chatToAppend.page;\r\n        state[index].pageCount = chatToAppend.pageCount;\r\n        if (chatToAppend.keyword) {\r\n          state[index].messages = messagesToAppend;\r\n        } else {\r\n          state[index].messages =\r\n            state[index].messages.concat(messagesToAppend);\r\n        }\r\n      }\r\n    },\r\n    refreshChats: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n    addMessage: (state, action) => {\r\n      const newMessage = action.payload;\r\n      const index = state.findIndex((chat) => {\r\n        return chat.id === newMessage.chatId;\r\n      });\r\n      if (index >= 0) {\r\n        state[index].messages.push(newMessage?.message);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst selectedId = createSlice({\r\n  name: \"selectedId\",\r\n  initialState: 0,\r\n  reducers: {\r\n    setSelectedId: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  chats: chats.reducer,\r\n  selectedId: selectedId.reducer,\r\n});\r\n\r\nexport const {\r\n  addChat,\r\n  editChat,\r\n  refreshChats,\r\n  addMessage,\r\n  appendMessageToChat,\r\n  editGroupAvatar,\r\n} = chats.actions;\r\nexport const { setSelectedId } = selectedId.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst isLoading = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst popup = createSlice({\r\n  name: \"popup\",\r\n  initialState: {\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  },\r\n  reducers: {\r\n    setPopup: (state, action) => {\r\n      state = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  isLoading: isLoading.reducer,\r\n  popup: popup.reducer,\r\n});\r\n\r\nexport const { setIsLoading } = isLoading.actions;\r\nexport const { setPopup } = popup.actions;\r\nexport default reducer;\r\n","import { combineReducers, createSlice } from \"@reduxjs/toolkit\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nconst currentUser = createSlice({\r\n  name: \"currentUser\",\r\n  initialState: {},\r\n  reducers: {\r\n    getCurrentUser: (state, action) => {\r\n      var user = decodeCurrentUser();\r\n      if (user) {\r\n        state = user;\r\n        return state;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      if (action.payload.userName) {\r\n        state = action.payload;\r\n        return state;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  currentUser: currentUser.reducer,\r\n});\r\n\r\nexport const { getCurrentUser, updateUser } = currentUser.actions;\r\nexport default reducer;\r\n\r\nfunction decodeCurrentUser() {\r\n  var token = window.localStorage.getItem(\"token\");\r\n  if (token) {\r\n    const user = jwt(token);\r\n    return user;\r\n  }\r\n  return false;\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport chatReducer from \"app/chatSlice\";\r\nimport appReducer from \"app/appSlice\";\r\nimport userReducer from \"app/userSlice\";\r\n\r\nconst rootReducer = {\r\n  chats: chatReducer,\r\n  app: appReducer,\r\n  users: userReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Loader = ({ className, isOpen = true }) => {\r\n  let circleCommonClasses =\r\n    \"h-3 w-3 bg-gradient-to-br from-green-300 to-green-600 shadow-md rounded-full\";\r\n  const [isEnding, setIsEnding] = useState(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsEnding(true);\r\n    };\r\n  }, []);\r\n  return (\r\n    isOpen && (\r\n      <div\r\n        className={\r\n          \"z-50  animate-fade flex h-screen w-screen justify-center items-center fixed transition-all duration-200 bg-white dark:bg-gray-800\" +\r\n          (isEnding ? \" hidden\" : \"\") +\r\n          (\" \" + className ?? \"\")\r\n        }\r\n      >\r\n        <div className={`${circleCommonClasses} mr-3 animate-bounce`}></div>\r\n        <div className={`${circleCommonClasses} mr-3 animate-bounce200`}></div>\r\n        <div className={`${circleCommonClasses} animate-bounce400`}></div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nButton.propTypes = {\r\n  content: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nfunction Button({\r\n  outline = false,\r\n  content,\r\n  className,\r\n  onClick,\r\n  onBlur,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n        className={\r\n          \"px-4 py-2 rounded-lg transition-all duration-200 disabled:opacity-50 outline-none z-0 select-none \" +\r\n          \" \" +\r\n          (outline\r\n            ? \"border border-green-500 bg-white dark:bg-transparent dark:hover:bg-green-500 text-green-500 hover:text-white hover:bg-green-400 active:bg-green-500\"\r\n            : \"bg-gradient-to-br from-green-400 to-green-600 text-white active:from-green-500 active:to-green-600  \") +\r\n          \" \" +\r\n          (className ?? \"\") +\r\n          \" \" +\r\n          (!disabled ? \"active:scale-95 active:transform\" : \"cursor-default\")\r\n        }\r\n      >\r\n        {content}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nPopup.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nfunction Popup({\r\n  title = \"Notification\",\r\n  isOpen,\r\n  content = \"Something went wrong!\",\r\n  onClick,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 bg-opacity-30 dark:bg-gray-900 dark:bg-opacity-50 z-50\">\r\n        <div className=\"bg-white dark:bg-gray-800 py-8 px-8 w-full md:w-2/3 lg:w-2/5 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-gray-200\">\r\n            {title}\r\n          </h3>\r\n          <span className=\"break-words dark:text-gray-200\">{content}</span>\r\n          <div className=\"w-full flex justify-end\">\r\n            <Button content=\"Close\" onClick={onClick} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nconst Api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  timeout: 300000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\nApi.interceptors.request.use(async (config) => {\r\n  var token = window.localStorage.getItem(\"token\");\r\n\r\n  var newConfig = config;\r\n  if (token) {\r\n    newConfig = {\r\n      ...config,\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n  }\r\n  return newConfig;\r\n});\r\nApi.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          window.location.href = \"/login\";\r\n          break;\r\n        case 403:\r\n          window.location.href = \"/ForBid\";\r\n          break;\r\n        case 500:\r\n          window.location.href = \"/ServerError\";\r\n          break;\r\n        default:\r\n          return Promise.reject(error.response?.data);\r\n      }\r\n    }\r\n    return Promise.reject(error?.response?.data);\r\n  },\r\n);\r\n\r\nexport default Api;\r\n","import Api from \"./Api.js\";\r\n\r\nconst baseApiUrl = \"/chats\";\r\n\r\nconst chatApi = {\r\n  getAll: () => {\r\n    const url = `${baseApiUrl}`;\r\n    return Api.get(url);\r\n  },\r\n  getById: (chatId, params) => {\r\n    const url = `${baseApiUrl}/${chatId}`;\r\n    return Api.get(url, { params });\r\n  },\r\n  sendMessage: (chatId, content) => {\r\n    const url = `${baseApiUrl}/${chatId}/send`;\r\n    return Api.post(url, content);\r\n  },\r\n  sendImage: (chatId, content) => {\r\n    const url = `${baseApiUrl}/${chatId}/sendImage`;\r\n\r\n    Api.interceptors.request.use(async (config) => {\r\n      var token = window.localStorage.getItem(\"token\");\r\n      var newConfig = {};\r\n      if (token) {\r\n        newConfig = {\r\n          ...config,\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n      }\r\n      return newConfig;\r\n    });\r\n    return Api.post(url, content);\r\n  },\r\n  updateGroupAvatar: (chatId, content) => {\r\n    const url = `${baseApiUrl}/${chatId}/avatar`;\r\n\r\n    Api.interceptors.request.use(async (config) => {\r\n      var token = window.localStorage.getItem(\"token\");\r\n      var newConfig = {};\r\n      if (token) {\r\n        newConfig = {\r\n          ...config,\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n      }\r\n      return newConfig;\r\n    });\r\n    return Api.patch(url, content);\r\n  },\r\n  createGroupChat: (content) => {\r\n    const url = `${baseApiUrl}/group`;\r\n    return Api.post(url, content);\r\n  },\r\n  updateGroupChat: (chatId, content) => {\r\n    const url = `${baseApiUrl}/${chatId}`;\r\n    return Api.patch(url, content);\r\n  },\r\n  createPrivateChat: (content) => {\r\n    const url = `${baseApiUrl}/private`;\r\n    return Api.post(url, content);\r\n  },\r\n};\r\n\r\nexport default chatApi;\r\n","import jwt from \"jwt-decode\";\r\nimport Api from \"./Api.js\";\r\n\r\nconst baseApiUrl = \"/users\";\r\n\r\nconst userApi = {\r\n  isLogin: () => {\r\n    var token = window.localStorage.getItem(\"token\");\r\n    if (token && typeof token !== \"undefined\") {\r\n      if (jwt(token).exp < Date.now() / 1000) {\r\n        localStorage.clear();\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  },\r\n  login: (content) => {\r\n    const url = `${baseApiUrl}/login`;\r\n    return Api.post(url, content);\r\n  },\r\n  register: (content) => {\r\n    const url = `${baseApiUrl}/register`;\r\n    return Api.post(url, content);\r\n  },\r\n  checkUserNameExists: (userName) => {\r\n    if (userName) {\r\n      const url = `${baseApiUrl}/${userName}/isExists`;\r\n      return Api.get(url);\r\n    }\r\n    return Promise.reject();\r\n  },\r\n  getFriendList: () => {\r\n    const url = `${baseApiUrl}`;\r\n    return Api.get(url);\r\n  },\r\n  getCurrentUser: () => {\r\n    const url = `${baseApiUrl}/current`;\r\n    return Api.get(url);\r\n  },\r\n  updateUser: (content) => {\r\n    const url = `${baseApiUrl}`;\r\n    Api.interceptors.request.use(async (config) => {\r\n      var token = window.localStorage.getItem(\"token\");\r\n      var newConfig = {};\r\n      if (token) {\r\n        newConfig = {\r\n          ...config,\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n      }\r\n      return newConfig;\r\n    });\r\n    return Api.put(url, content);\r\n  },\r\n};\r\n\r\nexport default userApi;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.ae67bd1e.jpg\";","import DefaultAvatar from \"assets/img/default-avatar.jpg\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nImageCircle.propTypes = {\r\n  src: PropTypes.string,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nfunction ImageCircle({\r\n  src = DefaultAvatar,\r\n  className = \"\",\r\n  alt = \"Avatar\",\r\n  size = \"md\",\r\n}) {\r\n  const xsSize = \"h-6 w-6\";\r\n  const smSize = \"h-8 w-8\";\r\n  const mdSize = \"h-12 w-12\";\r\n  const lgSize = \"h-16 w-16\";\r\n  const xlSize = \"h-24 w-24\";\r\n  const fullSize = \"h-full w-full\";\r\n  var realSize;\r\n  switch (size) {\r\n    case \"xs\":\r\n      realSize = xsSize;\r\n      break;\r\n    case \"sm\":\r\n      realSize = smSize;\r\n      break;\r\n    case \"lg\":\r\n      realSize = lgSize;\r\n      break;\r\n    case \"xl\":\r\n      realSize = xlSize;\r\n      break;\r\n    case \"full\":\r\n      realSize = fullSize;\r\n      break;\r\n    default:\r\n      realSize = mdSize;\r\n  }\r\n  return (\r\n    <>\r\n      <img\r\n        className={\r\n          realSize +\r\n            \" \" +\r\n            \"select-none  rounded-full object-cover \" +\r\n            \" \" +\r\n            className ?? \"\"\r\n        }\r\n        src={!src || src === \"\" ? DefaultAvatar : src}\r\n        alt={alt}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageCircle;\r\n","const constants = {\r\n  chatType: {\r\n    PRIVATE: 1,\r\n    GROUP: 2,\r\n  },\r\n  NO_NAME_GROUP: \"No name\",\r\n};\r\n\r\nexport default constants;\r\n","import { setSelectedId } from \"app/chatSlice\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction ChatList() {\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  function handleClick(id) {\r\n    if (id !== selectedId) {\r\n      const action = setSelectedId(id);\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"search\"\r\n        className=\"my-3 rounded-3xl bg-gray-100 px-4 py-2 focus:ring-2 focus:ring-green-400 focus:ring-opacity-50 outline-none transition-all duration-200 w-full dark:bg-gray-700 dark:text-white\"\r\n        placeholder=\"Search chat\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n      />\r\n      <div className=\"h-full space-y-2 overflow-y-auto\">\r\n        {chats &&\r\n          getCurrentChats(chats, keyword).map((chat, index) => {\r\n            const currentUserName = currentUser.userName;\r\n\r\n            // check current user still exist in chat (remove participant case)\r\n            var isValid = chat.participants.some(\r\n              (x) => x.userName === currentUserName,\r\n            );\r\n            if (!isValid) {\r\n              return;\r\n            }\r\n\r\n            const friend =\r\n              chat.participants.length > 1\r\n                ? chat.participants\r\n                    ?.filter((x) => x.userName !== currentUserName)\r\n                    .shift()\r\n                : currentUser;\r\n            let lastMessage = {};\r\n            if (chat.messages?.length !== 0) {\r\n              lastMessage = chat.messages?.reduce((a, b) =>\r\n                a.dateCreated > b.dateCreated ? a : b,\r\n              );\r\n            }\r\n            return (\r\n              <div\r\n                key={Date.now() + index}\r\n                className={\r\n                  \"select-none w-full h-20 flex flex-start cursor-pointer hover:bg-gray-100 p-2 rounded-lg transition-all duration-200 ease-in dark:hover:bg-gray-800 dark:text-gray-200 \" +\r\n                  (selectedId === chat.id ? \"bg-gray-100 dark:bg-gray-800\" : \"\")\r\n                }\r\n                onClick={() => handleClick(chat.id)}\r\n              >\r\n                <ImageCircle\r\n                  src={\r\n                    chat.type === constants.chatType.PRIVATE\r\n                      ? friend?.avatarUrl\r\n                      : chat.groupAvatarUrl\r\n                  }\r\n                  size=\"lg\"\r\n                />\r\n\r\n                <div className=\"font-primary flex flex-col px-3 py-2 justify-between truncate\">\r\n                  <span className=\"text-gray-800 truncate dark:text-gray-200\">\r\n                    {chat.type === constants.chatType.PRIVATE\r\n                      ? friend?.fullName\r\n                      : chat.name ?? constants.NO_NAME_GROUP}\r\n                  </span>\r\n                  <div className=\"flex\">\r\n                    <span className=\"mr-2 text-sm max-w-150 text-gray-500 truncate\">\r\n                      {lastMessage.content ?? \"\"}\r\n                    </span>\r\n                    <span className=\"text-sm flex-grow text-gray-500 truncate\">\r\n                      {moment(\r\n                        new Date(lastMessage.dateCreated ?? chat.dateCreated),\r\n                        \"YYYYMMDD\",\r\n                      ).fromNow()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n\r\nfunction getCurrentChats(chats, keyword) {\r\n  var result = sortChat(chats);\r\n  result = searchChat(result, keyword);\r\n  return result;\r\n}\r\n\r\nfunction sortChat(chats) {\r\n  if (chats) {\r\n    return [...chats].sort((chatA, chatB) => {\r\n      let lastMessageA = {};\r\n      let lastMessageB = {};\r\n      // check if chat no message => return date created of chat\r\n      if (chatA.messages?.length !== 0) {\r\n        lastMessageA = chatA.messages?.reduce((a, b) => {\r\n          return a.dateCreated > b.dateCreated ? a : b;\r\n        });\r\n      } else {\r\n        lastMessageA.dateCreated = chatA.dateCreated;\r\n      }\r\n      if (chatB.messages?.length !== 0) {\r\n        lastMessageB = chatB.messages?.reduce((a, b) =>\r\n          a.dateCreated > b.dateCreated ? a : b,\r\n        );\r\n      } else {\r\n        lastMessageB.dateCreated = chatB.dateCreated;\r\n      }\r\n\r\n      return lastMessageA?.dateCreated < lastMessageB?.dateCreated ? 1 : -1;\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchChat(chats, keyword) {\r\n  if (chats) {\r\n    return chats.filter((chat) => {\r\n      let isValid = chat.participants.some((x) => {\r\n        if (x.fullName.toLowerCase().includes(keyword.toLowerCase())) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return (\r\n        isValid || chat.name?.toLowerCase().includes(keyword.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info-icon.b4879a5e.svg\";","export default __webpack_public_path__ + \"static/media/left-arrow-icon.07714e5b.svg\";","export default __webpack_public_path__ + \"static/media/emoji.21d0cbf4.svg\";","export default __webpack_public_path__ + \"static/media/image-icon.c8ad9f46.svg\";","export default __webpack_public_path__ + \"static/media/send-icon.666dadc9.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nClickableIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nfunction ClickableIcon({ className, icon, alt, onClick, onBlur }) {\r\n  return (\r\n    <>\r\n      <div\r\n        onBlur={onBlur}\r\n        onClick={onClick}\r\n        className={\r\n          \"p-1 rounded-full hover:bg-gray-200 active:bg-gray-300 dark:hover:bg-gray-600 dark:active:bg-gray-700 transition-all duration-200 cursor-pointer ease-in active:scale-90 active:transform \" +\r\n          (className ?? \"\")\r\n        }\r\n      >\r\n        <img\r\n          alt={alt ?? \"Clickable Icon\"}\r\n          src={icon}\r\n          onClick={onClick}\r\n          className=\"w-full\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ClickableIcon;\r\n","import chatApi from \"api/chatApi\";\r\nimport { setIsLoading } from \"app/appSlice\";\r\nimport EmojiIcon from \"assets/icons/emoji.svg\";\r\nimport ImageIcon from \"assets/icons/image-icon.svg\";\r\nimport SendIconNormal from \"assets/icons/send-icon.svg\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nChatInput.propTypes = {\r\n  chatId: PropTypes.number,\r\n};\r\n\r\nfunction ChatInput({ chatId }) {\r\n  const [content, setContent] = useState(\"\");\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [isOpenEmoji, setIsOpenEmoji] = useState(false);\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  async function onSendMessage(e) {\r\n    e.preventDefault();\r\n    if (!content) {\r\n      return;\r\n    }\r\n\r\n    var request = { content };\r\n    await chatApi.sendMessage(chatId, request);\r\n\r\n    setContent(\"\");\r\n  }\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject);\r\n    if (chosenEmoji?.emoji) {\r\n      setContent(content + chosenEmoji?.emoji);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenEmoji && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenEmoji(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenEmoji]);\r\n\r\n  async function sendImage(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Image\", file);\r\n\r\n    dispatch(setIsLoading(true));\r\n    await chatApi.sendImage(chatId, formData);\r\n    dispatch(setIsLoading(false));\r\n  }\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => onSendMessage(e)}\r\n        className=\"flex justify-between items-center space-x-1 pl-4 pr-2 md:pr-6 z-0\"\r\n      >\r\n        <div className=\"relative w-full flex\">\r\n          <input\r\n            id=\"imageFile\"\r\n            type=\"file\"\r\n            hidden\r\n            accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n            onChange={sendImage}\r\n          />\r\n          <label htmlFor=\"imageFile\">\r\n            <ClickableIcon className=\"h-10 w-10 p-2 mr-2\" icon={ImageIcon} />\r\n          </label>\r\n          <input\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Aa\"\r\n            className=\"bg-gray-200 dark:bg-gray-800 rounded-3xl w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 relative\"\r\n          />\r\n          <div ref={ref} position=\"relative\">\r\n            <ClickableIcon\r\n              className=\"absolute h-10 w-10 p-2 right-1 top-0\"\r\n              icon={EmojiIcon}\r\n              onClick={() => setIsOpenEmoji(!isOpenEmoji)}\r\n            />\r\n            <div\r\n              className={\r\n                \"animate-fade absolute right-0 bottom-full \" +\r\n                \" \" +\r\n                (isOpenEmoji ? \"visible\" : \"invisible\")\r\n              }\r\n            >\r\n              <Picker onEmojiClick={onEmojiClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button>\r\n          <ClickableIcon\r\n            disableAutoFocus\r\n            icon={SendIconNormal}\r\n            className=\"w-12 h-12 p-3\"\r\n          />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import Button from \"components/Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nConfirmModal.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  confirmButtonTitle: PropTypes.string,\r\n  confirmButtonAction: PropTypes.func,\r\n};\r\n\r\nfunction ConfirmModal({\r\n  title,\r\n  isOpen,\r\n  content = \"Are you sure?\",\r\n  closeAction,\r\n  confirmButtonTitle,\r\n  confirmButtonAction,\r\n}) {\r\n  return (\r\n    isOpen && (\r\n      <div className=\"px-4 animate-fade h-screen fixed inset-0 w-screen flex justify-center items-center bg-gray-500 dark:bg-gray-900 dark:bg-opacity-50 bg-opacity-30 z-50\">\r\n        <div className=\"bg-white dark:bg-gray-800 dark:border-gray-500 py-8 px-8 w-full md:w-2/3 lg:w-2/5 flex flex-col justify-between items-start rounded-xl space-y-6\">\r\n          <h3 className=\"font-semibold text-2xl break-words dark:text-gray-200\">\r\n            {title !== \"\" ? title : \"Notification\"}\r\n          </h3>\r\n          <span className=\"break-words dark:text-gray-200\">{content}</span>\r\n          <div className=\"w-full flex justify-end space-x-2\">\r\n            <Button outline content=\"No\" onClick={closeAction} />\r\n            <Button\r\n              content={confirmButtonTitle ?? \"Ok\"}\r\n              onClick={confirmButtonAction}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import chatApi from \"api/chatApi\";\r\nimport userApi from \"api/userApi\";\r\nimport { setIsLoading } from \"app/appSlice\";\r\nimport Button from \"components/Button\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport Popup from \"components/Popup\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction EditChat({ isOpen, setIsOpen, chat }) {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  const [groupName, setGroupName] = useState(chat.name);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [selectedFriendList, setSelectedFriendList] = useState(\r\n    chat.participants,\r\n  );\r\n\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setSelectedFriendList(chat.participants);\r\n    setGroupName(chat.name);\r\n  }, [chat]);\r\n\r\n  async function handleEditChat() {\r\n    var currentParticipantUserNames = chat.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantFullNamesToAdd = [];\r\n    var participantFullNamesToRemove = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedFriendList.forEach((user) => {\r\n      if (!currentParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToAdd.push(user.fullName);\r\n      }\r\n    });\r\n    chat.participants.forEach((user) => {\r\n      if (!selectedParticipantUserNames.some((x) => x === user.userName)) {\r\n        participantFullNamesToRemove.push(user.fullName);\r\n        participantUserNamesToRemove.push(user.userName);\r\n      }\r\n    });\r\n\r\n    if (participantFullNamesToRemove.length > 0) {\r\n      var content = \"\";\r\n\r\n      if (\r\n        participantUserNamesToRemove.some((x) => x === currentUser.userName)\r\n      ) {\r\n        if (participantFullNamesToRemove.length === 1) {\r\n          content = \"Do you want to leave this group?\";\r\n          openModal(content);\r\n          return;\r\n        } else {\r\n          content = \"Do you want to leave this group and remove \";\r\n        }\r\n      } else {\r\n        content = \"Do you want to remove \";\r\n      }\r\n\r\n      participantFullNamesToRemove.forEach((fullName, index) => {\r\n        if (participantUserNamesToRemove[index] !== currentUser.userName) {\r\n          content += `'${fullName}'`;\r\n          if (index !== participantFullNamesToRemove.length - 1) {\r\n            content += \", \";\r\n          }\r\n        }\r\n      });\r\n\r\n      content += \" from this chat?\";\r\n      openModal(content);\r\n    } else {\r\n      await submitEditChat();\r\n    }\r\n  }\r\n  async function submitEditChat() {\r\n    await dispatch(setIsLoading(true));\r\n\r\n    var currentParticipantUserNames = chat.participants.map((x) => x.userName);\r\n    var selectedParticipantUserNames = selectedFriendList.map(\r\n      (x) => x.userName,\r\n    );\r\n    var participantUserNamesToAdd = [];\r\n    var participantUserNamesToRemove = [];\r\n\r\n    // create request with added username and removed username\r\n    selectedParticipantUserNames.forEach((userName) => {\r\n      if (!currentParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToAdd.push(userName);\r\n      }\r\n    });\r\n    currentParticipantUserNames.forEach((userName) => {\r\n      if (!selectedParticipantUserNames.includes(userName)) {\r\n        participantUserNamesToRemove.push(userName);\r\n      }\r\n    });\r\n\r\n    const request = {\r\n      newGroupName: groupName,\r\n      participantUserNamesToAdd,\r\n      participantUserNamesToRemove,\r\n    };\r\n\r\n    chatApi\r\n      .updateGroupChat(chat.id, request)\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\" ? error : \"Something went wrong!\";\r\n\r\n        openPopup(\"Failed\", message);\r\n      });\r\n    closeModal();\r\n    setIsOpen(false);\r\n    await dispatch(setIsLoading(false));\r\n  }\r\n\r\n  async function updateGroupAvatar(e) {\r\n    var file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"Avatar\", file);\r\n\r\n    dispatch(setIsLoading(true));\r\n    await chatApi\r\n      .updateGroupAvatar(chat.id, formData)\r\n      .then((response) => {\r\n        openPopup(\"Success\", \"Update group avatar successfully!\");\r\n        dispatch(setIsLoading(false));\r\n      })\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\" ? error : \"Something went wrong!\";\r\n\r\n        openPopup(\"Failed\", message);\r\n        dispatch(setIsLoading(false));\r\n      });\r\n    dispatch(setIsLoading(false));\r\n  }\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n  function openModal(content) {\r\n    setIsOpenModal(true);\r\n    setModalContent(content);\r\n  }\r\n  function closeModal() {\r\n    setIsOpenModal(false);\r\n    setModalContent(\"\");\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 z-30\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"md:px-5 md:py-3 flex flex-col bg-white dark:bg-gray-800 dark:border-gray-700 rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={() => setPopup({ isOpen: false })}\r\n        />\r\n        <ConfirmModal\r\n          isOpen={isOpenModal}\r\n          closeAction={() => setIsOpenModal(false)}\r\n          title=\"Are you sure?\"\r\n          content={modalContent}\r\n          confirmButtonTitle=\"Yes\"\r\n          confirmButtonAction={submitEditChat}\r\n        />\r\n        <div className=\"flex px-10 pt-6 pb-5 space-x-7 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-2xl text-green-600\">Chat info!</h3>\r\n        </div>\r\n        <div className=\"px-10 space-y-4\">\r\n          {chat.type === constants.chatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold dark:text-gray-200 text-lg\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-gray-700 bg-gray-100  rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold dark:text-gray-200 text-lg\"\r\n                >\r\n                  Add Members\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-gray-700 bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-gray-700 border border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none z-10 shadow-xl\">\r\n                        <h4 className=\"font-semibold mb-2\">Friend list</h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-gray-600 bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                                {friend.fullName ?? \"Unknown\"}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold dark:text-gray-200 text-lg\"\r\n                >\r\n                  Members <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white border dark:bg-gray-700 dark:border-gray-600 border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none\">\r\n                  {selectedFriendList.map((friend, index) => (\r\n                    <div\r\n                      onClick={() => {\r\n                        var result = [...selectedFriendList];\r\n                        var i = result.findIndex(\r\n                          (x) => x.userName === friend.userName,\r\n                        );\r\n                        if (i >= 0) {\r\n                          result.splice(i, 1);\r\n                          setSelectedFriendList(result);\r\n                        }\r\n                      }}\r\n                      key={Math.random() + index}\r\n                      className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2 dark:hover:bg-red-500 dark:bg-gray-600 bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                    >\r\n                      <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                      <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                        {friend.fullName ?? \"Unknown\"}\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 mr-2 flex flex-col\">\r\n                <label\r\n                  htmlFor=\"avatar\"\r\n                  className=\"dark:text-gray-200 text-lg font-semibold \"\r\n                >\r\n                  Group Avatar\r\n                </label>\r\n                <input\r\n                  id=\"avatar\"\r\n                  onChange={updateGroupAvatar}\r\n                  type=\"file\"\r\n                  accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <div className=\"font-bold dark:text-gray-200\">\r\n                Created user:{\" \"}\r\n                <span className=\"font-normal\">{chat.creatorUserName}</span>\r\n              </div>\r\n              <div className=\"font-bold dark:text-gray-200\">\r\n                Created date:{\" \"}\r\n                <span className=\"font-normal\">\r\n                  {moment(new Date(chat.dateCreated), \"YYYYMMDD\").format(\r\n                    \"MMMM Do YYYY, h:mm:ss a\",\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end px-10 py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            {chat.type === constants.chatType.GROUP ? (\r\n              <Button content=\"Save\" onClick={() => handleEditChat()} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default EditChat;\r\n","import { appendMessageToChat, setSelectedId } from \"app/chatSlice\";\r\nimport InfoIcon from \"assets/icons/info-icon.svg\";\r\nimport LeftArrowIcon from \"assets/icons/left-arrow-icon.svg\";\r\nimport ChatInput from \"components/ChatInput\";\r\nimport ClickableIcon from \"components/ClickableIcon\";\r\nimport EditChat from \"components/EditChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport useMessagePagination from \"hooks/useMessagePagination\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction ChatWindow({ chat }) {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const [showTimeIndexes, setShowTimeIndexes] = useState([]);\r\n  const [isOpenInfoPopup, setIsOpenInfoPopup] = useState(false);\r\n\r\n  let currentUserName = currentUser.userName;\r\n\r\n  const friend =\r\n    chat.participants.length > 1\r\n      ? chat.participants?.filter((x) => x.userName !== currentUserName).shift()\r\n      : currentUser;\r\n\r\n  function backToChats() {\r\n    const action = setSelectedId(0);\r\n    dispatch(action);\r\n  }\r\n\r\n  function handleMessageClick(index) {\r\n    var result = [...showTimeIndexes];\r\n    const i = result.findIndex((x) => x === index);\r\n    if (i >= 0) {\r\n      result = result.filter((x) => x !== index);\r\n    } else {\r\n      result.push(index);\r\n    }\r\n    setShowTimeIndexes(result);\r\n  }\r\n\r\n  // infinity scrolling\r\n  const [page, setPage] = useState(1);\r\n  const { appendChat, hasMore, loading, error } = useMessagePagination(\r\n    chat,\r\n    page,\r\n  );\r\n  const endMessageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(appendMessageToChat(appendChat));\r\n  }, [appendChat]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (endMessageRef) {\r\n      endMessageRef.current.scrollIntoView();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chat.page < 2) {\r\n      scrollToBottom();\r\n    }\r\n  }, [chat]);\r\n\r\n  function loadMore() {\r\n    if (page < chat.pageCount) {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <EditChat\r\n        isOpen={isOpenInfoPopup}\r\n        setIsOpen={setIsOpenInfoPopup}\r\n        chat={chat}\r\n      />\r\n      <div className=\"flex flex-col w-full h-full pb-4\">\r\n        {/* Header chat window */}\r\n        <div className=\"w-full border-b-2 border-gray-200 dark:border-gray-700 flex justify-between items-center md:p-4 p-3\">\r\n          <div className=\"flex justify-between items-center space-x-3\">\r\n            <img\r\n              src={LeftArrowIcon}\r\n              alt=\"Arrow icon\"\r\n              className=\"h-5 w-5 md:hidden cursor-pointer\"\r\n              onClick={backToChats}\r\n            />\r\n            <ImageCircle src={chat.groupAvatarUrl ?? friend?.avatarUrl} />\r\n            <span className=\"text-lg font-semibold dark:text-gray-200 truncate w-60 md:w-96\">\r\n              {chat.type === constants.chatType.PRIVATE\r\n                ? friend?.fullName\r\n                : chat.name ?? constants.NO_NAME_GROUP}\r\n            </span>\r\n          </div>\r\n          <ClickableIcon\r\n            className=\"h-10 w-10 p-2 mr-2\"\r\n            icon={InfoIcon}\r\n            onClick={() => setIsOpenInfoPopup(!isOpenInfoPopup)}\r\n          />\r\n        </div>\r\n        {/* End header chat window */}\r\n\r\n        {/* Chat content */}\r\n        <div className=\"flex-grow overflow-y-auto overflow-x-hidden px-4 pb-4 pt-2 space-y-1 flex flex-col\">\r\n          {loading && (\r\n            <div className=\"text-gray-500 text-center my-2\">Loading...</div>\r\n          )}\r\n          {hasMore && !loading && (\r\n            <div className=\"flex\">\r\n              <button\r\n                className=\"mx-auto px-4 bg-gray-200 py-2 rounded-lg transform active:scale-95 hover:bg-gray-300 dark:hover:bg-gray-800 dark:bg-gray-700 dark:text-gray-300 text-sm transition-all duration-200\"\r\n                onClick={loadMore}\r\n              >\r\n                Load more messages...\r\n              </button>\r\n            </div>\r\n          )}\r\n          {!hasMore && (\r\n            <div className=\"text-gray-500 text-sm text-center mb-2\">\r\n              Date created:{\" \"}\r\n              {moment(new Date(chat.dateCreated), \"YYYYMMDD\").format(\r\n                \"MMMM Do YYYY, h:mm:ss a\",\r\n              )}\r\n            </div>\r\n          )}\r\n          <div>{error && \"Error\"}</div>\r\n          {[...chat.messages]\r\n            ?.sort((messageA, messageB) => {\r\n              return messageA.dateCreated > messageB.dateCreated ? 1 : -1;\r\n            })\r\n            .map((message, index) =>\r\n              message.senderUserName === currentUser.userName ? (\r\n                <>\r\n                  <div\r\n                    key={index + Math.random()}\r\n                    className=\"flex flex-col items-end w-full\"\r\n                  >\r\n                    {showTimeIndexes.includes(index) && (\r\n                      <span className=\"transition-all animate-fade text-sm text-gray-400 left-0 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-right\">\r\n                        {moment(\r\n                          new Date(message.dateCreated),\r\n                          \"YYYYMMDD\",\r\n                        ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"max-w-300 rounded-lg shadow transition-all duration-200 cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message image\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className={\r\n                          \"text-white rounded-3xl px-5 py-3 break-word rounded-br-none cursor-pointer overflow-x-auto max-w-3/4\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-green-600 dark:bg-green-800\"\r\n                            : \"bg-gradient-to-br from-green-400 to-green-600 dark:from-green-500 dark:to-green-800 shadow-md\")\r\n                        }\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div\r\n                  key={index + Math.random()}\r\n                  className=\"flex items-end space-x-2\"\r\n                >\r\n                  <ImageCircle\r\n                    src={\r\n                      chat.participants\r\n                        .filter((x) => x.userName === message.senderUserName)\r\n                        .shift()?.avatarUrl\r\n                    }\r\n                    size=\"sm\"\r\n                  />\r\n                  <div className=\"flex flex-col w-full items-start\">\r\n                    {(showTimeIndexes.includes(index) ||\r\n                      chat.type === constants.chatType.GROUP) && (\r\n                      <span className=\"transition-all animate-fade text-sm text-gray-400 bottom-full mb-1 ml-1 space-x-2 md:w-80 w-60 truncate overflow-ellipsis text-left\">\r\n                        {message.senderFullName +\r\n                          \" - \" +\r\n                          moment(\r\n                            new Date(message.dateCreated),\r\n                            \"YYYYMMDD\",\r\n                          ).calendar() ?? \"\"}\r\n                      </span>\r\n                    )}\r\n                    {message.imageUrl ? (\r\n                      <img\r\n                        onClick={() => handleMessageClick(index)}\r\n                        onClick={() => handleMessageClick(index)}\r\n                        className=\"max-w-300 rounded-lg shadow cursor-pointer\"\r\n                        src={message.imageUrl}\r\n                        alt=\"Message image\"\r\n                      />\r\n                    ) : (\r\n                      <span\r\n                        className={\r\n                          \" rounded-3xl px-5 py-3 break-word rounded-bl-none shadow-sm cursor-pointer overflow-x-auto max-w-3/4\" +\r\n                          \" \" +\r\n                          (showTimeIndexes.includes(index)\r\n                            ? \"bg-gray-300 dark:bg-gray-700\"\r\n                            : \"bg-gradient-to-br from-gray-100 to-gray-300 dark:from-gray-500 dark:to-gray-600 \")\r\n                        }\r\n                        onClick={() => handleMessageClick(index)}\r\n                      >\r\n                        {message.content}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ),\r\n            )}\r\n          <div ref={endMessageRef}></div>\r\n        </div>\r\n        {/* End chat content */}\r\n\r\n        <ChatInput chatId={chat.id} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import { useEffect, useState } from \"react\";\r\nimport chatApi from \"api/chatApi\";\r\n\r\nexport default function useMessagePagination(currentChat, page) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [appendChat, setAppendChat] = useState({});\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (page > 1 && hasMore) {\r\n      setLoading(true);\r\n      setError(false);\r\n\r\n      const request = { page };\r\n      chatApi\r\n        .getById(currentChat.id, request)\r\n        .then((response) => {\r\n          setAppendChat(response);\r\n          setHasMore(page < response.pageCount);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n        });\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    setHasMore(page < currentChat.pageCount);\r\n  }, [currentChat]);\r\n\r\n  return { loading, error, appendChat, hasMore };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/dark-mode-icon.8e1e7759.svg\";","export default __webpack_public_path__ + \"static/media/menu-icon.02afc26a.svg\";","export default __webpack_public_path__ + \"static/media/new-chat-icon.8f8e0f2b.svg\";","export default __webpack_public_path__ + \"static/media/sign-out-icon.0e12494d.svg\";","import chatApi from \"api/chatApi\";\r\nimport userApi from \"api/userApi\";\r\nimport { setIsLoading, setPopup } from \"app/appSlice\";\r\nimport { setSelectedId } from \"app/chatSlice\";\r\nimport Button from \"components/Button\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport constants from \"utils/constants\";\r\n\r\nfunction CreateChat({ isOpen, setIsOpen }) {\r\n  const [selectedMode, setSelectedMode] = useState(constants.chatType.PRIVATE);\r\n  const [isOpenFriendList, setIsOpenFriendList] = useState(false);\r\n  const [isValidButton, setIsValidButton] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [selectedFriendList, setSelectedFriendList] = useState([]);\r\n\r\n  const ref = useRef();\r\n  const friendListRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (\r\n        isOpenFriendList &&\r\n        friendListRef.current &&\r\n        !friendListRef.current.contains(e.target)\r\n      ) {\r\n        setIsOpenFriendList(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenFriendList]);\r\n\r\n  useEffect(() => {\r\n    userApi.getFriendList().then((response) => {\r\n      if (response) {\r\n        setFriendList(response);\r\n      }\r\n    });\r\n    return () => {\r\n      setSelectedFriendList([]);\r\n      setGroupName(\"\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedMode === constants.chatType.GROUP) {\r\n      var result = selectedFriendList?.length >= 2 && groupName;\r\n      setIsValidButton(result);\r\n    } else if (selectedMode === constants.chatType.PRIVATE) {\r\n      setIsValidButton(selectedFriendList?.length !== 0 ? true : false);\r\n    }\r\n  }, [selectedFriendList, groupName, selectedMode]);\r\n\r\n  async function handleCreateGroup() {\r\n    dispatch(setIsLoading(true));\r\n\r\n    if (isValidButton) {\r\n      if (selectedMode === constants.chatType.GROUP) {\r\n        const request = {\r\n          participantUserNames: selectedFriendList.map((x) => x.userName),\r\n          name: groupName,\r\n        };\r\n        chatApi\r\n          .createGroupChat(request)\r\n          .then((response) => {\r\n            if (response.id) {\r\n              dispatch(setSelectedId(response.id));\r\n            }\r\n            setSelectedFriendList([]);\r\n            setGroupName(\"\");\r\n          })\r\n          .catch((error) => {\r\n            const message =\r\n              typeof error === \"string\" ? error : \"Something went wrong!\";\r\n\r\n            openPopup(\"Failed\", message);\r\n          });\r\n      } else if (selectedMode === constants.chatType.PRIVATE) {\r\n        const request = {\r\n          participantUserName: selectedFriendList\r\n            .map((x) => x.userName)\r\n            .shift(),\r\n        };\r\n        chatApi\r\n          .createPrivateChat(request)\r\n          .then((response) => {\r\n            if (response.id) {\r\n              dispatch(setSelectedId(response.id));\r\n            }\r\n            setSelectedFriendList([]);\r\n            setGroupName(\"\");\r\n            setIsOpen(false);\r\n          })\r\n          .catch((error) => {\r\n            var message =\r\n              typeof error === \"string\" ? error : \"Something went wrong!\";\r\n\r\n            setSelectedFriendList([]);\r\n            setGroupName(\"\");\r\n            openPopup(\"Failed\", message);\r\n          });\r\n      }\r\n    }\r\n    dispatch(setIsLoading(false));\r\n  }\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed grid place-items-center h-screen w-screen px-4 z-30\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"md:px-5 md:py-3 flex flex-col bg-white dark:bg-gray-800 dark:border-gray-700 rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300\" +\r\n          \" \" +\r\n          (isOpenFriendList ? \"mb-16\" : \"\")\r\n        }\r\n      >\r\n        <div className=\"flex px-10 pt-6 pb-5 space-x-7 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-2xl text-green-600\">New chat!</h3>\r\n\r\n          <div className=\"relative flex rounded-md items-center border border-green-500 cursor-pointer\">\r\n            <div\r\n              className={\r\n                \"absolute bg-gradient-to-br from-green-400 to-green-600 w-1/2 h-full rounded-md transition-all duration-200 z-0\" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.GROUP\r\n                  ? \"transform translate-x-full left-0\"\r\n                  : \"left-0 \")\r\n              }\r\n            ></div>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.PRIVATE\r\n                  ? \"text-white\"\r\n                  : \" text-green-600\")\r\n              }\r\n              onClick={() => setSelectedMode(constants.chatType.PRIVATE)}\r\n            >\r\n              Private\r\n            </span>\r\n            <span\r\n              className={\r\n                \" px-3 py-2 z-10 text-sm select-none \" +\r\n                \" \" +\r\n                (selectedMode === constants.chatType.GROUP\r\n                  ? \"text-white\"\r\n                  : \" text-green-600\")\r\n              }\r\n              onClick={() => setSelectedMode(constants.chatType.GROUP)}\r\n            >\r\n              Group\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-10 space-y-4\">\r\n          {selectedMode === constants.chatType.GROUP ? (\r\n            <>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"groupName\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Group name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"groupName\"\r\n                  value={groupName}\r\n                  onChange={(e) => setGroupName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"dark:bg-gray-700 bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n              </div>\r\n              <div ref={friendListRef} className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Find Friends\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"search\"\r\n                    type=\"search\"\r\n                    onFocus={() => setIsOpenFriendList(true)}\r\n                    value={keyword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className=\"dark:bg-gray-700 bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                  />\r\n                  {isOpenFriendList && (\r\n                    <>\r\n                      <div className=\"animate-fade absolute top-full bg-white dark:bg-gray-700 border border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none z-10 shadow-xl\">\r\n                        <h4 className=\"font-semibold mb-2 dark:text-gray-200\">\r\n                          Friend list\r\n                        </h4>\r\n                        {friendList\r\n                          .filter(\r\n                            (x) =>\r\n                              (x.fullName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase()) ||\r\n                                x.userName\r\n                                  ?.toLowerCase()\r\n                                  .includes(keyword?.toLowerCase())) &&\r\n                              !selectedFriendList.some(\r\n                                (selected) => selected.userName === x.userName,\r\n                              ),\r\n                          )\r\n                          .map((friend, index) => (\r\n                            <div\r\n                              onClick={() => {\r\n                                var result = [...selectedFriendList];\r\n                                if (\r\n                                  !result.some(\r\n                                    (x) => x.userName === friend.userName,\r\n                                  )\r\n                                ) {\r\n                                  result.push(friend);\r\n                                  setSelectedFriendList(result);\r\n                                }\r\n                              }}\r\n                              key={Math.random() + index}\r\n                              className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-gray-600 bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                            >\r\n                              <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                              <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                                {friend.fullName ?? \"Unknown\"}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(At least 2 people. Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-gray-700 border dark:border-gray-600 border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none\">\r\n                  {selectedFriendList.map((friend, index) => (\r\n                    <div\r\n                      onClick={() => {\r\n                        var result = [...selectedFriendList];\r\n                        var i = result.findIndex(\r\n                          (x) => x.userName === friend.userName,\r\n                        );\r\n                        if (i >= 0) {\r\n                          result.splice(i, 1);\r\n                          setSelectedFriendList(result);\r\n                        }\r\n                      }}\r\n                      key={Math.random() + index}\r\n                      className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-gray-600 bg-gray-100 hover:bg-red-200 dark:hover:bg-red-500 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                    >\r\n                      <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                      <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                        {friend.fullName ?? \"Unknown\"}\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div ref={friendListRef} className=\"space-y-2\">\r\n              <label\r\n                htmlFor=\"selectFriend\"\r\n                className=\"font-semibold text-lg dark:text-gray-200\"\r\n              >\r\n                Select Friends\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"selectFriend\"\r\n                  type=\"search\"\r\n                  onFocus={() => setIsOpenFriendList(true)}\r\n                  value={keyword}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setKeyword(e.target.value)}\r\n                  className=\"dark:bg-gray-700 bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2 \"\r\n                />\r\n                {isOpenFriendList && (\r\n                  <>\r\n                    <div className=\"animate-fade absolute top-full bg-white dark:bg-gray-700 border border-gray-400 border-opacity-50 rounded-lg w-full space-y-1 max-h-72 overflow-y-auto select-none z-10 shadow-xl py-4 md:px-8 px-6 \">\r\n                      <h4 className=\"font-semibold mb-2 text-start dark:text-gray-200\">\r\n                        Friend list\r\n                      </h4>\r\n                      {friendList\r\n                        .filter(\r\n                          (x) =>\r\n                            (x.fullName\r\n                              ?.toLowerCase()\r\n                              .includes(keyword?.toLowerCase()) ||\r\n                              x.userName\r\n                                ?.toLowerCase()\r\n                                .includes(keyword?.toLowerCase())) &&\r\n                            !selectedFriendList.some(\r\n                              (selected) => selected.userName === x.userName,\r\n                            ),\r\n                        )\r\n                        .map((friend, index) => (\r\n                          <div\r\n                            onClick={() => {\r\n                              var result = [];\r\n                              result.push(friend);\r\n                              setIsOpenFriendList(false);\r\n                              setSelectedFriendList(result);\r\n                            }}\r\n                            key={Math.random() + index}\r\n                            className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-gray-600 bg-gray-100 hover:bg-green-200 dark:hover:bg-green-600 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300\"\r\n                          >\r\n                            <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                            <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                              {friend.fullName ?? \"Unknown\"}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label\r\n                  htmlFor=\"search\"\r\n                  className=\"font-semibold text-lg dark:text-gray-200\"\r\n                >\r\n                  Selected <span className=\"text-red-500\">*</span>{\" \"}\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    {\"(Click to remove)\"}\r\n                  </span>\r\n                </label>\r\n                <div className=\"bg-white dark:bg-gray-700 border dark:border-gray-600 border-gray-400 border-opacity-50 rounded-lg w-full py-4 md:px-8 px-6 space-y-1 max-h-72 overflow-y-auto select-none \">\r\n                  {selectedFriendList.map((friend, index) => {\r\n                    if (index === 0) {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            var result = [...selectedFriendList];\r\n                            var i = result.findIndex(\r\n                              (x) => x.userName === friend.userName,\r\n                            );\r\n                            if (i >= 0) {\r\n                              result.splice(i, 1);\r\n                              setSelectedFriendList(result);\r\n                            }\r\n                          }}\r\n                          key={Math.random() + index}\r\n                          className=\"h-full w-full rounded-lg px-3 py-2 flex items-center space-x-2  dark:bg-gray-600 bg-gray-100 hover:bg-red-200 cursor-pointer transform active:scale-100 hover:scale-105 hover:shadow-xl transition-all duration-300 dark:hover:bg-red-500\"\r\n                        >\r\n                          <ImageCircle size=\"xs\" src={friend.avatarUrl} />\r\n                          <span className=\"break-full w-full overflow-ellipsis truncate\">\r\n                            {friend.fullName ?? \"Unknown\"}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return <></>;\r\n                    }\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end px-10 py-6 space-x-4\">\r\n          <div className=\"space-x-2 flex items-center\">\r\n            <Button outline content=\"Close\" onClick={() => setIsOpen(false)} />\r\n            <Button\r\n              disabled={!isValidButton}\r\n              content=\"Create\"\r\n              onClick={() => handleCreateGroup()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default CreateChat;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport userApi from \"api/userApi\";\r\nimport { setIsLoading, setPopup } from \"app/appSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport Button from \"components/Button\";\r\n\r\nfunction UserInfo({ isOpen, setIsOpen, currentUser }) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [avatar, setAvatar] = useState({});\r\n\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser.firstName && currentUser.lastName) {\r\n      setFirstName(currentUser.firstName);\r\n      setLastName(currentUser.lastName);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  async function submit() {\r\n    await dispatch(setIsLoading(true));\r\n\r\n    const request = new FormData();\r\n    request.append(\"Avatar\", avatar);\r\n    request.append(\"FirstName\", firstName);\r\n    request.append(\"LastName\", lastName);\r\n\r\n    userApi\r\n      .updateUser(request)\r\n      .then((response) => {\r\n        dispatch(updateUser(response));\r\n        dispatch(setIsLoading(false));\r\n        openPopup(\"Success\", \"Update info successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\" ? error : \"Something went wrong!\";\r\n        dispatch(setIsLoading(false));\r\n        openPopup(\"Notification\", message);\r\n      });\r\n    setIsOpen(false);\r\n  }\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return isOpen ? (\r\n    <div className=\"animate-fade fixed inset-0 grid place-items-center h-screen w-screen px-4 z-30\">\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          \"md:px-5 md:py-3 flex flex-col dark:bg-gray-800 dark:border-gray-700 bg-white rounded-xl shadow-xl border border-gray-300 w-full md:w-5/6 lg:w-2/5 transition-all duration-300\"\r\n        }\r\n      >\r\n        <div className=\"flex px-10 pt-6 pb-5 space-x-7 justify-between h-full items-center\">\r\n          <h3 className=\"font-semibold text-2xl text-green-600\">User info!</h3>\r\n        </div>\r\n        <div className=\"px-10 space-y-4\">\r\n          <div className=\"mb-3 grid grid-cols-2 place-items-start \">\r\n            <div className=\"col-span-1 space-y-2 mr-2\">\r\n              <label\r\n                htmlFor=\"fistName\"\r\n                className=\"text-lg font-semibold dark:text-gray-200\"\r\n              >\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"firstName\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-gray-700 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n            </div>\r\n            <div className=\"col-span-1 space-y-2 ml-2\">\r\n              <label\r\n                htmlFor=\"lastName\"\r\n                className=\"text-lg font-semibold dark:text-gray-200\"\r\n              >\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                id=\"lastName\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 dark:bg-gray-700 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mr-2 flex flex-col\">\r\n            <label\r\n              htmlFor=\"avatar\"\r\n              className=\"text-lg font-semibold dark:text-gray-200\"\r\n            >\r\n              Avatar\r\n            </label>\r\n            <input\r\n              id=\"avatar\"\r\n              onChange={(e) => setAvatar(e.target.files[0])}\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpg, image/tiff, image/tif, image/jpeg\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end  py-6 space-x-4\">\r\n            <div className=\"space-x-2 flex items-center flex-end\">\r\n              <Button\r\n                outline\r\n                content=\"Close\"\r\n                onClick={() => setIsOpen(false)}\r\n              />\r\n              <Button content=\"Save\" onClick={() => submit()} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\nexport default UserInfo;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDarkMode() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var mode = window.localStorage.getItem(\"theme\");\r\n\r\n    if (mode === \"dark\") {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      setDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      window.document.documentElement.classList.add(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      window.document.documentElement.classList.remove(\"dark\");\r\n      window.localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return { darkMode, setDarkMode };\r\n}\r\n\r\nexport default useDarkMode;\r\n","import DarkModeIcon from \"assets/icons/dark-mode-icon.svg\";\r\nimport MenuIcon from \"assets/icons/menu-icon.svg\";\r\nimport NewChatIcon from \"assets/icons/new-chat-icon.svg\";\r\nimport SignOutIcon from \"assets/icons/sign-out-icon.svg\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport CreateChat from \"components/CreateChat\";\r\nimport ImageCircle from \"components/ImageCircle\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport useDarkMode from \"hooks/useDarkMode\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClickableIcon from \"../ClickableIcon\";\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func,\r\n};\r\n\r\nfunction Header({ logout }) {\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n\r\n  const [isOpenCreateChat, setIsOpenCreateChat] = useState(false);\r\n  const [isOpenUserInfo, setIsOpenUserInfo] = useState(false);\r\n  const [confirmModal, setConfirmModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    confirmButtonTitle: \"\",\r\n  });\r\n\r\n  const { darkMode, setDarkMode } = useDarkMode();\r\n\r\n  const userAvatar = currentUser.avatarUrl;\r\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      // If the menu is open and the clicked target is not within the menu,\r\n      // then close the menu\r\n      if (isOpenMenu && ref.current && !ref.current.contains(e.target)) {\r\n        setIsOpenMenu(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [isOpenMenu]);\r\n\r\n  function openConfirmModal(\r\n    content,\r\n    confirmButtonAction,\r\n    confirmButtonTitle = \"Yes\",\r\n    title,\r\n  ) {\r\n    const confirmModal = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n      confirmButtonTitle: confirmButtonTitle,\r\n      confirmButtonAction: confirmButtonAction,\r\n    };\r\n    setConfirmModal(confirmModal);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {confirmModal.isOpen && (\r\n        <ConfirmModal\r\n          isOpen={confirmModal.isOpen}\r\n          closeAction={() => setConfirmModal({ isOpen: false })}\r\n          title=\"Are you sure?\"\r\n          content={confirmModal.content}\r\n          confirmButtonTitle={confirmModal.confirmButtonTitle}\r\n          confirmButtonAction={confirmModal.confirmButtonAction}\r\n        />\r\n      )}\r\n      <UserInfo\r\n        currentUser={currentUser}\r\n        isOpen={isOpenUserInfo}\r\n        setIsOpen={setIsOpenUserInfo}\r\n      />\r\n      <CreateChat isOpen={isOpenCreateChat} setIsOpen={setIsOpenCreateChat} />\r\n      <div className=\"h-24 flex justify-between items-center\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div\r\n            className=\"transition-all duration-200 ring ring-green-500 p-1 transform active:scale-95 rounded-full cursor-pointer\"\r\n            onClick={() => setIsOpenUserInfo((x) => !x)}\r\n          >\r\n            <ImageCircle src={userAvatar} size=\"md\" />\r\n          </div>\r\n          <h1 className=\"font-bold text-3xl\">Chats</h1>\r\n        </div>\r\n        <div className=\"flex space-x-2 items-center\">\r\n          <ClickableIcon\r\n            icon={NewChatIcon}\r\n            onClick={() => setIsOpenCreateChat(true)}\r\n            className=\"dark:bg-gray-600\"\r\n          />\r\n          <div className=\"relative\" ref={ref}>\r\n            <ClickableIcon\r\n              icon={MenuIcon}\r\n              onClick={() => setIsOpenMenu(!isOpenMenu)}\r\n              className=\"dark:bg-gray-600\"\r\n            />\r\n            {isOpenMenu && (\r\n              <div className=\"animate-fade transition-all duration-200 absolute right-0 md:left-0 border border-gray-200 bg-white w-52 rounded-lg shadow-md overflow-hidden p-2 dark:bg-gray-800 dark:border-gray-700 mt-2 select-none\">\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-gray-700\"\r\n                  onClick={() => setDarkMode(!darkMode)}\r\n                >\r\n                  <img\r\n                    src={DarkModeIcon}\r\n                    alt=\"Dark mode icon\"\r\n                    className=\"w-8 h-8 dark:bg-gray-600 rounded-full p-1\"\r\n                  />\r\n                  <span>Dark Mode</span>\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center space-x-3 w-full pl-2 pr-4 py-2 rounded-md text-left hover:bg-gray-200 active:bg-gray-300 transition-all duration-200 transform active:scale-95 dark:hover:bg-gray-700\"\r\n                  onClick={() => {\r\n                    openConfirmModal(\"Do you want to log out?\", logout);\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={SignOutIcon}\r\n                    alt=\"Dark mode icon\"\r\n                    className=\"w-8 h-8 dark:bg-gray-600 rounded-full p-1\"\r\n                  />\r\n                  <span>Log Out</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport chatApi from \"api/chatApi\";\r\nimport userApi from \"api/userApi\";\r\nimport { setIsLoading, setPopup } from \"app/appSlice\";\r\nimport {\r\n  addChat,\r\n  addMessage,\r\n  editChat,\r\n  editGroupAvatar,\r\n  refreshChats,\r\n  setSelectedId,\r\n} from \"app/chatSlice\";\r\nimport { updateUser } from \"app/userSlice\";\r\nimport ChatList from \"components/ChatList\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport Header from \"components/Header\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Chat() {\r\n  const [connection, setConnection] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const chats = useSelector((state) => state.chats.chats);\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const selectedId = useSelector((state) => state.chats.selectedId);\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"token\");\r\n    connection.stop();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userApi.isLogin()) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    async function fetchData() {\r\n      dispatch(setIsLoading(true));\r\n      chatApi\r\n        .getAll()\r\n        .then((response) => {\r\n          const refreshChatAction = refreshChats(response.data);\r\n          dispatch(refreshChatAction);\r\n          dispatch(setIsLoading(false));\r\n        })\r\n        .catch((error) => {\r\n          var message =\r\n            typeof error === \"string\"\r\n              ? error\r\n              : \"Cannot get any chats. Please login and try again!\";\r\n          dispatch(setIsLoading(false));\r\n          openPopup(\"Error\", message);\r\n        });\r\n\r\n      userApi\r\n        .getCurrentUser()\r\n        .then((response) => {\r\n          dispatch(updateUser(response));\r\n          dispatch(setIsLoading(false));\r\n        })\r\n        .catch((error) => {\r\n          var message =\r\n            typeof error === \"string\"\r\n              ? error\r\n              : \"Cannot get any chats. Please login and try again!\";\r\n          dispatch(setIsLoading(false));\r\n          openPopup(\"Error\", message);\r\n        });\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // for realtime\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_SERVER_URL + \"/hubs/chats\", {\r\n        accessTokenFactory: () => localStorage.getItem(\"token\"),\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection && !connection.connectionStarted) {\r\n      connection\r\n        .start()\r\n        .then((result) => {\r\n          connection.on(\"ReceiveMessage\", (response) => {\r\n            const action = addMessage(response);\r\n            dispatch(action);\r\n          });\r\n          connection.on(\"ReceiveChat\", (chat) => {\r\n            const action = addChat(chat);\r\n            dispatch(action);\r\n            if (chat.creatorUserName === currentUser.userName) {\r\n              dispatch(setSelectedId(chat.id));\r\n            }\r\n          });\r\n          connection.on(\"ReceiveUpdatedChat\", (chat) => {\r\n            const action = editChat(chat);\r\n            dispatch(action);\r\n          });\r\n          connection.on(\"ReceiveUpdatedGroupAvatar\", (response) => {\r\n            const action = editGroupAvatar(response);\r\n            dispatch(action);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          var message =\r\n            typeof error === \"string\" ? error : \"Something went wrong!\";\r\n\r\n          console.error(\"Connection failed: \", error);\r\n          openPopup(\"Connection failed\", message);\r\n        });\r\n    }\r\n    return () => {\r\n      if (connection && connection.connectionStarted) {\r\n        connection.stop();\r\n      }\r\n    };\r\n  }, [connection]);\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    dispatch(setPopup(popup));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark:bg-gray-900 dark:text-white  animate-fade grid grid-cols-12 h-screen w-screen\">\r\n        <div\r\n          className={\r\n            \"animate-fade lg:col-span-3 md:col-span-4 col-span-12 md:flex flex-col h-screen border-r-2 px-4 dark:border-gray-700 border-gray-200 \" +\r\n            (selectedId !== 0 ? \" hidden\" : \"\")\r\n          }\r\n        >\r\n          <Header logout={logout} />\r\n          <ChatList />\r\n        </div>\r\n        {!selectedId ? (\r\n          chats?.length === 0 ? (\r\n            <div className=\"animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex h-full w-full \">\r\n              You do not have any chats, please create a chat\r\n            </div>\r\n          ) : (\r\n            <div className=\"animate-fade hidden text-lg items-center justify-center lg:col-span-9 md:col-span-8 col-span-12 md:flex h-full w-full \">\r\n              Select a chat to start\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"animate-fade lg:col-span-9 md:col-span-8 col-span-12 flex h-screen w-full overflow-y-auto\">\r\n            <ChatWindow chat={chats.find((chat) => chat.id === selectedId)} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/forbid.7d678d5c.jpg\";","import React from \"react\";\r\nimport ForbidImg from \"assets/img/forbid.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Forbid({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ForbidImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"You don't have permission to access this resources\"}\r\n      </span>\r\n      <Link to=\"/\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forbid;\r\n","export default __webpack_public_path__ + \"static/media/login-page.dc5637a7.jpg\";","import Button from \"components/Button\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport userApi from \"api/userApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCurrentUser } from \"app/userSlice\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (username && password) {\r\n      setIsDirty(true);\r\n    } else {\r\n      setIsDirty(false);\r\n    }\r\n  }, [username, password]);\r\n  function login(e) {\r\n    e.preventDefault();\r\n\r\n    const request = { username, password };\r\n    setError(\"\");\r\n\r\n    userApi\r\n      .login(request)\r\n      .then((response) => {\r\n        dispatch(getCurrentUser());\r\n        window.localStorage.setItem(\"token\", response);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        var message =\r\n          typeof error === \"string\"\r\n            ? error\r\n            : \"Username or password is incorrect\";\r\n        setError(message);\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n      <img\r\n        src={LoginPageImage}\r\n        alt=\"login\"\r\n        className=\"md:block hidden col-span-3 w-full ml-44\"\r\n      />\r\n      <form\r\n        onSubmit={(e) => login(e)}\r\n        className=\"container rounded-2xl flex flex-col py-10 md:w-auto md:col-span-4\"\r\n      >\r\n        <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n          Login to TeeChat\r\n        </h1>\r\n        {error && (\r\n          <span className=\"bg-red-500 rounded-md text-white text-lg mb-2 py-2 text-center\">\r\n            {error ?? \"Username or password is incorrect\"}\r\n          </span>\r\n        )}\r\n        <div className=\"space-y-2 mb-3\">\r\n          <label htmlFor=\"username\" className=\"text-lg font-semibold px-1\">\r\n            Username or email address\r\n          </label>\r\n          <input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2 mb-2\">\r\n          <label htmlFor=\"password\" className=\"text-lg font-semibold px-1\">\r\n            Password\r\n          </label>\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"bg-gray-100 rounded-lg w-full py-2 px-4 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          disabled={!isDirty}\r\n          content=\"Login\"\r\n          className=\"mb-4 mt-2 font-bold\"\r\n        />\r\n        <div className=\"text-center\">\r\n          Not a member?{\" \"}\r\n          <Link to=\"/register\" className=\"text-green-500 font-bold\">\r\n            Sign up now\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/not-found.500f302c.jpg\";","import React from \"react\";\r\nimport NotFoundImg from \"assets/img/not-found.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={NotFoundImg} alt=\"Error\" />\r\n      <span className=\" font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Not found resources\"}\r\n      </span>\r\n      <Link to=\"/\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm, useWatch } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nimport userApi from \"api/userApi\";\r\nimport { setIsLoading } from \"app/appSlice\";\r\nimport LoginPageImage from \"assets/img/login-page.jpg\";\r\nimport Button from \"components/Button\";\r\nimport Popup from \"components/Popup\";\r\n\r\nfunction Register() {\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [isExistsUserName, setIsExistsUserName] = useState(true);\r\n  const [popup, setPopup] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n    title: \"Notification\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // yup validation\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"First Name is required\"),\r\n    lastName: yup.string().required(\"Last Name is required\"),\r\n    userName: yup\r\n      .string()\r\n      .required(\"User Name is required\")\r\n      .min(6, \"Username must be 6-20 characters\")\r\n      .max(20, \"Username must be 6-20 characters\")\r\n      .test(\r\n        \"checkUsername\",\r\n        \"Username does not contain special characters\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=[a-zA-Z0-9._])(?!.*[_.]{2})[^_.].*[^_.]$\",\r\n          );\r\n        },\r\n      )\r\n      .test(\r\n        \"existsUsername\",\r\n        \"Username is already taken\",\r\n        (value) => !isExistsUserName,\r\n      ),\r\n    email: yup\r\n      .string()\r\n      .required(\"Email is required\")\r\n      .test(\"checkEmail\", \"Email is invalid\", (value) => {\r\n        return checkRegex(\r\n          value,\r\n          /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n        );\r\n      }),\r\n    password: yup\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .test(\r\n        \"checkPassword\",\r\n        \"Passwords must be at least 6 characters, one digit, one uppercase, one non alphanumeric character\",\r\n        (value) => {\r\n          return checkRegex(\r\n            value,\r\n            \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$^+=!*()@%&]).{8,}$\",\r\n          );\r\n        },\r\n      ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Confirm Password is required\")\r\n      .test(\r\n        \"ConfirmPasswordMatch\",\r\n        \"Password and Confirmation Password must match\",\r\n        (confirmPassword) => {\r\n          return confirmPassword === watch.password;\r\n        },\r\n      ),\r\n  });\r\n\r\n  // react hook form\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    setError,\r\n    clearErrors,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {},\r\n  });\r\n  const watch = useWatch({\r\n    control,\r\n  });\r\n\r\n  useEffect(() => {\r\n    userApi.checkUserNameExists(watch.userName).then((response) => {\r\n      if (response.isExists) {\r\n        setError(\r\n          \"userName\",\r\n          {\r\n            type: \"required\",\r\n            message: `Username '${watch.userName}' is already taken`,\r\n          },\r\n          { shouldFocus: true },\r\n        );\r\n        setIsExistsUserName(true);\r\n      } else {\r\n        clearErrors(\"userName\");\r\n        setIsExistsUserName(false);\r\n      }\r\n    });\r\n  }, [watch.userName]);\r\n\r\n  useEffect(() => {\r\n    const onChange = () => {\r\n      var isValid =\r\n        watch.firstName &&\r\n        watch.lastName &&\r\n        watch.userName &&\r\n        watch.email &&\r\n        watch.password &&\r\n        watch.confirmPassword;\r\n\r\n      if (isValid) {\r\n        setIsChanged(true);\r\n        return;\r\n      }\r\n      setIsChanged(false);\r\n    };\r\n\r\n    onChange();\r\n  }, [watch]);\r\n\r\n  // handle submit\r\n  const onSubmit = (content) => {\r\n    dispatch(setIsLoading(true));\r\n\r\n    userApi\r\n      .register(content)\r\n      .then((response) => {\r\n        openPopup(\r\n          \"Success\",\r\n          <span>\r\n            \"Create account successfully! Please{\" \"}\r\n            <Link className=\"font-bold text-green-600\" to=\"/login\">\r\n              log in\r\n            </Link>\r\n            !\"\r\n          </span>,\r\n        );\r\n        reset({});\r\n      })\r\n      .catch((error) => {\r\n        const message =\r\n          typeof error === \"string\"\r\n            ? error\r\n            : \"Cannot create account. Something went wrong!\";\r\n        openPopup(\"Create account failed\", message);\r\n      });\r\n    dispatch(setIsLoading(false));\r\n  };\r\n\r\n  function openPopup(title, content) {\r\n    const popup = {\r\n      isOpen: true,\r\n      title: title,\r\n      content: content,\r\n    };\r\n    setPopup(popup);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        title={popup.title}\r\n        isOpen={popup.isOpen}\r\n        content={popup.content}\r\n        onClick={() => {\r\n          setPopup({ isOpen: false });\r\n          history.push(\"/login\");\r\n        }}\r\n      />\r\n      <div className=\"z-10 h-screen grid md:grid-cols-7 place-items-center px-6\">\r\n        <img\r\n          src={LoginPageImage}\r\n          alt=\"login\"\r\n          className=\"md:block hidden col-span-3 w-full ml-44\"\r\n        />\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"container rounded-2xl flex flex-col py-10 md:w-full md:col-span-4 md:px-20 lg:px-30\"\r\n        >\r\n          <h1 className=\"text-3xl font-bold text-primary text-green-600 text-center mb-8\">\r\n            Sign up to TeeChat\r\n          </h1>\r\n          <div className=\"mb-3 grid grid-cols-2 place-items-start \">\r\n            <div className=\"col-span-1 space-y-2 mr-2\">\r\n              <label htmlFor=\"fistName\" className=\"text-lg font-semibold \">\r\n                First Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"firstName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.firstName?.message}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 space-y-2 ml-2\">\r\n              <label htmlFor=\"lastName\" className=\"text-lg font-semibold \">\r\n                Last Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                {...register(\"lastName\")}\r\n                type=\"text\"\r\n                className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n              />\r\n              <div className=\"text-red-500 text-sm\">\r\n                {errors.lastName?.message}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"userName\" className=\"text-lg font-semibold \">\r\n              Username <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"userName\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.userName?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-3\">\r\n            <label htmlFor=\"email\" className=\"text-lg font-semibold \">\r\n              Email <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              {...register(\"email\")}\r\n              type=\"text\"\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200 mb-2\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">{errors.email?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"password\" className=\"text-lg font-semibold \">\r\n              Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"password\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.password?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-2 mb-2\">\r\n            <label htmlFor=\"confirmPassword\" className=\"text-lg font-semibold \">\r\n              Confirm Password <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"confirmPassword\")}\r\n              className=\"bg-gray-100 rounded-lg w-full py-2 px-3 focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 outline-none transition-all duration-200\"\r\n            />\r\n            <div className=\"text-red-500 text-sm\">\r\n              {errors.confirmPassword?.message}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            disabled={!isChanged}\r\n            content=\"Sign Up\"\r\n            className=\"mb-4 mt-2 font-bold\"\r\n          />\r\n          <div className=\"text-center\">\r\n            Already a member?{\" \"}\r\n            <Link to=\"/login\" className=\"text-green-500 font-bold\">\r\n              Sign in\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\nfunction checkRegex(value, regex) {\r\n  if (value && regex) {\r\n    var pattern = new RegExp(regex);\r\n    var res = pattern.test(value);\r\n    return res;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.c72c9a3e.jpg\";","import React from \"react\";\r\nimport ErrorImg from \"assets/img/error.jpg\";\r\nimport Button from \"components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ServerError({ message }) {\r\n  return (\r\n    <div className=\"fixed h-screen w-screen flex flex-col justify-center items-center space-y-8 px-2\">\r\n      <img className=\"md:w-1/3 object-cover\" src={ErrorImg} alt=\"Error\" />\r\n      <span className=\"font-bold text-2xl md:text-3xl text-center\">\r\n        {message ?? \"Oops! Something went wrong!\"}\r\n      </span>\r\n      <Link to=\"/\">\r\n        <Button content=\"Return home page\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","import { setPopup } from \"app/appSlice\";\r\nimport Loader from \"components/Loader\";\r\nimport Popup from \"components/Popup\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Chat from \"./pages/Chat\";\r\nimport Forbid from \"./pages/Forbid\";\r\nimport Login from \"./pages/Login\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Register from \"./pages/Register\";\r\nimport ServerError from \"./pages/ServerError\";\r\n\r\nfunction App() {\r\n  const isLoading = useSelector((state) => state.app.isLoading);\r\n  const popup = useSelector((state) => state.app.popup);\r\n  const dispatch = useDispatch();\r\n\r\n  function closePopup() {\r\n    dispatch(setPopup({ isOpen: false }));\r\n  }\r\n  return (\r\n    <>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Loader isOpen={isLoading} className=\"z-50\" />\r\n        <Popup\r\n          title={popup.title}\r\n          isOpen={popup.isOpen}\r\n          content={popup.content}\r\n          onClick={closePopup}\r\n        />\r\n\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/chats\" />\r\n\r\n          <Route path=\"/chats\" component={Chat} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/notfound\" component={NotFound} />\r\n          <Route path=\"/forbid\" component={Forbid} />\r\n          <Route path=\"/ServerError\" component={ServerError} />\r\n          <Route component={Chat} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"app/store\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}